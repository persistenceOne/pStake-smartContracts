{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9602618427dC30C4658161Cfab54125D653395F2",
    "txHash": "0x82d2859264326ba578114e30a982cfe4d001933fa6ca8f888bfa5c63ee2bb34b"
  },
  "proxies": [
    {
      "address": "0x6CC5AA3AD31DD8BDc8ed25f2936b4988C783bDb1",
      "txHash": "0x78a7bf6e0c138ea40215047a6792dd5eac289c8943ea208cc885e5ca3b5331e3",
      "kind": "transparent"
    },
    {
      "address": "0xce76EB921F853F1d8b3Ce32316F0407dDDE7Ce3f",
      "txHash": "0xf508b85aff1e97330f3d856355a1a1a1679666e714a8caafa681acc7a243799f",
      "kind": "transparent"
    },
    {
      "address": "0x6dC43c411EF6FC464E565e9faD8a14A7CB4fB1f1",
      "txHash": "0xbfb9c37a011195a328a0c7cb97148c31e47b4198cd76831d511d583e7ef85386",
      "kind": "transparent"
    },
    {
      "address": "0x807875A91AA475C0b04414d38DA6203411A5e7D8",
      "txHash": "0x165b1afc54502116468381e22191b678d20db617b82012adc196ecbbb4b667ac",
      "kind": "transparent"
    },
    {
      "address": "0xa32B877d03682f4446649aF455A74E1a07DCD2bc",
      "txHash": "0x00590be38c2d4d0f712e63ccd18111332f1d353981fe47357359f5ed66b7ae22",
      "kind": "transparent"
    },
    {
      "address": "0xc4da201dFbC8714246FDE6cAB96B64b24794633C",
      "txHash": "0xc17e10ed74fb814d7ada1f8167ac7a7f8aa034748633cbcc2b07886bdc56a65a",
      "kind": "transparent"
    },
    {
      "address": "0x2002d585ca31d14fE40D489525cD43771A859A75",
      "txHash": "0x4f509d9d0dae57b4f9ab2bb5401d3413ed25852d7fd03b7c2354a2da163ed072",
      "kind": "transparent"
    },
    {
      "address": "0x9EC5D66F0b75567ae1c37eD64D5135689B8B0379",
      "txHash": "0xb80607a3261ca242baf307638f57dee2ebf5d33a760a29490d70f68c4530f3cf",
      "kind": "transparent"
    },
    {
      "address": "0x005c17AdA255dCeB2d3D1dDD847D362314aaa155",
      "txHash": "0xb9a729bbb15055eea142d91011e319937c97f3eebf368f927d42df3a5a14c57f",
      "kind": "transparent"
    },
    {
      "address": "0xCdf579d5fA7537843eD623C795950aaBb194359d",
      "txHash": "0x212f85dbe67255303e1906739c34e3acb7a7a2faaa0852157a48b81fde4d0c61",
      "kind": "transparent"
    }
  ],
  "impls": {
    "989b27ed68e8ddd776af0d52beae1129f84ec94a38ef96d4125f2156d5e472db": {
      "address": "0x3Bf55b7D043cd61131A908fD1FAB36697F51e83b",
      "txHash": "0xb747d2b18fc6530cd1f4fb36e3c10259de46b1ecd166bf087b362d455858de66",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "UTokens",
            "label": "_stokenContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokens.sol:20"
          },
          {
            "contract": "UTokens",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokens.sol:21"
          },
          {
            "contract": "UTokens",
            "label": "_wrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokens.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b1cd8b5e4195f7446ab2ce512a8f457dcf178f9e0e0a5998a1c593a1e44d44d9": {
      "address": "0x655f092e5dCd88b19578C2104E500E109c35e4D5",
      "txHash": "0xb4bb8f484ee9fb7270776b55fa22c29124351bb1b34d8b35c49ac03e9526526d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokens",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)2114_storage",
            "src": "../project:/contracts/STokens.sol:29"
          },
          {
            "contract": "STokens",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokens.sol:30"
          },
          {
            "contract": "STokens",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokens.sol:32"
          },
          {
            "contract": "STokens",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokens.sol:34"
          },
          {
            "contract": "STokens",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/STokens.sol:37"
          },
          {
            "contract": "STokens",
            "label": "_uTokens",
            "type": "t_contract(IUTokens)36016",
            "src": "../project:/contracts/STokens.sol:38"
          },
          {
            "contract": "STokens",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokens.sol:41"
          },
          {
            "contract": "STokens",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokens.sol:42"
          },
          {
            "contract": "STokens",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/STokens.sol:43"
          },
          {
            "contract": "STokens",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokens.sol:44"
          }
        ],
        "types": {
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokens)36016": {
            "label": "contract IUTokens"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "34b7b017728cb9ea7bd63bd37a2263ad05c7475da9b8cbc349ba5bbf9cebe421": {
      "address": "0x4D9816A719d22241c6e1B33c29726316F38C8e0e",
      "txHash": "0xf303b5c6f7a8aba3ae8084955730ab1e5005a43ef0506cfaed075d184e4d1155",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapper",
            "label": "_uTokens",
            "type": "t_contract(IUTokens)36016",
            "src": "../project:/contracts/TokenWrapper.sol:24"
          },
          {
            "contract": "TokenWrapper",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:27"
          },
          {
            "contract": "TokenWrapper",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:28"
          },
          {
            "contract": "TokenWrapper",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:29"
          },
          {
            "contract": "TokenWrapper",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:30"
          },
          {
            "contract": "TokenWrapper",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:31"
          },
          {
            "contract": "TokenWrapper",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapper.sol:38"
          },
          {
            "contract": "TokenWrapper",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapper.sol:39"
          },
          {
            "contract": "TokenWrapper",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:40"
          }
        ],
        "types": {
          "t_contract(IUTokens)36016": {
            "label": "contract IUTokens"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a376e3085f4cedcfff2a42c89b25f01c44f85c588be4e3f55761d9c4bacc5b7d": {
      "address": "0x056817DAe775DcA656dF38247c068949bf9810a6",
      "txHash": "0xde9b507bb20477ade3f5f08c5eb8f42d555abaaf62e92698473e177906cf85d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStaking",
            "label": "_uTokens",
            "type": "t_contract(IUTokens)36016",
            "src": "../project:/contracts/LiquidStaking.sol:22"
          },
          {
            "contract": "LiquidStaking",
            "label": "_sTokens",
            "type": "t_contract(ISTokens)34348",
            "src": "../project:/contracts/LiquidStaking.sol:23"
          },
          {
            "contract": "LiquidStaking",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:26"
          },
          {
            "contract": "LiquidStaking",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:27"
          },
          {
            "contract": "LiquidStaking",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:28"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:29"
          },
          {
            "contract": "LiquidStaking",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:30"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:36"
          },
          {
            "contract": "LiquidStaking",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:37"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:38"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:39"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStaking.sol:42"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStaking.sol:45"
          },
          {
            "contract": "LiquidStaking",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStaking.sol:48"
          }
        ],
        "types": {
          "t_contract(IUTokens)36016": {
            "label": "contract IUTokens"
          },
          "t_contract(ISTokens)34348": {
            "label": "contract ISTokens"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3e39b0197a6f1a6857891160f8036ede29c39d6fea7e4f482f53a520989f237e": {
      "address": "0xE7893b49e94C50fC4aD55c0C81fc58B0ff6B9c29",
      "txHash": "0x047cd12e5b65c95590905e1043f0a81ca6cd7c8b1f0eba505e4906aa91faed35",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "UTokensV2",
            "label": "_stokenContract",
            "type": "t_address",
            "src": "../project:/contracts/UtokensV2.sol:24"
          },
          {
            "contract": "UTokensV2",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/UtokensV2.sol:25"
          },
          {
            "contract": "UTokensV2",
            "label": "_wrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/UtokensV2.sol:26"
          },
          {
            "contract": "UTokensV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/UtokensV2.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "89bfe316907f09a5b59b26d4ab781b381f5aefb5cd1a647110aaf2e88ea19c8a": {
      "address": "0x304DD333a5D0EC33E893AFC67e5107D69eE052Fb",
      "txHash": "0x3dab435507cff8f2c65eeb87b8d71eb8608a46d5f37a807acc3f9e11eab1a0dc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:26"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_holderWhitelists",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:33"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_whitelistedSTokenAddresses",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:35"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_whitelistedAddressHolder",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:38"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_holderLPToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:40"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_holderSTokens",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:42"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f4fd66f89a393b3e7389d28822079a61bafacdc2aaa8c686d39ab84c3cf44574": {
      "address": "0x72EeB008a563A633977Eb939c5e1fDa08b611D10",
      "txHash": "0x3f03d4fb42d66f9b5fb422b9071adc2acc87086e188ed2b72ba2d72c65ed1b20",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokensV2",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)2114_storage",
            "src": "../project:/contracts/STokensV2.sol:33"
          },
          {
            "contract": "STokensV2",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV2.sol:35"
          },
          {
            "contract": "STokensV2",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV2.sol:37"
          },
          {
            "contract": "STokensV2",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV2.sol:39"
          },
          {
            "contract": "STokensV2",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV2.sol:42"
          },
          {
            "contract": "STokensV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)34933",
            "src": "../project:/contracts/STokensV2.sol:44"
          },
          {
            "contract": "STokensV2",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV2.sol:47"
          },
          {
            "contract": "STokensV2",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV2.sol:48"
          },
          {
            "contract": "STokensV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV2.sol:49"
          },
          {
            "contract": "STokensV2",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV2.sol:50"
          },
          {
            "contract": "STokensV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV2.sol:53"
          },
          {
            "contract": "STokensV2",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV2.sol:55"
          }
        ],
        "types": {
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokensV2)34933": {
            "label": "contract IUTokensV2"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "72fced9553367ee49f89da271ae8f98f709a1a5e9fc05cd40560de2c5da72588": {
      "address": "0xBEc850C8D02EF859007ecE4672509a76714F923e",
      "txHash": "0x80d46a4303e7900ed541035bcc7830685cf52ad7379c75c47c7dbee04f359933",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)36088",
            "src": "../project:/contracts/TokenWrapperV2.sol:26"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:29"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:30"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:31"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:32"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:33"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV2.sol:40"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV2.sol:41"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:42"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:45"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)36088": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3f94ed8ae4ac5972c46f155c9bb249c58bcde18a93c087f521fe153d43a8a138": {
      "address": "0x9c703323e3c0f4326bdBA8d65Ba37AF3f7295295",
      "txHash": "0x39be72180ecf47838a310db19f59b9bd6dee54aa2720b74b36e69262b4ec0fc0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)36088",
            "src": "../project:/contracts/LiquidStakingV2.sol:25"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV2)34596",
            "src": "../project:/contracts/LiquidStakingV2.sol:26"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:29"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:30"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:31"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:32"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:33"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:39"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:40"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:41"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:42"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV2.sol:45"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV2.sol:48"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStakingV2.sol:51"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:54"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_batchingLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:56"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)36088": {
            "label": "contract IUTokensV2"
          },
          "t_contract(ISTokensV2)34596": {
            "label": "contract ISTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "28bca57e0ef44b9d96f57fc3328728e828d36c63821596127533b95b2e93ee6b": {
      "address": "0x00881632596A8cDB2F4cce2248c380f0f093F22E",
      "txHash": "0x5bba0c115f7f7a78e8a3aded4cad5ac5f824e7446b1ea8bbd57f1558561861a6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_stakeLPContract",
            "type": "t_address",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:29"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:31"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:33"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_holderContractList",
            "type": "t_struct(AddressSet)2114_storage",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:40"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardTokenList",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:42"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardTokenListIndex",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:44"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardTokenEmission",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:47"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_cumulativeRewardAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:50"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardEmissionTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:54"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardSink",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:58"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_lastLPTimeShareTimestampArray",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:64"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_cumulativeNewSupplyLPTimeShare",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:66"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardPoolUserTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "421c717a0a887dc5c324424331f0d5934bcd025ec182448ba06d440fd4f6a9a7": {
      "address": "0x97221cdF3B3651519D1714729F350C60EE2E4A2A",
      "txHash": "0x2f9052c6c00e8193613d404ce20a00e3eb652f7667f3241f62994dbde93ce4e2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "StakeLP",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLP.sol:35"
          },
          {
            "contract": "StakeLP",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLP.sol:37"
          },
          {
            "contract": "StakeLP",
            "label": "_lpBalance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLP.sol:44"
          },
          {
            "contract": "StakeLP",
            "label": "_lpSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLP.sol:46"
          },
          {
            "contract": "StakeLP",
            "label": "_lastLPTimeShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLP.sol:48"
          },
          {
            "contract": "StakeLP",
            "label": "_lastLiquidityTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLP.sol:50"
          },
          {
            "contract": "StakeLP",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLP.sol:57"
          },
          {
            "contract": "StakeLP",
            "label": "_whitelistedRewardEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLP.sol:59"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a070d83b3f9ecc6829cc9c9828cf8668ff3cf697c4a4b266f160bb5403f8cc38": {
      "address": "0x1deb34691d1C5005888b5728333B67db73Ee4CBf",
      "txHash": "0xcc8d9c57550585b299b0b15a42bf86f2292864f0f14d613fcc4cbc146c6d388b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "HolderSushiswap_STKATOM_ETH",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/holder/HolderSushiswap_STKATOM_ETH.sol:28"
          },
          {
            "contract": "HolderSushiswap_STKATOM_ETH",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/holder/HolderSushiswap_STKATOM_ETH.sol:31"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "731399d0640f679324ed659d56750a62bf2733a0137a106ca1d6b451bf721d85": {
      "address": "0xD1ca3bFD73DD6E92517f7e67290489A5b3B16A2C",
      "txHash": "0x9bc38c2224706dd551c173a532b7f54a76c277bbe1621cebfe42500a87a65bee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "StakeLPV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV2.sol:35"
          },
          {
            "contract": "StakeLPV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV2.sol:37"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lpBalance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV2.sol:44"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lpSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV2.sol:46"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lastLPTimeShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV2.sol:48"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lastLiquidityTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV2.sol:50"
          },
          {
            "contract": "StakeLPV2",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV2.sol:57"
          },
          {
            "contract": "StakeLPV2",
            "label": "_whitelistedRewardEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV2.sol:59"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b7d5bf148509c7238abd4e5e91112b0e66b70e24fa1d20e58c96e2c8c961b3ca": {
      "address": "0x405e02654725528365e104e0F99e34bb04F5B756",
      "txHash": "0x24d604aeae0d5aac7dc5e4be011d76231ce5180660fef7da46f9a34b52646ae5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_stakeLPContract",
            "type": "t_address",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:29"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:31"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:33"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_holderContractList",
            "type": "t_struct(AddressSet)2114_storage",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:40"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardTokenList",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:42"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardTokenListIndex",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:44"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardTokenEmission",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:47"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_cumulativeRewardAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:50"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardEmissionTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:54"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardSink",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:58"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_lastLPTimeShareTimestampArray",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:64"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_cumulativeNewSupplyLPTimeShare",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:66"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardPoolUserTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5f5ae1d9ea572094cea0accf8ea46cebbc30dbe0bf68ef8f202ac2ed4c5a44ce": {
      "address": "0x7dD41C5ba715C50289101621344165F483Ff7Ec0",
      "txHash": "0x9bfaf02301a9c1753fcce41a8eda06922c659441457b7f54d5e06d1c54120ab8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_stakeLPContract",
            "type": "t_address",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:29"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:31"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:33"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_holderContractList",
            "type": "t_struct(AddressSet)2114_storage",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:40"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardTokenList",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:42"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardTokenListIndex",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:44"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardTokenEmission",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:47"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_cumulativeRewardAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:50"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardEmissionTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:54"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardSink",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:58"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_lastLPTimeShareTimestampArray",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:64"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_cumulativeNewSupplyLPTimeShare",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:66"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardPoolUserTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9ccfd4e5caa548b83210b84c8d468d9df07d82c92885cf833f269473925d91b3": {
      "address": "0x61d109e081cd5b0fC564bC9dF7669Dc436B9F451",
      "txHash": "0x85cbb45947bbffee3ce02c69a3e2114883aa201742c2e9a180644b7b3b6f2207",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)36088",
            "src": "../project:/contracts/TokenWrapperV3.sol:26"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:29"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:30"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:31"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:32"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:33"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV3.sol:40"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV3.sol:41"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:42"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:45"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)36088": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6183126ce2bfc785f7f6ccf0e6930b88a69502ec58a0412dc6d4325ec613c3dc": {
      "address": "0x431198697Eb1453e1ad2a9dccE18be80270Ac3d7",
      "txHash": "0x05d8b5a6df448dfd974ee5fce1d080dd195382c1098acdd90d564e27ad25a421",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)39957",
            "src": "../project:/contracts/LiquidStakingV3.sol:26"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV2)38230",
            "src": "../project:/contracts/LiquidStakingV3.sol:27"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:30"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:31"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:32"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:33"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:34"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:40"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:41"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:42"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:43"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV3.sol:46"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV3.sol:49"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStakingV3.sol:52"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:55"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_batchingLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:58"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_tokenWrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/LiquidStakingV3.sol:61"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)39957": {
            "label": "contract IUTokensV2"
          },
          "t_contract(ISTokensV2)38230": {
            "label": "contract ISTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c048a59c22ca498b948ed2a64424b7d227e6957f6396a5c6d620916ac1fac643": {
      "address": "0x7939c01b93519aD7aa3449d99504aDdDeaC90580",
      "txHash": "0x8704ad677181f2b0fd0e1dfd276634bf00d6d478aa0b7156858d91662cd0c999",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "StakeLPV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV3.sol:37"
          },
          {
            "contract": "StakeLPV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV3.sol:39"
          },
          {
            "contract": "StakeLPV3",
            "label": "_lpBalance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV3.sol:46"
          },
          {
            "contract": "StakeLPV3",
            "label": "_lpSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV3.sol:48"
          },
          {
            "contract": "StakeLPV3",
            "label": "_lastLPTimeShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV3.sol:50"
          },
          {
            "contract": "StakeLPV3",
            "label": "_lastLiquidityTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV3.sol:52"
          },
          {
            "contract": "StakeLPV3",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV3.sol:59"
          },
          {
            "contract": "StakeLPV3",
            "label": "_whitelistedRewardEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV3.sol:61"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a86247a711b319370166e1e653c71a83070583803844a6eae4087c7484b963fd": {
      "address": "0xf0EFa8E457D853216587A446cc19B1cD11acf5a3",
      "txHash": "0x3216d7a2eae08304c980d4d65b9158ab0831e9f3516f32d4a0afc6b1be7106a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)34933",
            "src": "../project:/contracts/TokenWrapperV4.sol:26"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:29"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:30"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:31"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:32"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:33"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV4.sol:40"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV4.sol:41"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:42"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:45"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)34933": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "698fa7dd88d6ba6d7c3805bb18b349908b0045cdcc9b870d3c8ceb10ca5aeab4": {
      "address": "0x17Ab25ea1713e32c8628536988813e0111D27f19",
      "txHash": "0x265b36f3c7bed278a6a79b478a0e1d013d5ce601b70a5a7d6ac779772c37acdc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "HolderSushiswap_STKATOM_ETHV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/holder/HolderSushiswap_STKATOM_ETHV2.sol:31"
          },
          {
            "contract": "HolderSushiswap_STKATOM_ETHV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/holder/HolderSushiswap_STKATOM_ETHV2.sol:34"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ff109a92f54089fe3ffcc272cd85b483f9955417e8f27ee3d60a3982893c99b3": {
      "address": "0x44A568611964678cE68214B60640F15de3a17cF0",
      "txHash": "0xd4db41f45d62ba3198baf070fabda3fb64a0f2beb04644c40302ec009fc4a498",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "StakeLPV4",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV4.sol:37"
          },
          {
            "contract": "StakeLPV4",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV4.sol:39"
          },
          {
            "contract": "StakeLPV4",
            "label": "_lpBalance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV4.sol:46"
          },
          {
            "contract": "StakeLPV4",
            "label": "_lpSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV4.sol:48"
          },
          {
            "contract": "StakeLPV4",
            "label": "_lastLPTimeShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV4.sol:50"
          },
          {
            "contract": "StakeLPV4",
            "label": "_lastLiquidityTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV4.sol:52"
          },
          {
            "contract": "StakeLPV4",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV4.sol:59"
          },
          {
            "contract": "StakeLPV4",
            "label": "_whitelistedRewardEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV4.sol:61"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "84d826c50761a5ce96270f61d9d32d375393519cec3e6faeeb19ac826b7d55f3": {
      "address": "0x3FC78ab1999fe8F1e9D6164155Ec668c9824B6Ff",
      "txHash": "0x9d09b428d6f7155ed35a1278ab77fd40d71ab21612efb960d41f82a27fa1ef53",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedPTokenEmissionV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedPTokenEmissionV2.sol:26"
          },
          {
            "contract": "WhitelistedPTokenEmissionV2",
            "label": "_holderWhitelists",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedPTokenEmissionV2.sol:33"
          },
          {
            "contract": "WhitelistedPTokenEmissionV2",
            "label": "_whitelistedSTokenAddresses",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/WhitelistedPTokenEmissionV2.sol:35"
          },
          {
            "contract": "WhitelistedPTokenEmissionV2",
            "label": "_whitelistedAddressHolder",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/WhitelistedPTokenEmissionV2.sol:38"
          },
          {
            "contract": "WhitelistedPTokenEmissionV2",
            "label": "_holderLPToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/WhitelistedPTokenEmissionV2.sol:40"
          },
          {
            "contract": "WhitelistedPTokenEmissionV2",
            "label": "_holderSTokens",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedPTokenEmissionV2.sol:42"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "38913ded305523887082dfadd1ade9ee7f39c9d0d46826c860c831a7986edb76": {
      "address": "0x06d7896b64Ca63fc81DEF29ce774ebd951D81494",
      "txHash": "0xe4b09a0bfb188d2dfedec5dc60118e1d4a8a1be907fb881ad6e99c86e3197a6e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokensV3",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)2114_storage",
            "src": "../project:/contracts/STokensV3.sol:33"
          },
          {
            "contract": "STokensV3",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV3.sol:35"
          },
          {
            "contract": "STokensV3",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV3.sol:37"
          },
          {
            "contract": "STokensV3",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV3.sol:39"
          },
          {
            "contract": "STokensV3",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV3.sol:42"
          },
          {
            "contract": "STokensV3",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)39957",
            "src": "../project:/contracts/STokensV3.sol:45"
          },
          {
            "contract": "STokensV3",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV3.sol:48"
          },
          {
            "contract": "STokensV3",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV3.sol:49"
          },
          {
            "contract": "STokensV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV3.sol:50"
          },
          {
            "contract": "STokensV3",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV3.sol:51"
          },
          {
            "contract": "STokensV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV3.sol:54"
          },
          {
            "contract": "STokensV3",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV3.sol:56"
          },
          {
            "contract": "STokensV3",
            "label": "_migrationAdminContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV3.sol:59"
          }
        ],
        "types": {
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokensV2)39957": {
            "label": "contract IUTokensV2"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a498a4f97e66801e4625cd0ec6568101665d9ac68943a463d2ed5635a21b217b": {
      "address": "0x2297D5b9CA41B2C6c50C52746B208FBA2EbDD255",
      "txHash": "0x5252919c0f9bd153ae00b2046d628d02c34f0aa6b6885fed515a287747865836",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)36551",
            "src": "../project:/contracts/TokenWrapperV5.sol:26"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV5.sol:29"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV5.sol:30"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV5.sol:31"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV5.sol:32"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV5.sol:33"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV5.sol:40"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV5.sol:41"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV5.sol:42"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV5.sol:45"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_migrationAdminContract",
            "type": "t_address",
            "src": "../project:/contracts/TokenWrapperV5.sol:48"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)36551": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "80b96d3fe9ab34277e12a1dca9c46be0bbe65d862a36afd29d2eda8028525cbd": {
      "address": "0x32B4545e5Ee5FA2eD929d128D49ed23f29502387",
      "txHash": "0x46417cd007b435d1767c94e94110a080ded61db958c6dc7fb470c9b9c4caeb47",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "MigrationAdmin",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV3)35396",
            "src": "../project:/contracts/MigrationAdmin.sol:24"
          },
          {
            "contract": "MigrationAdmin",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV3)34055",
            "src": "../project:/contracts/MigrationAdmin.sol:25"
          },
          {
            "contract": "MigrationAdmin",
            "label": "_tokenWrapper",
            "type": "t_contract(ITokenWrapperV3)35034",
            "src": "../project:/contracts/MigrationAdmin.sol:26"
          },
          {
            "contract": "MigrationAdmin",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdmin.sol:32"
          },
          {
            "contract": "MigrationAdmin",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdmin.sol:33"
          },
          {
            "contract": "MigrationAdmin",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/MigrationAdmin.sol:34"
          }
        ],
        "types": {
          "t_contract(IUTokensV3)35396": {
            "label": "contract IUTokensV3"
          },
          "t_contract(ISTokensV3)34055": {
            "label": "contract ISTokensV3"
          },
          "t_contract(ITokenWrapperV3)35034": {
            "label": "contract ITokenWrapperV3"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f14332648dbe7468b960131abc0ed7c298c44ca6752f96943d8e171073208600": {
      "address": "0x70804D33ccF2EFac0D1bcA0947Aa261f34B73095",
      "txHash": "0x32116cd409004b75133c5bdd62a26243362dbd401b39514fa1eaa1f9c00d02d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "MigrationAdminV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV3)36615",
            "src": "../project:/contracts/MigrationAdminV2.sol:24"
          },
          {
            "contract": "MigrationAdminV2",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV3)35083",
            "src": "../project:/contracts/MigrationAdminV2.sol:25"
          },
          {
            "contract": "MigrationAdminV2",
            "label": "_tokenWrapper",
            "type": "t_contract(ITokenWrapperV3)36062",
            "src": "../project:/contracts/MigrationAdminV2.sol:26"
          },
          {
            "contract": "MigrationAdminV2",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV2.sol:32"
          },
          {
            "contract": "MigrationAdminV2",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV2.sol:33"
          },
          {
            "contract": "MigrationAdminV2",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/MigrationAdminV2.sol:34"
          }
        ],
        "types": {
          "t_contract(IUTokensV3)36615": {
            "label": "contract IUTokensV3"
          },
          "t_contract(ISTokensV3)35083": {
            "label": "contract ISTokensV3"
          },
          "t_contract(ITokenWrapperV3)36062": {
            "label": "contract ITokenWrapperV3"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "888a09c70ad7cb1f2a7fd66427b32514ce7bcb3dbd545743cb3a947fb81571e6": {
      "address": "0x225b565cDe0c25Bcd57000B5325faCeB1b10c4C4",
      "txHash": "0x0bb523276e611b6397cad2b45852e42fbeb307b5400cb8648b272f91e702377c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)36551",
            "src": "../project:/contracts/TokenWrapperV6.sol:26"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV6.sol:29"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV6.sol:30"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV6.sol:31"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV6.sol:32"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV6.sol:33"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV6.sol:40"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV6.sol:41"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV6.sol:42"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV6.sol:45"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_migrationAdminContract",
            "type": "t_address",
            "src": "../project:/contracts/TokenWrapperV6.sol:48"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)36551": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "70c1150abbb676f1232392169582d17032716a70ea2352f104e843518ac64c54": {
      "address": "0x2ab0a382E2193C0316bEFA7f3d927b97678716D9",
      "txHash": "0xb02ea316efaabc7ef9d7baad369e247d329feb26a7cbb5235d0e0a350d8d979a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "MigrationAdminV3",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV3)40021",
            "src": "../project:/contracts/MigrationAdminV3.sol:24"
          },
          {
            "contract": "MigrationAdminV3",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV3)38489",
            "src": "../project:/contracts/MigrationAdminV3.sol:25"
          },
          {
            "contract": "MigrationAdminV3",
            "label": "_tokenWrapper",
            "type": "t_contract(ITokenWrapperV5)39825",
            "src": "../project:/contracts/MigrationAdminV3.sol:26"
          },
          {
            "contract": "MigrationAdminV3",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV3.sol:32"
          },
          {
            "contract": "MigrationAdminV3",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV3.sol:33"
          },
          {
            "contract": "MigrationAdminV3",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/MigrationAdminV3.sol:34"
          }
        ],
        "types": {
          "t_contract(IUTokensV3)40021": {
            "label": "contract IUTokensV3"
          },
          "t_contract(ISTokensV3)38489": {
            "label": "contract ISTokensV3"
          },
          "t_contract(ITokenWrapperV5)39825": {
            "label": "contract ITokenWrapperV5"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d1e0e7636459e460e56d831d924c83b8b338202106fa55810f0ec3c9fb8358dd": {
      "address": "0x26B3ff7730A22Fb1b09F265DA0B3637eFE26D774",
      "txHash": "0x06f5c3da7fd31e82a428180d2fc562eb88f3b97851d33200d05ecfd27889453e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokensV4",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)2114_storage",
            "src": "../project:/contracts/STokensV4.sol:33"
          },
          {
            "contract": "STokensV4",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV4.sol:35"
          },
          {
            "contract": "STokensV4",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV4.sol:37"
          },
          {
            "contract": "STokensV4",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV4.sol:39"
          },
          {
            "contract": "STokensV4",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV4.sol:42"
          },
          {
            "contract": "STokensV4",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)39957",
            "src": "../project:/contracts/STokensV4.sol:45"
          },
          {
            "contract": "STokensV4",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV4.sol:48"
          },
          {
            "contract": "STokensV4",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV4.sol:49"
          },
          {
            "contract": "STokensV4",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV4.sol:50"
          },
          {
            "contract": "STokensV4",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV4.sol:51"
          },
          {
            "contract": "STokensV4",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV4.sol:54"
          },
          {
            "contract": "STokensV4",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV4.sol:56"
          },
          {
            "contract": "STokensV4",
            "label": "_migrationAdminContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV4.sol:59"
          }
        ],
        "types": {
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokensV2)39957": {
            "label": "contract IUTokensV2"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cb61f8611328f520c9829656472cc0a53f064fb40fc5ff18ef4ab3b4dc10de5f": {
      "address": "0x0aba94368EFea574Cc2C6E0c8f286279A7D26561",
      "txHash": "0xfb369aacdb08e5932b61e162e24eedd0ffd346ce56a46f98851988410b9de2bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)39957",
            "src": "../project:/contracts/LiquidStakingV4.sol:26"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV2)38230",
            "src": "../project:/contracts/LiquidStakingV4.sol:27"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:30"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:31"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:32"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:33"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:34"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:40"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:41"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:42"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:43"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV4.sol:46"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV4.sol:49"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStakingV4.sol:52"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:55"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_batchingLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:58"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_tokenWrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/LiquidStakingV4.sol:61"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_ifPaused",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidStakingV4.sol:67"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_migrationAdminContract",
            "type": "t_address",
            "src": "../project:/contracts/LiquidStakingV4.sol:70"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)39957": {
            "label": "contract IUTokensV2"
          },
          "t_contract(ISTokensV2)38230": {
            "label": "contract ISTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e4c87164caf20f69fb8edd2f16a88835bf8662ec3a1d1425a6ec6a20fbe4e7ef": {
      "address": "0x51e7fDdF35aC06734452D57049B0f281cF310c80",
      "txHash": "0x6b076d1b3522147d6d3dcbc6bccf7d6f699746b80a0943e44ce16b08be18ac90",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV3)40538",
            "src": "../project:/contracts/MigrationAdminV4.sol:25"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV3)39006",
            "src": "../project:/contracts/MigrationAdminV4.sol:26"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "_tokenWrapper",
            "type": "t_contract(ITokenWrapperV5)40342",
            "src": "../project:/contracts/MigrationAdminV4.sol:27"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV4.sol:33"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV4.sol:34"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/MigrationAdminV4.sol:35"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "cosmosHrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV4.sol:36"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/MigrationAdminV4.sol:39"
          }
        ],
        "types": {
          "t_contract(IUTokensV3)40538": {
            "label": "contract IUTokensV3"
          },
          "t_contract(ISTokensV3)39006": {
            "label": "contract ISTokensV3"
          },
          "t_contract(ITokenWrapperV5)40342": {
            "label": "contract ITokenWrapperV5"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5832c59022ddf26e7cab9252c5e26f45dee4daedfcb23a6cf72b5e4bc965d092": {
      "address": "0xD16F95B9Ef2Cf8399d7a9A6Cc73D38E32Bd73269",
      "txHash": "0x8cf3951e6f316287fb3030e68408c41bd21034061bc752868f49b9d88c649365",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "MigrationAdminV5",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV3)40538",
            "src": "../project:/contracts/MigrationAdminV5.sol:25"
          },
          {
            "contract": "MigrationAdminV5",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV3)39006",
            "src": "../project:/contracts/MigrationAdminV5.sol:26"
          },
          {
            "contract": "MigrationAdminV5",
            "label": "_tokenWrapper",
            "type": "t_contract(ITokenWrapperV5)40342",
            "src": "../project:/contracts/MigrationAdminV5.sol:27"
          },
          {
            "contract": "MigrationAdminV5",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV5.sol:33"
          },
          {
            "contract": "MigrationAdminV5",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV5.sol:34"
          },
          {
            "contract": "MigrationAdminV5",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/MigrationAdminV5.sol:35"
          },
          {
            "contract": "MigrationAdminV5",
            "label": "cosmosHrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV5.sol:36"
          },
          {
            "contract": "MigrationAdminV5",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/MigrationAdminV5.sol:39"
          }
        ],
        "types": {
          "t_contract(IUTokensV3)40538": {
            "label": "contract IUTokensV3"
          },
          "t_contract(ISTokensV3)39006": {
            "label": "contract ISTokensV3"
          },
          "t_contract(ITokenWrapperV5)40342": {
            "label": "contract ITokenWrapperV5"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
