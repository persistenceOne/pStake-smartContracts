{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x87e88fca07EBe68c18e93d18983eD409857d2Cbf",
    "txHash": "0x599455513f80060cd790ad8b70b63679a1e14ebf20d0de97d20ca4b3584ef8f6"
  },
  "proxies": [
    {
      "address": "0x697b5c034E2305E5Db392535f19B75271D392769",
      "txHash": "0xd27c6ccdf1b88f4b37b74544ee4258a85f103d84a24beb724266a454e562b40a",
      "kind": "transparent"
    },
    {
      "address": "0x6a4d087118EE1B4430BeCF39C33192CA0978e1D4",
      "txHash": "0x1b420b27d81a399a65bc234f293fdeaaac0169b8e004d04aea707938b2ed3b70",
      "kind": "transparent"
    },
    {
      "address": "0xa9ab9e8f468B33a2C772f0f458B698F5E83c75d7",
      "txHash": "0x1f4eb7daf2df20f745bb9f3212192c279daff0a41393eccd3cac8b2e228fbb1f",
      "kind": "transparent"
    },
    {
      "address": "0xDc46f844398Af0a1a1501C64C2943a4aEb90d207",
      "txHash": "0xfdb7532ad8f0b725cd430c16422f3c796e176e2e2e3c9e4fbf7ab0f1ef4ec662",
      "kind": "transparent"
    }
  ],
  "impls": {
    "13af42f054fbcd4521e1624e64d969d41f94a4c1e774849b2b1f1f36bd8a20fb": {
      "address": "0x0A1b9493Cf40d44F827e8D07eB141e08bF42Eecf",
      "txHash": "0x4e7eec635480954411d400a66027fb0c67e6c8e5fdd81125243b84e46a30db91",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "UTokensXPRT",
            "label": "_stokenContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokensXPRT.sol:24"
          },
          {
            "contract": "UTokensXPRT",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokensXPRT.sol:25"
          },
          {
            "contract": "UTokensXPRT",
            "label": "_wrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokensXPRT.sol:26"
          },
          {
            "contract": "UTokensXPRT",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/UTokensXPRT.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d909122a76f99a516e1a7feba43941d6b7d27978e2039aef5701386b934f3250": {
      "address": "0x7C078b162F5048AA0289208B0e17d87E48095d5b",
      "txHash": "0x41209ac7d455a7a28cb53d3c16b2f98d9c364e35d51113e2f5494f2a6b350d6a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokensXPRT",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)1901_storage",
            "src": "../project:/contracts/STokensXPRT.sol:33"
          },
          {
            "contract": "STokensXPRT",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensXPRT.sol:35"
          },
          {
            "contract": "STokensXPRT",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensXPRT.sol:37"
          },
          {
            "contract": "STokensXPRT",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensXPRT.sol:39"
          },
          {
            "contract": "STokensXPRT",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensXPRT.sol:42"
          },
          {
            "contract": "STokensXPRT",
            "label": "_uTokens",
            "type": "t_contract(IUTokensXPRT)13110",
            "src": "../project:/contracts/STokensXPRT.sol:44"
          },
          {
            "contract": "STokensXPRT",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensXPRT.sol:47"
          },
          {
            "contract": "STokensXPRT",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensXPRT.sol:48"
          },
          {
            "contract": "STokensXPRT",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensXPRT.sol:49"
          },
          {
            "contract": "STokensXPRT",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensXPRT.sol:50"
          },
          {
            "contract": "STokensXPRT",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensXPRT.sol:53"
          },
          {
            "contract": "STokensXPRT",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensXPRT.sol:55"
          }
        ],
        "types": {
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokensXPRT)13110": {
            "label": "contract IUTokensXPRT"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aae6931fbcc0056e36f4e470994de83696ef6b251010da56e59c6f30f842382b": {
      "address": "0xf83743877E9406A71f77b839C56D2cc3cb22A14A",
      "txHash": "0x1c8f384ecadd2d1a16855438c36515758bd862acf416acd67791dc9055634ed7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_uTokens",
            "type": "t_contract(IUTokensXPRT)13110",
            "src": "../project:/contracts/TokenWrapperXPRT.sol:26"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRT.sol:29"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRT.sol:30"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRT.sol:31"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRT.sol:32"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRT.sol:33"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperXPRT.sol:40"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperXPRT.sol:41"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRT.sol:42"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRT.sol:45"
          }
        ],
        "types": {
          "t_contract(IUTokensXPRT)13110": {
            "label": "contract IUTokensXPRT"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3f94ed8ae4ac5972c46f155c9bb249c58bcde18a93c087f521fe153d43a8a138": {
      "address": "0xd94EfAed2847275b7316a3d1c757648fa3476C51",
      "txHash": "0x81c40c46c65f69352af681a9984f1278ea21734b96db847f27982f29f2870499",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_uTokens",
            "type": "t_contract(IUTokensXPRT)13110",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:25"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_sTokens",
            "type": "t_contract(ISTokensXPRT)12554",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:26"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:29"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:30"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:31"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:32"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:33"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:39"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:40"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:41"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:42"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:45"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:48"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:51"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:54"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_batchingLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRT.sol:56"
          }
        ],
        "types": {
          "t_contract(IUTokensXPRT)13110": {
            "label": "contract IUTokensXPRT"
          },
          "t_contract(ISTokensXPRT)12554": {
            "label": "contract ISTokensXPRT"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "230f0925e40d106e116bef08c728942ce9a7b85a5068702f1eff788ea56cf847": {
      "address": "0x524fA41d44B616f5E2A9A68f38c0df8a18e148a4",
      "txHash": "0xf10f024c7855c63983f7c37a88cd3274a647fde533c2b4ad3c0f4c7b2e8ca28d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "UTokensXPRTV2",
            "label": "_stokenContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokensXPRTV2.sol:24"
          },
          {
            "contract": "UTokensXPRTV2",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokensXPRTV2.sol:25"
          },
          {
            "contract": "UTokensXPRTV2",
            "label": "_wrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokensXPRTV2.sol:26"
          },
          {
            "contract": "UTokensXPRTV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/UTokensXPRTV2.sol:29"
          },
          {
            "contract": "UTokensXPRTV2",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/UTokensXPRTV2.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "713f3738413eede01b823f08e39d08806cbf6efc6519c9fe5c6896f9ddd2fb7c": {
      "address": "0x7f02c48a95f2AE9649c567ee027596665E1B2189",
      "txHash": "0x29cfe8063d168ec4850534789765fe53a425b135945178c4ac9d922964216917",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokensXPRTV2",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)1901_storage",
            "src": "../project:/contracts/STokensXPRTV2.sol:33"
          },
          {
            "contract": "STokensXPRTV2",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensXPRTV2.sol:35"
          },
          {
            "contract": "STokensXPRTV2",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensXPRTV2.sol:37"
          },
          {
            "contract": "STokensXPRTV2",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensXPRTV2.sol:39"
          },
          {
            "contract": "STokensXPRTV2",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensXPRTV2.sol:42"
          },
          {
            "contract": "STokensXPRTV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensXPRT)13110",
            "src": "../project:/contracts/STokensXPRTV2.sol:44"
          },
          {
            "contract": "STokensXPRTV2",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensXPRTV2.sol:47"
          },
          {
            "contract": "STokensXPRTV2",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensXPRTV2.sol:48"
          },
          {
            "contract": "STokensXPRTV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensXPRTV2.sol:49"
          },
          {
            "contract": "STokensXPRTV2",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensXPRTV2.sol:50"
          },
          {
            "contract": "STokensXPRTV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensXPRTV2.sol:53"
          },
          {
            "contract": "STokensXPRTV2",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensXPRTV2.sol:56"
          },
          {
            "contract": "STokensXPRTV2",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/STokensXPRTV2.sol:59"
          }
        ],
        "types": {
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokensXPRT)13110": {
            "label": "contract IUTokensXPRT"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e2137fceec3a9f8d13460379e8805220745d26d59951c1185ebf7c9f6227d2df": {
      "address": "0xF8Fe17D3b09aC6cCC1753b66B155F4777A6AEB57",
      "txHash": "0xf24f65319049fa87ca06d3e0129d6646bdd60fd28da069491017761089ff8e76",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperXPRTV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensXPRT)13110",
            "src": "../project:/contracts/TokenWrapperXPRTV2.sol:26"
          },
          {
            "contract": "TokenWrapperXPRTV2",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRTV2.sol:29"
          },
          {
            "contract": "TokenWrapperXPRTV2",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRTV2.sol:30"
          },
          {
            "contract": "TokenWrapperXPRTV2",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRTV2.sol:31"
          },
          {
            "contract": "TokenWrapperXPRTV2",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRTV2.sol:32"
          },
          {
            "contract": "TokenWrapperXPRTV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRTV2.sol:33"
          },
          {
            "contract": "TokenWrapperXPRTV2",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperXPRTV2.sol:40"
          },
          {
            "contract": "TokenWrapperXPRTV2",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperXPRTV2.sol:41"
          },
          {
            "contract": "TokenWrapperXPRTV2",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRTV2.sol:42"
          },
          {
            "contract": "TokenWrapperXPRTV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRTV2.sol:45"
          }
        ],
        "types": {
          "t_contract(IUTokensXPRT)13110": {
            "label": "contract IUTokensXPRT"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ce500738d5a305a2fe722a607a76720d8714175e2cb8494f7189a32619b253fd": {
      "address": "0xb6DC81C7eD1321a863A785Fd1F22ee26c8A941dB",
      "txHash": "0xa81cfee41bae9dfcf7fd68b116db76c0dc8b15fc48ef07728fb44163b2c03b72",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensXPRT)13110",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:26"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_sTokens",
            "type": "t_contract(ISTokensXPRT)12554",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:27"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:30"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:31"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:32"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:33"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:34"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:40"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:41"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:42"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:43"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:46"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:49"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:52"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:55"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_batchingLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:57"
          },
          {
            "contract": "LiquidStakingXPRTV2",
            "label": "_tokenWrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/LiquidStakingXPRTV2.sol:60"
          }
        ],
        "types": {
          "t_contract(IUTokensXPRT)13110": {
            "label": "contract IUTokensXPRT"
          },
          "t_contract(ISTokensXPRT)12554": {
            "label": "contract ISTokensXPRT"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a86247a711b319370166e1e653c71a83070583803844a6eae4087c7484b963fd": {
      "address": "0xb2bd7D2c86638dEc9A51F58D3F1dC23f8cdedBAb",
      "txHash": "0x87ed759f12b0e3d0210b46eb92c1558f8fdcc4ca07a3081fc340976c71280302",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperXPRTV3",
            "label": "_uTokens",
            "type": "t_contract(IUTokensXPRT)13110",
            "src": "../project:/contracts/TokenWrapperXPRTV3.sol:26"
          },
          {
            "contract": "TokenWrapperXPRTV3",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRTV3.sol:29"
          },
          {
            "contract": "TokenWrapperXPRTV3",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRTV3.sol:30"
          },
          {
            "contract": "TokenWrapperXPRTV3",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRTV3.sol:31"
          },
          {
            "contract": "TokenWrapperXPRTV3",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRTV3.sol:32"
          },
          {
            "contract": "TokenWrapperXPRTV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRTV3.sol:33"
          },
          {
            "contract": "TokenWrapperXPRTV3",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperXPRTV3.sol:40"
          },
          {
            "contract": "TokenWrapperXPRTV3",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperXPRTV3.sol:41"
          },
          {
            "contract": "TokenWrapperXPRTV3",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRTV3.sol:42"
          },
          {
            "contract": "TokenWrapperXPRTV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperXPRTV3.sol:45"
          }
        ],
        "types": {
          "t_contract(IUTokensXPRT)13110": {
            "label": "contract IUTokensXPRT"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6183126ce2bfc785f7f6ccf0e6930b88a69502ec58a0412dc6d4325ec613c3dc": {
      "address": "0x1Df05303F67E4e31daEC401794aA577CDD7a4a50",
      "txHash": "0x9d61d650bc8e3eebd93fd594eb75fc0b6ecf531909c1f9fdb998898e8cbaecf3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_uTokens",
            "type": "t_contract(IUTokensXPRT)13110",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:26"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_sTokens",
            "type": "t_contract(ISTokensXPRT)12554",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:27"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:30"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:31"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:32"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:33"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:34"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:40"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:41"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:42"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:43"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:46"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:49"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:52"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:55"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_batchingLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:58"
          },
          {
            "contract": "LiquidStakingXPRTV3",
            "label": "_tokenWrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/LiquidStakingXPRTV3.sol:61"
          }
        ],
        "types": {
          "t_contract(IUTokensXPRT)13110": {
            "label": "contract IUTokensXPRT"
          },
          "t_contract(ISTokensXPRT)12554": {
            "label": "contract ISTokensXPRT"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
