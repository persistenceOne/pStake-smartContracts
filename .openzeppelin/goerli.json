{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xE5D4e5b56272DC870FD5C523B075B7976Ff93aCf",
    "txHash": "0x87783cb3885b78304f05033ed31e3bb4f7014fdebe53b2f75c19d4ec49579aa4"
  },
  "proxies": [
    {
      "address": "0x48F3cF8e8437486572f03cc31aF0C07Fb112e157",
      "txHash": "0x621109e7eb2f7655636968b8d3ac53dd4637681afa41f62d45a05a85d5a9f344",
      "kind": "transparent"
    },
    {
      "address": "0xF1f8106592CeEDeE5b7fcc6aB50f5fEf4997f708",
      "txHash": "0xe6af2f11f21b7c6590808bc0004f1270483a27432446f9b1d1335e4858a0b6bf",
      "kind": "transparent"
    },
    {
      "address": "0x8ab007Abe71422798f1b8d33E44a85FA81877Ada",
      "txHash": "0xf309bdfa05ec46e1930d8e1721e5241f1bab288e91af4820fefaf26f7d7f10e3",
      "kind": "transparent"
    },
    {
      "address": "0x4921F81c232983367Cc8227D39993cF99971C66b",
      "txHash": "0xce94304fe3f4306dd7cb8378ea2046a6c9b61f5df1598c3ca5166ca3dabbd97b",
      "kind": "transparent"
    },
    {
      "address": "0x528845e337a6392B998cBA73D162e0F4e7a8aC6c",
      "txHash": "0x87013ad634cb5e4c34e6d04fda2b96882f1bf8484cf3f9fa0048a22cb2c5f587",
      "kind": "transparent"
    },
    {
      "address": "0x6a0EdC4fBb44E6131821271dFb3b8F02eef86490",
      "txHash": "0xe1b0259c134772cb729fb8ded9f1e8c587c9ffe68ac830b27549b12e46697fd8",
      "kind": "transparent"
    },
    {
      "address": "0x714A3370DC9AcD3aa1f0b00768355c8aFDde1CF6",
      "txHash": "0xec76de0b930a3269d0f8ec3574c3cfeac2d9b5751489153b88997a8fc632dc8a",
      "kind": "transparent"
    },
    {
      "address": "0xa1E00a64eBc50A2176D3d5beD8753b799e69f45B",
      "txHash": "0x4c47882544a97c713270a33fc5e807ad9f9ed2b6c51dae4e3bb31b5d8f842088",
      "kind": "transparent"
    },
    {
      "address": "0x93De286De2ef1EA9446b885302Faf3DEFBAc2C94",
      "txHash": "0x99b77280b61ea016254b6e88afa1bf910e22e3da124eb592c4c560332d5fba1b",
      "kind": "transparent"
    }
  ],
  "impls": {
    "989b27ed68e8ddd776af0d52beae1129f84ec94a38ef96d4125f2156d5e472db": {
      "address": "0x92b771aBFFC2557F3187fd71e3d1d538A158a0f2",
      "txHash": "0x4624ebe577423da044ee9aedb72c3325065f5f740fb8bb91a8a27dd5f765f9a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "UTokens",
            "label": "_stokenContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokens.sol:16"
          },
          {
            "contract": "UTokens",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokens.sol:17"
          },
          {
            "contract": "UTokens",
            "label": "_wrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokens.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b1cd8b5e4195f7446ab2ce512a8f457dcf178f9e0e0a5998a1c593a1e44d44d9": {
      "address": "0x75296a69B921634077B566e214D52E53be37eAd3",
      "txHash": "0xfa8677f2e939ecd30f3a9dbb02f89bb4d1488ec3852d5a4bb7a84e195c323241",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokens",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)1901_storage",
            "src": "../project:/contracts/STokens.sol:25"
          },
          {
            "contract": "STokens",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokens.sol:26"
          },
          {
            "contract": "STokens",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokens.sol:28"
          },
          {
            "contract": "STokens",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokens.sol:30"
          },
          {
            "contract": "STokens",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/STokens.sol:33"
          },
          {
            "contract": "STokens",
            "label": "_uTokens",
            "type": "t_contract(IUTokens)22895",
            "src": "../project:/contracts/STokens.sol:35"
          },
          {
            "contract": "STokens",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokens.sol:38"
          },
          {
            "contract": "STokens",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokens.sol:39"
          },
          {
            "contract": "STokens",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/STokens.sol:40"
          },
          {
            "contract": "STokens",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokens.sol:41"
          }
        ],
        "types": {
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokens)22895": {
            "label": "contract IUTokens"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "34b7b017728cb9ea7bd63bd37a2263ad05c7475da9b8cbc349ba5bbf9cebe421": {
      "address": "0xB0629Fe13ADD69c858e7E84398007f5a0239Dfd4",
      "txHash": "0x8cb8db6d8ce50adf27cd0351d29f08d350c3a325ca0e98c050095e5ba5e74c21",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapper",
            "label": "_uTokens",
            "type": "t_contract(IUTokens)22895",
            "src": "../project:/contracts/TokenWrapper.sol:20"
          },
          {
            "contract": "TokenWrapper",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:23"
          },
          {
            "contract": "TokenWrapper",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:24"
          },
          {
            "contract": "TokenWrapper",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:25"
          },
          {
            "contract": "TokenWrapper",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:26"
          },
          {
            "contract": "TokenWrapper",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:27"
          },
          {
            "contract": "TokenWrapper",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapper.sol:34"
          },
          {
            "contract": "TokenWrapper",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapper.sol:35"
          },
          {
            "contract": "TokenWrapper",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:36"
          }
        ],
        "types": {
          "t_contract(IUTokens)22895": {
            "label": "contract IUTokens"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a376e3085f4cedcfff2a42c89b25f01c44f85c588be4e3f55761d9c4bacc5b7d": {
      "address": "0x95389a68dbf7275381E2aCE2a4C333A0F8F72530",
      "txHash": "0x0537dfe9acbd5556c1f8f8c83ef7f39a7acf488f47884a3c36ba14257b4847f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStaking",
            "label": "_uTokens",
            "type": "t_contract(IUTokens)22895",
            "src": "../project:/contracts/LiquidStaking.sol:18"
          },
          {
            "contract": "LiquidStaking",
            "label": "_sTokens",
            "type": "t_contract(ISTokens)21908",
            "src": "../project:/contracts/LiquidStaking.sol:19"
          },
          {
            "contract": "LiquidStaking",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:22"
          },
          {
            "contract": "LiquidStaking",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:23"
          },
          {
            "contract": "LiquidStaking",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:24"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:25"
          },
          {
            "contract": "LiquidStaking",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:26"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:32"
          },
          {
            "contract": "LiquidStaking",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:33"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:34"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:35"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStaking.sol:38"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStaking.sol:41"
          },
          {
            "contract": "LiquidStaking",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStaking.sol:44"
          }
        ],
        "types": {
          "t_contract(IUTokens)22895": {
            "label": "contract IUTokens"
          },
          "t_contract(ISTokens)21908": {
            "label": "contract ISTokens"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3e39b0197a6f1a6857891160f8036ede29c39d6fea7e4f482f53a520989f237e": {
      "address": "0x3834F2D5D66Fa1e78d1053c6C4e6016FF433Aa6E",
      "txHash": "0x6f7a0475b1d2627f5eb9e30f1e4ae4cf3ce6d9b7d1f4cf179834e5e9a3af1c35",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "UTokensV2",
            "label": "_stokenContract",
            "type": "t_address",
            "src": "../project:/contracts/UtokensV2.sol:20"
          },
          {
            "contract": "UTokensV2",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/UtokensV2.sol:21"
          },
          {
            "contract": "UTokensV2",
            "label": "_wrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/UtokensV2.sol:22"
          },
          {
            "contract": "UTokensV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/UtokensV2.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "89bfe316907f09a5b59b26d4ab781b381f5aefb5cd1a647110aaf2e88ea19c8a": {
      "address": "0x6a1FA705A7073f0615fBD76e15CD17e14B3A23B7",
      "txHash": "0x766db93553bbc991f7b05d334c8dc3f2cd7cb603cffc069e80a14bcedf701455",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:22"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_holderWhitelists",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:29"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_whitelistedSTokenAddresses",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:31"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_whitelistedAddressHolder",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:34"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_holderLPToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:36"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_holderSTokens",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:38"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f4fd66f89a393b3e7389d28822079a61bafacdc2aaa8c686d39ab84c3cf44574": {
      "address": "0x880851a0eDa76C1937388F6186E8deD4BF99892b",
      "txHash": "0xac33144582df251964f473488bf17decd7e3008b942d95b57a464c8bf330c93d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokensV2",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)1901_storage",
            "src": "../project:/contracts/STokensV2.sol:29"
          },
          {
            "contract": "STokensV2",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV2.sol:31"
          },
          {
            "contract": "STokensV2",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV2.sol:33"
          },
          {
            "contract": "STokensV2",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV2.sol:35"
          },
          {
            "contract": "STokensV2",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV2.sol:38"
          },
          {
            "contract": "STokensV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)22967",
            "src": "../project:/contracts/STokensV2.sol:40"
          },
          {
            "contract": "STokensV2",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV2.sol:43"
          },
          {
            "contract": "STokensV2",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV2.sol:44"
          },
          {
            "contract": "STokensV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV2.sol:45"
          },
          {
            "contract": "STokensV2",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV2.sol:46"
          },
          {
            "contract": "STokensV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV2.sol:49"
          },
          {
            "contract": "STokensV2",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV2.sol:51"
          }
        ],
        "types": {
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokensV2)22967": {
            "label": "contract IUTokensV2"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "72fced9553367ee49f89da271ae8f98f709a1a5e9fc05cd40560de2c5da72588": {
      "address": "0xef2b16EE00eb62fcd6e60Df674F775BfCB32e27b",
      "txHash": "0xe200f252a16cbec3f8553e1126f954622aa92b0c21a8be386e0c6927f376468a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)22967",
            "src": "../project:/contracts/TokenWrapperV2.sol:22"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:25"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:26"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:27"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:28"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:29"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV2.sol:36"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV2.sol:37"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:38"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:41"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)22967": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3f94ed8ae4ac5972c46f155c9bb249c58bcde18a93c087f521fe153d43a8a138": {
      "address": "0xC890cCB1D161C3eAbc7961c5CF39c0D4bd13D1cE",
      "txHash": "0x176fbdf27b2607f7086a343258fe390a7a12277fd8aa4f1f0439e5b6f003bca6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)22967",
            "src": "../project:/contracts/LiquidStakingV2.sol:21"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV2)22156",
            "src": "../project:/contracts/LiquidStakingV2.sol:22"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:25"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:26"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:27"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:28"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:29"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:35"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:36"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:37"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:38"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV2.sol:41"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV2.sol:44"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStakingV2.sol:47"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:50"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_batchingLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:52"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)22967": {
            "label": "contract IUTokensV2"
          },
          "t_contract(ISTokensV2)22156": {
            "label": "contract ISTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "28bca57e0ef44b9d96f57fc3328728e828d36c63821596127533b95b2e93ee6b": {
      "address": "0xFF19494E1bfd5640153C9F26524d8E469334152b",
      "txHash": "0x976339d4c36977e98b679a0b11e892c314c2cda8e6b45db3d4843d1b9f026183",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_stakeLPContract",
            "type": "t_address",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:25"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:27"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:29"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_holderContractList",
            "type": "t_struct(AddressSet)1901_storage",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:36"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardTokenList",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:38"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardTokenListIndex",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:40"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardTokenEmission",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:43"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_cumulativeRewardAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:46"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardEmissionTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:50"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardSink",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:54"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_lastLPTimeShareTimestampArray",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:60"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_cumulativeNewSupplyLPTimeShare",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:62"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardPoolUserTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "421c717a0a887dc5c324424331f0d5934bcd025ec182448ba06d440fd4f6a9a7": {
      "address": "0x5758128909C1303b3b8Ef3d3bd0Fc1BeD87032c6",
      "txHash": "0xb1c6d083a662ac5469a0d02cc1a4088d86382f3030c8e6e9a2c933a72fc002e2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "StakeLP",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLP.sol:31"
          },
          {
            "contract": "StakeLP",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLP.sol:33"
          },
          {
            "contract": "StakeLP",
            "label": "_lpBalance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLP.sol:40"
          },
          {
            "contract": "StakeLP",
            "label": "_lpSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLP.sol:42"
          },
          {
            "contract": "StakeLP",
            "label": "_lastLPTimeShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLP.sol:44"
          },
          {
            "contract": "StakeLP",
            "label": "_lastLiquidityTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLP.sol:46"
          },
          {
            "contract": "StakeLP",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLP.sol:57"
          },
          {
            "contract": "StakeLP",
            "label": "_whitelistedRewardEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLP.sol:59"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a070d83b3f9ecc6829cc9c9828cf8668ff3cf697c4a4b266f160bb5403f8cc38": {
      "address": "0x2Ad19ab641746B71841492f7f0e0422Ee3f957cC",
      "txHash": "0x471d1da73cb36f32cf350b6f878d7edccde9f84ee768520828ccaff426797dd9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "HolderUniswap_STKATOM_ETH",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/holder/HolderUniswap_STKATOM_ETH.sol:24"
          },
          {
            "contract": "HolderUniswap_STKATOM_ETH",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/holder/HolderUniswap_STKATOM_ETH.sol:27"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "731399d0640f679324ed659d56750a62bf2733a0137a106ca1d6b451bf721d85": {
      "address": "0xC9A71B7EAa44B55b8265E0f76E652193EaEf5066",
      "txHash": "0x70113c31b10c702bc1b0b8169bae2d6b5eb722f109e3a0cf9ec4272f6b819445",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "StakeLPV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV2.sol:31"
          },
          {
            "contract": "StakeLPV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV2.sol:33"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lpBalance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV2.sol:40"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lpSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV2.sol:42"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lastLPTimeShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV2.sol:44"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lastLiquidityTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV2.sol:46"
          },
          {
            "contract": "StakeLPV2",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV2.sol:57"
          },
          {
            "contract": "StakeLPV2",
            "label": "_whitelistedRewardEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV2.sol:59"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b7d5bf148509c7238abd4e5e91112b0e66b70e24fa1d20e58c96e2c8c961b3ca": {
      "address": "0x9Be3744F329a82fE80a007dA578effbc9a4667c3",
      "txHash": "0x12496052a3ab247595387a3a4567f560a31872ef6423b81f428b1c0aea58e39e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_stakeLPContract",
            "type": "t_address",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:25"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:27"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:29"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_holderContractList",
            "type": "t_struct(AddressSet)1901_storage",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:36"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardTokenList",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:38"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardTokenListIndex",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:40"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardTokenEmission",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:43"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_cumulativeRewardAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:46"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardEmissionTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:50"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardSink",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:54"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_lastLPTimeShareTimestampArray",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:60"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_cumulativeNewSupplyLPTimeShare",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:62"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardPoolUserTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "10bd2036926c76b89864fa53dbcf9558dc672dbbfc48284cfee1a77ef2566cd3": {
      "address": "0x0816543CD9526C4C4cdB240c9d35307D0BB29F18",
      "txHash": "0x9b8f1d278c05ec56d7051408f20bde88ecb381246860f624f19ccd9e169c8635",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_stakeLPContract",
            "type": "t_address",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:25"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:27"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:29"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_holderContractList",
            "type": "t_struct(AddressSet)1901_storage",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:36"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardTokenList",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:38"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardTokenListIndex",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:40"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardTokenEmission",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:43"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_cumulativeRewardAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:46"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardEmissionTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:50"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardSink",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:54"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_lastLPTimeShareTimestampArray",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:60"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_cumulativeNewSupplyLPTimeShare",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:62"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardPoolUserTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
