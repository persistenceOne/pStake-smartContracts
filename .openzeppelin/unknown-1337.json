{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x922947b16f63A2bc92B16E08Bb42f89FC297C81e",
    "txHash": "0xd9980c93e81df782f92be6de372e6fb53dab82558cbc7fa75b6999173b88c227"
  },
  "proxies": [
    {
      "address": "0x7476b722d22516f8C2363cC1dCc27B64f0b07888",
      "txHash": "0xfd42a3f345b7f9466b4689019ea66059788ead66bd5e4e6315bef805036febdc",
      "kind": "transparent"
    },
    {
      "address": "0x1FFcAC47c3a3A689fEcd17a021c2C6e207aA0B13",
      "txHash": "0xdce02f5695b66b7316ae472efc98c1296dd7683b4f8278bef2389bced051a2ef",
      "kind": "transparent"
    },
    {
      "address": "0xC38909A646aAA44622eC9c92e47bf7aFE7439B9b",
      "txHash": "0x83b26af702b8f53a0009b1b597a582210ee923cec96f2492f25e148ff40dc389",
      "kind": "transparent"
    },
    {
      "address": "0xb2223EC5Fc707998cc4a824611E4b58EFf8E40F6",
      "txHash": "0x32841b7b8bb867c67c5dd681cedbaf4daf2970b75931a22bfcdfdf624345b4cd",
      "kind": "transparent"
    },
    {
      "address": "0x7c35bd07c367B10012F97b15a3DC5F04D1D3BDf2",
      "txHash": "0x9b09cea9e5ed2c91e788199271ad5a77344aa8c2f390d6bc06fb84a29f73497f",
      "kind": "transparent"
    },
    {
      "address": "0x28A42b6690A98F6F89068ADCb952b4Ab245FEA9f",
      "txHash": "0x47100e3d84a5846f01f5ff1159d35349671c270dc3d7cd76fd429a4e832bc177",
      "kind": "transparent"
    },
    {
      "address": "0xcA7813d20209cB0cEE4132e0Dc8DBB56249c76E8",
      "txHash": "0x76a33b82333a8eacb956c0b81de6adf52bbe7a7e322a83b470841219b2f5ac4f",
      "kind": "transparent"
    },
    {
      "address": "0xCe2488f09c195FB3C98656E8Ef41F2803710bE55",
      "txHash": "0xfadd9db44fe7060f642e2308398b07c8ee5806e49bfd8106f2255e6386ee93ad",
      "kind": "transparent"
    },
    {
      "address": "0x79D349Cc7b05dBb1CF0FaDe1028812C453b5c472",
      "txHash": "0xb4d87249f14e70e842852c20c000c4a6cab483ad7f8d5824ab816165817cf5e4",
      "kind": "transparent"
    },
    {
      "address": "0x3747DA7df710Cc09070aE6Ca85B22147D6b458A6",
      "txHash": "0xbc7f1fe3fabb3145074146807523d85bea38ae1949233ed87eb3649305525024",
      "kind": "transparent"
    }
  ],
  "impls": {
    "989b27ed68e8ddd776af0d52beae1129f84ec94a38ef96d4125f2156d5e472db": {
      "address": "0x5F2C77832BBFb6e207426a1ac5864c449A11dAE0",
      "txHash": "0x22f970bb4af244d5ffd97b346d7027b2b4538556a2d985c81ca9a1527c19b99f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "UTokens",
            "label": "_stokenContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokens.sol:20"
          },
          {
            "contract": "UTokens",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokens.sol:21"
          },
          {
            "contract": "UTokens",
            "label": "_wrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokens.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b1cd8b5e4195f7446ab2ce512a8f457dcf178f9e0e0a5998a1c593a1e44d44d9": {
      "address": "0x85463DD6Cd46AB4924Ab9BEa772F36f56527456D",
      "txHash": "0x2d4ead62bd4c6bc6bd0290b17e98ac3f1fb758855ff017ae29a61a0bdc494caa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokens",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)2114_storage",
            "src": "../project:/contracts/STokens.sol:29"
          },
          {
            "contract": "STokens",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokens.sol:30"
          },
          {
            "contract": "STokens",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokens.sol:32"
          },
          {
            "contract": "STokens",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokens.sol:34"
          },
          {
            "contract": "STokens",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/STokens.sol:37"
          },
          {
            "contract": "STokens",
            "label": "_uTokens",
            "type": "t_contract(IUTokens)39885",
            "src": "../project:/contracts/STokens.sol:38"
          },
          {
            "contract": "STokens",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokens.sol:41"
          },
          {
            "contract": "STokens",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokens.sol:42"
          },
          {
            "contract": "STokens",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/STokens.sol:43"
          },
          {
            "contract": "STokens",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokens.sol:44"
          }
        ],
        "types": {
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokens)39885": {
            "label": "contract IUTokens"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "34b7b017728cb9ea7bd63bd37a2263ad05c7475da9b8cbc349ba5bbf9cebe421": {
      "address": "0xC728992524dF3089930dEe50934D36fd0b5700ca",
      "txHash": "0x387b14caa11b92d02fa9db87114159b88bc63dae9e2afd2dc9fb22a19f66dd53",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapper",
            "label": "_uTokens",
            "type": "t_contract(IUTokens)39885",
            "src": "../project:/contracts/TokenWrapper.sol:24"
          },
          {
            "contract": "TokenWrapper",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:27"
          },
          {
            "contract": "TokenWrapper",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:28"
          },
          {
            "contract": "TokenWrapper",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:29"
          },
          {
            "contract": "TokenWrapper",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:30"
          },
          {
            "contract": "TokenWrapper",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:31"
          },
          {
            "contract": "TokenWrapper",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapper.sol:38"
          },
          {
            "contract": "TokenWrapper",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapper.sol:39"
          },
          {
            "contract": "TokenWrapper",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:40"
          }
        ],
        "types": {
          "t_contract(IUTokens)39885": {
            "label": "contract IUTokens"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a376e3085f4cedcfff2a42c89b25f01c44f85c588be4e3f55761d9c4bacc5b7d": {
      "address": "0x8A5E072F1A589B631a7Bec783C3966a7c829da43",
      "txHash": "0x3bf0ca182fd7b96801eefcd4f1fb92123ce2b7a2abacf630b0a256e04965c2a3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStaking",
            "label": "_uTokens",
            "type": "t_contract(IUTokens)39885",
            "src": "../project:/contracts/LiquidStaking.sol:22"
          },
          {
            "contract": "LiquidStaking",
            "label": "_sTokens",
            "type": "t_contract(ISTokens)37982",
            "src": "../project:/contracts/LiquidStaking.sol:23"
          },
          {
            "contract": "LiquidStaking",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:26"
          },
          {
            "contract": "LiquidStaking",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:27"
          },
          {
            "contract": "LiquidStaking",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:28"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:29"
          },
          {
            "contract": "LiquidStaking",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:30"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:36"
          },
          {
            "contract": "LiquidStaking",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:37"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:38"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:39"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStaking.sol:42"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStaking.sol:45"
          },
          {
            "contract": "LiquidStaking",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStaking.sol:48"
          }
        ],
        "types": {
          "t_contract(IUTokens)39885": {
            "label": "contract IUTokens"
          },
          "t_contract(ISTokens)37982": {
            "label": "contract ISTokens"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3e39b0197a6f1a6857891160f8036ede29c39d6fea7e4f482f53a520989f237e": {
      "address": "0xC52C3922ea36f7A19E84889fCA9Bb4cA80e48C1b",
      "txHash": "0xbadb8ad0d3f8b93ce5d60108887a26149eff1cdfb53835d8f7e15601154b10fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "UTokensV2",
            "label": "_stokenContract",
            "type": "t_address",
            "src": "../project:/contracts/UtokensV2.sol:24"
          },
          {
            "contract": "UTokensV2",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/UtokensV2.sol:25"
          },
          {
            "contract": "UTokensV2",
            "label": "_wrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/UtokensV2.sol:26"
          },
          {
            "contract": "UTokensV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/UtokensV2.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "89bfe316907f09a5b59b26d4ab781b381f5aefb5cd1a647110aaf2e88ea19c8a": {
      "address": "0xb2C4AF1189a13F434891772Fa65DF336ab2Db440",
      "txHash": "0xfade33ead0f1f9c7183116c4a9dd3348ad576747f27ccd8efbb880a154eaa297",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:26"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_holderWhitelists",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:33"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_whitelistedSTokenAddresses",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:35"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_whitelistedAddressHolder",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:38"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_holderLPToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:40"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_holderSTokens",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:42"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f4fd66f89a393b3e7389d28822079a61bafacdc2aaa8c686d39ab84c3cf44574": {
      "address": "0x0c8Bf196137AB391096D4e9231912ce3Ccf71B20",
      "txHash": "0xa3f76723c3726dfccdde04f33639fb6593135fffded29000c65bbc43c78d0836",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokensV2",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)2114_storage",
            "src": "../project:/contracts/STokensV2.sol:33"
          },
          {
            "contract": "STokensV2",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV2.sol:35"
          },
          {
            "contract": "STokensV2",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV2.sol:37"
          },
          {
            "contract": "STokensV2",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV2.sol:39"
          },
          {
            "contract": "STokensV2",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV2.sol:42"
          },
          {
            "contract": "STokensV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)39957",
            "src": "../project:/contracts/STokensV2.sol:44"
          },
          {
            "contract": "STokensV2",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV2.sol:47"
          },
          {
            "contract": "STokensV2",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV2.sol:48"
          },
          {
            "contract": "STokensV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV2.sol:49"
          },
          {
            "contract": "STokensV2",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV2.sol:50"
          },
          {
            "contract": "STokensV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV2.sol:53"
          },
          {
            "contract": "STokensV2",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV2.sol:55"
          }
        ],
        "types": {
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokensV2)39957": {
            "label": "contract IUTokensV2"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "72fced9553367ee49f89da271ae8f98f709a1a5e9fc05cd40560de2c5da72588": {
      "address": "0xD935D1F885902966A33Eca86764e50D318449DDb",
      "txHash": "0x827183982a0c8e8450dc4df70440ffb25e718054343c24d6f97f2ef8dca0d26c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)39957",
            "src": "../project:/contracts/TokenWrapperV2.sol:26"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:29"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:30"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:31"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:32"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:33"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV2.sol:40"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV2.sol:41"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:42"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:45"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)39957": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3f94ed8ae4ac5972c46f155c9bb249c58bcde18a93c087f521fe153d43a8a138": {
      "address": "0x7632938772291E6D4dbF88254Db6c3324E351D3d",
      "txHash": "0x67f15efc8d31da8e1154991d4fb172b4be6166f70bc5001d5bbe7e0a0a1073eb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)39957",
            "src": "../project:/contracts/LiquidStakingV2.sol:25"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV2)38230",
            "src": "../project:/contracts/LiquidStakingV2.sol:26"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:29"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:30"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:31"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:32"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:33"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:39"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:40"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:41"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:42"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV2.sol:45"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV2.sol:48"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStakingV2.sol:51"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:54"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_batchingLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:56"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)39957": {
            "label": "contract IUTokensV2"
          },
          "t_contract(ISTokensV2)38230": {
            "label": "contract ISTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "28bca57e0ef44b9d96f57fc3328728e828d36c63821596127533b95b2e93ee6b": {
      "address": "0x0630a3476B8f1D785AD04a083D9da3fc2Caf0B59",
      "txHash": "0xa20d29d135481798bd2f4be5ab78c7948457ab4ec17b721657c3f99672499673",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_stakeLPContract",
            "type": "t_address",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:29"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:31"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:33"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_holderContractList",
            "type": "t_struct(AddressSet)2114_storage",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:40"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardTokenList",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:42"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardTokenListIndex",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:44"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardTokenEmission",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:47"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_cumulativeRewardAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:50"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardEmissionTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:54"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardSink",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:58"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_lastLPTimeShareTimestampArray",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:64"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_cumulativeNewSupplyLPTimeShare",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:66"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardPoolUserTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "421c717a0a887dc5c324424331f0d5934bcd025ec182448ba06d440fd4f6a9a7": {
      "address": "0x447C3B3113BD3329fF12D44c22f2163196b43e15",
      "txHash": "0xb248d44d1f10a116220bda3137dff3af2a774f991feff683c01f0ee5697cc114",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "StakeLP",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLP.sol:35"
          },
          {
            "contract": "StakeLP",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLP.sol:37"
          },
          {
            "contract": "StakeLP",
            "label": "_lpBalance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLP.sol:44"
          },
          {
            "contract": "StakeLP",
            "label": "_lpSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLP.sol:46"
          },
          {
            "contract": "StakeLP",
            "label": "_lastLPTimeShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLP.sol:48"
          },
          {
            "contract": "StakeLP",
            "label": "_lastLiquidityTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLP.sol:50"
          },
          {
            "contract": "StakeLP",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLP.sol:57"
          },
          {
            "contract": "StakeLP",
            "label": "_whitelistedRewardEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLP.sol:59"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a070d83b3f9ecc6829cc9c9828cf8668ff3cf697c4a4b266f160bb5403f8cc38": {
      "address": "0xF99Fe89cB3CAC61062C18AdcDF235badDcb13e78",
      "txHash": "0xc02ec48a525e5c737f5ac4bf06ba32eb5eebf68c16b41950da4a548f3853e459",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "HolderSushiswap_STKATOM_ETH",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/holder/HolderSushiswap_STKATOM_ETH.sol:28"
          },
          {
            "contract": "HolderSushiswap_STKATOM_ETH",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/holder/HolderSushiswap_STKATOM_ETH.sol:31"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "731399d0640f679324ed659d56750a62bf2733a0137a106ca1d6b451bf721d85": {
      "address": "0xf337043B708f60D72271F216A9A5806aa75dC4Bf",
      "txHash": "0xb8d551ce9e99776f88ba00954e32c5619cc6e64adcb4e8066b3cf533b8ff4488",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "StakeLPV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV2.sol:35"
          },
          {
            "contract": "StakeLPV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV2.sol:37"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lpBalance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV2.sol:44"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lpSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV2.sol:46"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lastLPTimeShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV2.sol:48"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lastLiquidityTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV2.sol:50"
          },
          {
            "contract": "StakeLPV2",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV2.sol:57"
          },
          {
            "contract": "StakeLPV2",
            "label": "_whitelistedRewardEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV2.sol:59"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b7d5bf148509c7238abd4e5e91112b0e66b70e24fa1d20e58c96e2c8c961b3ca": {
      "address": "0x003822aaACB48a43e4d70C23093e3088b889A0Da",
      "txHash": "0x77d3446f55031d690d01eb8fdb505a99a5b546154b01e1667d914d7a81b0fd0b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_stakeLPContract",
            "type": "t_address",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:29"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:31"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:33"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_holderContractList",
            "type": "t_struct(AddressSet)2114_storage",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:40"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardTokenList",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:42"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardTokenListIndex",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:44"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardTokenEmission",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:47"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_cumulativeRewardAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:50"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardEmissionTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:54"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardSink",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:58"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_lastLPTimeShareTimestampArray",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:64"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_cumulativeNewSupplyLPTimeShare",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:66"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardPoolUserTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV2.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5f5ae1d9ea572094cea0accf8ea46cebbc30dbe0bf68ef8f202ac2ed4c5a44ce": {
      "address": "0x64a3A5d6489C6a4dDa5D0A319f648F2438f8623c",
      "txHash": "0x02ed52d6537196d1e6ac9059651ee952fc666f7f3614cfd84e052d4fe61ffe70",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_stakeLPContract",
            "type": "t_address",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:29"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:31"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:33"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_holderContractList",
            "type": "t_struct(AddressSet)2114_storage",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:40"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardTokenList",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:42"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardTokenListIndex",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:44"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardTokenEmission",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:47"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_cumulativeRewardAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:50"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardEmissionTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:54"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardSink",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:58"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_lastLPTimeShareTimestampArray",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:64"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_cumulativeNewSupplyLPTimeShare",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:66"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardPoolUserTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9ccfd4e5caa548b83210b84c8d468d9df07d82c92885cf833f269473925d91b3": {
      "address": "0xC0F77C000a7E79b7DA4B2E16734861E9A68E4cdd",
      "txHash": "0x743e45a0614e2ee68129ac791b572b0aaa6b181ef79ca31c527a66f0558c6715",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)39957",
            "src": "../project:/contracts/TokenWrapperV3.sol:26"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:29"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:30"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:31"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:32"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:33"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV3.sol:40"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV3.sol:41"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:42"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:45"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)39957": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6183126ce2bfc785f7f6ccf0e6930b88a69502ec58a0412dc6d4325ec613c3dc": {
      "address": "0x927dd0295cdb36D54fAA2514C3b122085730A845",
      "txHash": "0xb54bc4ffa1898aaa082e704cc38287ccf3ea7be3efd3a04e49731c55950f3552",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)39957",
            "src": "../project:/contracts/LiquidStakingV3.sol:26"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV2)38230",
            "src": "../project:/contracts/LiquidStakingV3.sol:27"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:30"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:31"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:32"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:33"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:34"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:40"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:41"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:42"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:43"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV3.sol:46"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV3.sol:49"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStakingV3.sol:52"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:55"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_batchingLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:58"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_tokenWrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/LiquidStakingV3.sol:61"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)39957": {
            "label": "contract IUTokensV2"
          },
          "t_contract(ISTokensV2)38230": {
            "label": "contract ISTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c048a59c22ca498b948ed2a64424b7d227e6957f6396a5c6d620916ac1fac643": {
      "address": "0x438f026a4Eb05753BDc21fdE2f89812408537f97",
      "txHash": "0xf4891b6e55927e7bf5743c7ff23fe0ef05beaa9709d8c4eb8b1e8cf8ba27a80f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "StakeLPV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV3.sol:37"
          },
          {
            "contract": "StakeLPV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV3.sol:39"
          },
          {
            "contract": "StakeLPV3",
            "label": "_lpBalance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV3.sol:46"
          },
          {
            "contract": "StakeLPV3",
            "label": "_lpSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV3.sol:48"
          },
          {
            "contract": "StakeLPV3",
            "label": "_lastLPTimeShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV3.sol:50"
          },
          {
            "contract": "StakeLPV3",
            "label": "_lastLiquidityTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV3.sol:52"
          },
          {
            "contract": "StakeLPV3",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV3.sol:59"
          },
          {
            "contract": "StakeLPV3",
            "label": "_whitelistedRewardEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV3.sol:61"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a86247a711b319370166e1e653c71a83070583803844a6eae4087c7484b963fd": {
      "address": "0x746A0ba88fac00850842ad92002b915135a69cf0",
      "txHash": "0xbf05d76927b1bca4153c8140865c6e7a7a7b07a8ccc646c45bdf69a43918a7b4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)39957",
            "src": "../project:/contracts/TokenWrapperV4.sol:26"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:29"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:30"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:31"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:32"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:33"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV4.sol:40"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV4.sol:41"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:42"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:45"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)39957": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "698fa7dd88d6ba6d7c3805bb18b349908b0045cdcc9b870d3c8ceb10ca5aeab4": {
      "address": "0x23A14cAE0C7b841e4C3d484809214C4cBaa7976d",
      "txHash": "0xfd971c332cbab9502aae60758d132c61544c33207bb9e25b0504d95a63621414",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "HolderSushiswap_STKATOM_ETHV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/holder/HolderSushiswap_STKATOM_ETHV2.sol:31"
          },
          {
            "contract": "HolderSushiswap_STKATOM_ETHV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/holder/HolderSushiswap_STKATOM_ETHV2.sol:34"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ff109a92f54089fe3ffcc272cd85b483f9955417e8f27ee3d60a3982893c99b3": {
      "address": "0x85674E0e2B5b9cC903139C423905dBB244a6826A",
      "txHash": "0x96b8c46c47ae695ce28d093de8e13b6da56bc84dc29f8f9ee19994fe24ee41b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "StakeLPV4",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV4.sol:37"
          },
          {
            "contract": "StakeLPV4",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV4.sol:39"
          },
          {
            "contract": "StakeLPV4",
            "label": "_lpBalance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV4.sol:46"
          },
          {
            "contract": "StakeLPV4",
            "label": "_lpSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV4.sol:48"
          },
          {
            "contract": "StakeLPV4",
            "label": "_lastLPTimeShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV4.sol:50"
          },
          {
            "contract": "StakeLPV4",
            "label": "_lastLiquidityTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV4.sol:52"
          },
          {
            "contract": "StakeLPV4",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV4.sol:59"
          },
          {
            "contract": "StakeLPV4",
            "label": "_whitelistedRewardEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV4.sol:61"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "84d826c50761a5ce96270f61d9d32d375393519cec3e6faeeb19ac826b7d55f3": {
      "address": "0x5A6E1738F0C6BEd80C85e7E5aDC401c9403b449B",
      "txHash": "0x0271b7553c31967f373df7e5d13fd5536a5bad0038c9d5e1700543cfaf372664",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedPTokenEmissionV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedPTokenEmissionV2.sol:26"
          },
          {
            "contract": "WhitelistedPTokenEmissionV2",
            "label": "_holderWhitelists",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedPTokenEmissionV2.sol:33"
          },
          {
            "contract": "WhitelistedPTokenEmissionV2",
            "label": "_whitelistedSTokenAddresses",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/WhitelistedPTokenEmissionV2.sol:35"
          },
          {
            "contract": "WhitelistedPTokenEmissionV2",
            "label": "_whitelistedAddressHolder",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/WhitelistedPTokenEmissionV2.sol:38"
          },
          {
            "contract": "WhitelistedPTokenEmissionV2",
            "label": "_holderLPToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/WhitelistedPTokenEmissionV2.sol:40"
          },
          {
            "contract": "WhitelistedPTokenEmissionV2",
            "label": "_holderSTokens",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedPTokenEmissionV2.sol:42"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "38913ded305523887082dfadd1ade9ee7f39c9d0d46826c860c831a7986edb76": {
      "address": "0x5CA89cdEEca693e41dA2c8bc246FC79e8A046F88",
      "txHash": "0x0e11d9bed3babbe8e7d968f13889440f042712721e26c355a88533bf03e494a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokensV3",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)2114_storage",
            "src": "../project:/contracts/STokensV3.sol:33"
          },
          {
            "contract": "STokensV3",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV3.sol:35"
          },
          {
            "contract": "STokensV3",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV3.sol:37"
          },
          {
            "contract": "STokensV3",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV3.sol:39"
          },
          {
            "contract": "STokensV3",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV3.sol:42"
          },
          {
            "contract": "STokensV3",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)39957",
            "src": "../project:/contracts/STokensV3.sol:45"
          },
          {
            "contract": "STokensV3",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV3.sol:48"
          },
          {
            "contract": "STokensV3",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV3.sol:49"
          },
          {
            "contract": "STokensV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV3.sol:50"
          },
          {
            "contract": "STokensV3",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV3.sol:51"
          },
          {
            "contract": "STokensV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV3.sol:54"
          },
          {
            "contract": "STokensV3",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV3.sol:56"
          },
          {
            "contract": "STokensV3",
            "label": "_migrationAdminContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV3.sol:59"
          }
        ],
        "types": {
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokensV2)39957": {
            "label": "contract IUTokensV2"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a498a4f97e66801e4625cd0ec6568101665d9ac68943a463d2ed5635a21b217b": {
      "address": "0xF00612b00eE6aDA407c2FA6E9a5b1990e631A2C6",
      "txHash": "0x59ca100b0b9ad32db13a488935af8e7ea85a0d4a37ff6cb00c6b7a77c2bf83e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)39957",
            "src": "../project:/contracts/TokenWrapperV5.sol:26"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV5.sol:29"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV5.sol:30"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV5.sol:31"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV5.sol:32"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV5.sol:33"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV5.sol:40"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV5.sol:41"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV5.sol:42"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV5.sol:45"
          },
          {
            "contract": "TokenWrapperV5",
            "label": "_migrationAdminContract",
            "type": "t_address",
            "src": "../project:/contracts/TokenWrapperV5.sol:48"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)39957": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "80b96d3fe9ab34277e12a1dca9c46be0bbe65d862a36afd29d2eda8028525cbd": {
      "address": "0x1155d3347Cb1C5835c07142758d7BfE2C904e1B0",
      "txHash": "0xc9e32149286f9003359c493fb24f181b2f4a57b963cf385942763425daa2a5dc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "MigrationAdmin",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV3)40021",
            "src": "../project:/contracts/MigrationAdmin.sol:24"
          },
          {
            "contract": "MigrationAdmin",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV3)38489",
            "src": "../project:/contracts/MigrationAdmin.sol:25"
          },
          {
            "contract": "MigrationAdmin",
            "label": "_tokenWrapper",
            "type": "t_contract(ITokenWrapperV3)39468",
            "src": "../project:/contracts/MigrationAdmin.sol:26"
          },
          {
            "contract": "MigrationAdmin",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdmin.sol:32"
          },
          {
            "contract": "MigrationAdmin",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdmin.sol:33"
          },
          {
            "contract": "MigrationAdmin",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/MigrationAdmin.sol:34"
          }
        ],
        "types": {
          "t_contract(IUTokensV3)40021": {
            "label": "contract IUTokensV3"
          },
          "t_contract(ISTokensV3)38489": {
            "label": "contract ISTokensV3"
          },
          "t_contract(ITokenWrapperV3)39468": {
            "label": "contract ITokenWrapperV3"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f14332648dbe7468b960131abc0ed7c298c44ca6752f96943d8e171073208600": {
      "address": "0x52DA469C9a8cdd5Db769Bf63B70E266d0c62A913",
      "txHash": "0x59986bbeb5aed5ae7ad4ac0872b24299fb049fd5b94d7f658e3c47c076952ebd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "MigrationAdminV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV3)40021",
            "src": "../project:/contracts/MigrationAdminV2.sol:24"
          },
          {
            "contract": "MigrationAdminV2",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV3)38489",
            "src": "../project:/contracts/MigrationAdminV2.sol:25"
          },
          {
            "contract": "MigrationAdminV2",
            "label": "_tokenWrapper",
            "type": "t_contract(ITokenWrapperV3)39468",
            "src": "../project:/contracts/MigrationAdminV2.sol:26"
          },
          {
            "contract": "MigrationAdminV2",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV2.sol:32"
          },
          {
            "contract": "MigrationAdminV2",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV2.sol:33"
          },
          {
            "contract": "MigrationAdminV2",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/MigrationAdminV2.sol:34"
          }
        ],
        "types": {
          "t_contract(IUTokensV3)40021": {
            "label": "contract IUTokensV3"
          },
          "t_contract(ISTokensV3)38489": {
            "label": "contract ISTokensV3"
          },
          "t_contract(ITokenWrapperV3)39468": {
            "label": "contract ITokenWrapperV3"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "888a09c70ad7cb1f2a7fd66427b32514ce7bcb3dbd545743cb3a947fb81571e6": {
      "address": "0xC55A6a9A31387fD549A63b4D6e025E46eE5d7359",
      "txHash": "0xb252b6580c40e7abb379ac405cb6b80ce10751bbf7f212a34565bdb02edc706b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)39957",
            "src": "../project:/contracts/TokenWrapperV6.sol:26"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV6.sol:29"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV6.sol:30"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV6.sol:31"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV6.sol:32"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV6.sol:33"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV6.sol:40"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV6.sol:41"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV6.sol:42"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV6.sol:45"
          },
          {
            "contract": "TokenWrapperV6",
            "label": "_migrationAdminContract",
            "type": "t_address",
            "src": "../project:/contracts/TokenWrapperV6.sol:48"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)39957": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "70c1150abbb676f1232392169582d17032716a70ea2352f104e843518ac64c54": {
      "address": "0x070CeCfe75256D3A2Dc593030bA31F44cF796A86",
      "txHash": "0xb9693b19c65198fc8c9ee3dfbc1ef57788054fe17e6fc4105e3b28616eaf94e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "MigrationAdminV3",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV3)40021",
            "src": "../project:/contracts/MigrationAdminV3.sol:24"
          },
          {
            "contract": "MigrationAdminV3",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV3)38489",
            "src": "../project:/contracts/MigrationAdminV3.sol:25"
          },
          {
            "contract": "MigrationAdminV3",
            "label": "_tokenWrapper",
            "type": "t_contract(ITokenWrapperV5)39825",
            "src": "../project:/contracts/MigrationAdminV3.sol:26"
          },
          {
            "contract": "MigrationAdminV3",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV3.sol:32"
          },
          {
            "contract": "MigrationAdminV3",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV3.sol:33"
          },
          {
            "contract": "MigrationAdminV3",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/MigrationAdminV3.sol:34"
          }
        ],
        "types": {
          "t_contract(IUTokensV3)40021": {
            "label": "contract IUTokensV3"
          },
          "t_contract(ISTokensV3)38489": {
            "label": "contract ISTokensV3"
          },
          "t_contract(ITokenWrapperV5)39825": {
            "label": "contract ITokenWrapperV5"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d1e0e7636459e460e56d831d924c83b8b338202106fa55810f0ec3c9fb8358dd": {
      "address": "0x162A502bfC52d1F252dF00060a8555eE9f9152a3",
      "txHash": "0x7c40058e110d491238fb3da57bf540e1210fdf2b47ce9a30b8ce24a37ec7d7b8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokensV4",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)2114_storage",
            "src": "../project:/contracts/STokensV4.sol:33"
          },
          {
            "contract": "STokensV4",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV4.sol:35"
          },
          {
            "contract": "STokensV4",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV4.sol:37"
          },
          {
            "contract": "STokensV4",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV4.sol:39"
          },
          {
            "contract": "STokensV4",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV4.sol:42"
          },
          {
            "contract": "STokensV4",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)39957",
            "src": "../project:/contracts/STokensV4.sol:45"
          },
          {
            "contract": "STokensV4",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV4.sol:48"
          },
          {
            "contract": "STokensV4",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV4.sol:49"
          },
          {
            "contract": "STokensV4",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV4.sol:50"
          },
          {
            "contract": "STokensV4",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV4.sol:51"
          },
          {
            "contract": "STokensV4",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV4.sol:54"
          },
          {
            "contract": "STokensV4",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV4.sol:56"
          },
          {
            "contract": "STokensV4",
            "label": "_migrationAdminContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV4.sol:59"
          }
        ],
        "types": {
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokensV2)39957": {
            "label": "contract IUTokensV2"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cb61f8611328f520c9829656472cc0a53f064fb40fc5ff18ef4ab3b4dc10de5f": {
      "address": "0x23d578e2968957a772e3f655b5e8f3b78e71a2F4",
      "txHash": "0x5329b83d46037b9bebbc174c71c1b97e71a953e21d122baefb73244b8ab9ad64",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)39957",
            "src": "../project:/contracts/LiquidStakingV4.sol:26"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV2)38230",
            "src": "../project:/contracts/LiquidStakingV4.sol:27"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:30"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:31"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:32"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:33"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:34"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:40"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:41"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:42"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:43"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV4.sol:46"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV4.sol:49"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStakingV4.sol:52"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:55"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_batchingLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV4.sol:58"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_tokenWrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/LiquidStakingV4.sol:61"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_ifPaused",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidStakingV4.sol:67"
          },
          {
            "contract": "LiquidStakingV4",
            "label": "_migrationAdminContract",
            "type": "t_address",
            "src": "../project:/contracts/LiquidStakingV4.sol:70"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)39957": {
            "label": "contract IUTokensV2"
          },
          "t_contract(ISTokensV2)38230": {
            "label": "contract ISTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e4c87164caf20f69fb8edd2f16a88835bf8662ec3a1d1425a6ec6a20fbe4e7ef": {
      "address": "0x86fFa5B5eAE2b30D3039b87FdB86778F2B107bCf",
      "txHash": "0x3c718ed111633ae109100a2ff7985d665b9ce15b96be3d4c34adfafba6f124c1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV3)40021",
            "src": "../project:/contracts/MigrationAdminV4.sol:25"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV3)38489",
            "src": "../project:/contracts/MigrationAdminV4.sol:26"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "_tokenWrapper",
            "type": "t_contract(ITokenWrapperV5)39825",
            "src": "../project:/contracts/MigrationAdminV4.sol:27"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV4.sol:33"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV4.sol:34"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/MigrationAdminV4.sol:35"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "cosmosHrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/MigrationAdminV4.sol:36"
          },
          {
            "contract": "MigrationAdminV4",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/MigrationAdminV4.sol:39"
          }
        ],
        "types": {
          "t_contract(IUTokensV3)40021": {
            "label": "contract IUTokensV3"
          },
          "t_contract(ISTokensV3)38489": {
            "label": "contract ISTokensV3"
          },
          "t_contract(ITokenWrapperV5)39825": {
            "label": "contract ITokenWrapperV5"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
