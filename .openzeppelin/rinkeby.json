{
  "manifestVersion": "3.1",
  "impls": {
    "da749b9cf864809ff7deb012856882df2cee222b0091f1f8e4e5f0f7c66da850": {
      "address": "0x3E8E09b78b5E20E36b2c1C53A87C2eD99bD88857",
      "txHash": "0xa759ffb686c08c1f426957f45d7017a2824d87c3ae8888f6c410fc8a86ef20a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3712_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "UstkXPRT",
            "label": "_stokenContract",
            "type": "t_address",
            "src": "..\\..\\..\\..\\..\\..\\..\\C\\Users\\Kamlesh\\Persistence\\pStake\\codebase\\pStakeSmartContracts\\contracts\\UstkXPRT.sol:17"
          },
          {
            "contract": "UstkXPRT",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "..\\..\\..\\..\\..\\..\\..\\C\\Users\\Kamlesh\\Persistence\\pStake\\codebase\\pStakeSmartContracts\\contracts\\UstkXPRT.sol:18"
          },
          {
            "contract": "UstkXPRT",
            "label": "_wrapperContract",
            "type": "t_address",
            "src": "..\\..\\..\\..\\..\\..\\..\\C\\Users\\Kamlesh\\Persistence\\pStake\\codebase\\pStakeSmartContracts\\contracts\\UstkXPRT.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3712_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)3712_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)5925_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)5925_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5660_storage"
              }
            ]
          },
          "t_struct(Set)5660_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "89a38780861a5d22ee92f0bc0f64681ad9e5e8305831e8f5c67cce32bb4f271b": {
      "address": "0xCEdFbc1907C2c6948257F1D4B1E1c24d905f9828",
      "txHash": "0xce0ae2af92b872df143589050faa02df247a18a9d5a95dc110b404db862440b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3712_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "VestingTimelock",
            "label": "_token",
            "type": "t_contract(IERC20Upgradeable)5009",
            "src": "..\\..\\..\\..\\..\\..\\..\\C\\Users\\Kamlesh\\Persistence\\pStake\\codebase\\pStakeSmartContracts\\contracts\\VestingTimelock.sol:27"
          },
          {
            "contract": "VestingTimelock",
            "label": "vestingGrants",
            "type": "t_mapping(t_address,t_struct(Grant)2705_storage)",
            "src": "..\\..\\..\\..\\..\\..\\..\\C\\Users\\Kamlesh\\Persistence\\pStake\\codebase\\pStakeSmartContracts\\contracts\\VestingTimelock.sol:39"
          },
          {
            "contract": "VestingTimelock",
            "label": "totalVestedHistory",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\..\\C\\Users\\Kamlesh\\Persistence\\pStake\\codebase\\pStakeSmartContracts\\contracts\\VestingTimelock.sol:40"
          },
          {
            "contract": "VestingTimelock",
            "label": "totalVestingAmount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\..\\C\\Users\\Kamlesh\\Persistence\\pStake\\codebase\\pStakeSmartContracts\\contracts\\VestingTimelock.sol:41"
          },
          {
            "contract": "VestingTimelock",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "..\\..\\..\\..\\..\\..\\..\\C\\Users\\Kamlesh\\Persistence\\pStake\\codebase\\pStakeSmartContracts\\contracts\\VestingTimelock.sol:283"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)5009": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_struct(Grant)2705_storage)": {
            "label": "mapping(address => struct VestingTimelock.Grant)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Grant)2705_storage": {
            "label": "struct VestingTimelock.Grant",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vestingCliff",
                "type": "t_uint256"
              },
              {
                "label": "benificiary",
                "type": "t_address"
              },
              {
                "label": "isActive",
                "type": "t_bool"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3712_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)3712_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)5925_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)5925_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5660_storage"
              }
            ]
          },
          "t_struct(Set)5660_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x18D079141a17B2A3FD9EB51a460ec6901D4e23A4",
    "txHash": "0x9d32486691c92f83aa22e3682d05a4d1fa1d4d34d874d27d0458516551f095ec"
  }
}
