{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xeafE71D5AA9de14bA90021CF75b770fc5ee59d14",
    "txHash": "0xd6d4a3c6884645130dfdea1e7f4a394321f42e94693ec46dda1ae1ece2f7da1d"
  },
  "proxies": [
    {
      "address": "0x82E12d4a412484375E67F91b43cDc6e27Da9EBEE",
      "txHash": "0xb4a94edfad5a55c200033d5157093facbf9e2fde2d7c114abf042d5b5b87996e",
      "kind": "transparent"
    },
    {
      "address": "0xEB9E903569968Cd2E6FaCE9Bd9A0A909E48cDbA7",
      "txHash": "0x271e932141f0452c35d4883158b44aa2a1e89c1ba20bf161ecc9117b1c9a1dca",
      "kind": "transparent"
    },
    {
      "address": "0xe8B14214d201f7EB24B7c5B282c92b54dfdb9C5d",
      "txHash": "0xc07fe82faeed624f4f28954cde7f8a6987ad1c72774fecbc11d3e5064f815f95",
      "kind": "transparent"
    },
    {
      "address": "0x5842671a54E4d0990fE85A4138327C08c50516eA",
      "txHash": "0x74b2b3210f5901f7157363e75408b1348bcade6e61cdd6dd7810368087ee42ef",
      "kind": "transparent"
    },
    {
      "address": "0xAF76763246b0CE225b2cF028a78AA1151AA226Fe",
      "txHash": "0xc86c5ce84093293f982672b2db83803392621fc3ce2812782a486e1912b59e0a",
      "kind": "transparent"
    },
    {
      "address": "0xf3d8e99BFDcbfC7B8C0588ab6814Ac5e0bA7C844",
      "txHash": "0xa15676c237fbb5fcec9f15a7ba23795ac628297ecb74cfe30afee7d8fd430485",
      "kind": "transparent"
    },
    {
      "address": "0x4E7e83b0b8ED3e2748c4758e13ECf7D4A7280ca9",
      "txHash": "0x64321219574b881c3760f43baf7a295c25827f9914cc5c4ab975086ca9596442",
      "kind": "transparent"
    },
    {
      "address": "0xAdb918460d65fc2380533EAE88cEbF239654D6b7",
      "txHash": "0x9208734e83e7c958a0d64412d2546563cdd11bbae908e0eefe29702969607c88",
      "kind": "transparent"
    },
    {
      "address": "0x0104EeB65D3e687bbc5A796999872885AC904163",
      "txHash": "0x41eefe2c12ede1263b4e33b9ab6b28eac8d11ce72170d0cb97726a54595c0fd9",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d7f717dabfafb84c582693d349b3c060cec5e8175b88b0ea9e00e7f8cfb63a2a": {
      "address": "0xD368EdE0aa09e851D36B9d6A5C18EC27B646C12E",
      "txHash": "0x08eb411bcca4487ce174324437941afbbbae2ceed0e746a8db06854809dacd39",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "HolderSushiswapStkATOMEthV2",
            "label": "_stakeLPContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\holder\\HolderSushiswapStkATOMEthV2.sol:16"
          },
          {
            "contract": "HolderSushiswapStkATOMEthV2",
            "label": "_sTokensV2",
            "type": "t_contract(ISTokensV2)6306",
            "src": "..\\project:\\contracts\\holder\\HolderSushiswapStkATOMEthV2.sol:17"
          },
          {
            "contract": "HolderSushiswapStkATOMEthV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\holder\\HolderSushiswapStkATOMEthV2.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(ISTokensV2)6306": {
            "label": "contract ISTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9415f1b66df87799ff469f1a8cd622eeabecc3bd909c6c257c30bed3a522f145": {
      "address": "0x543F14052EefaEDF45c7Cf6A6a8d1f614dB5e03A",
      "txHash": "0xb26f6d6e4085f26225cde11c872d2e70f9714b5622b2f1480705fba47a53e57d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "UTokensXPRT",
            "label": "_stokenContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\UTokensXPRT.sol:20"
          },
          {
            "contract": "UTokensXPRT",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\UTokensXPRT.sol:21"
          },
          {
            "contract": "UTokensXPRT",
            "label": "_wrapperContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\UTokensXPRT.sol:22"
          },
          {
            "contract": "UTokensXPRT",
            "label": "_version",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\UTokensXPRT.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a64e41c86a6c1ba55666fd18da5e5e098c324a618de0ec9adb20952e6ade76bd": {
      "address": "0x9B4b0892a5b2606B8Db167eD0441A91C6DB407F6",
      "txHash": "0x3a321757986e79d466668f66a26751054f76c77e790330c22a0503ef965819b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokensXPRT",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)1901_storage",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:29"
          },
          {
            "contract": "STokensXPRT",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:31"
          },
          {
            "contract": "STokensXPRT",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:33"
          },
          {
            "contract": "STokensXPRT",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:37"
          },
          {
            "contract": "STokensXPRT",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:40"
          },
          {
            "contract": "STokensXPRT",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)6349",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:42"
          },
          {
            "contract": "STokensXPRT",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:45"
          },
          {
            "contract": "STokensXPRT",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:46"
          },
          {
            "contract": "STokensXPRT",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:47"
          },
          {
            "contract": "STokensXPRT",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:48"
          },
          {
            "contract": "STokensXPRT",
            "label": "_version",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:51"
          }
        ],
        "types": {
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokensV2)6349": {
            "label": "contract IUTokensV2"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "39aa886cbf8b02f50d03ebfe0e5e5664c65bab125d894b0f0195d9aafa3a6897": {
      "address": "0xEAf4E61278831FAE2c17C1219A62DF0FFa6dCa71",
      "txHash": "0xea15909dab829b781d856cf2c01f3aca9877d79158db6c7660ea32994cf276f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)6349",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:22"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:25"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:26"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:27"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:28"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:29"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:36"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:37"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:38"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_version",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:41"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)6349": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b328d2b537f949d3f7a88706faf706b4d9c38d12e090bbd360eca4923f1861e2": {
      "address": "0x75FF5608E95B8744d00086c5B943A606eE66eC99",
      "txHash": "0x710862d149aaef109a2539d50db2b9f6c490bc2c5d6cc9df7fd99e16bac9c9c4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)6349",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:21"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV2)6129",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:22"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:25"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:26"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:27"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:28"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:29"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:35"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:36"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:37"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:38"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:41"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:44"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:47"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_version",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:50"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)6349": {
            "label": "contract IUTokensV2"
          },
          "t_contract(ISTokensV2)6129": {
            "label": "contract ISTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
