{
  "manifestVersion": "3.1",
  "impls": {
    "0e7360d5eb45988e0bd360eaa7efbad5b74227e78654330a4b07e8d764da3aaf": {
      "address": "0xD3fA017B3225645EA10FBaA9103A82e19D1a289c",
      "txHash": "0x1ccca3e95b9bdaf518a7f2bd169a8b47db908c3b9b713ff7c3ecf623f08faa60",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7844_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "StakeLPCore",
            "label": "_lpBalance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "StakeLPCore.sol:24"
          },
          {
            "contract": "StakeLPCore",
            "label": "_lpSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "StakeLPCore.sol:26"
          },
          {
            "contract": "StakeLPCore",
            "label": "_lastLPTimeShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "StakeLPCore.sol:28"
          },
          {
            "contract": "StakeLPCore",
            "label": "_lastLPTimeShareTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "StakeLPCore.sol:30"
          },
          {
            "contract": "StakeLPCore",
            "label": "_lastLiquidityTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "StakeLPCore.sol:32"
          },
          {
            "contract": "StakeLPCore",
            "label": "_uTokens",
            "type": "t_contract(IUTokens)4992",
            "src": "StakeLPCore.sol:35"
          },
          {
            "contract": "StakeLPCore",
            "label": "_sTokens",
            "type": "t_contract(ISTokens)4745",
            "src": "StakeLPCore.sol:36"
          },
          {
            "contract": "StakeLPCore",
            "label": "_pstakeTokens",
            "type": "t_contract(IPSTAKE)4603",
            "src": "StakeLPCore.sol:37"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IUTokens)4992": {
            "label": "contract IUTokens"
          },
          "t_contract(ISTokens)4745": {
            "label": "contract ISTokens"
          },
          "t_contract(IPSTAKE)4603": {
            "label": "contract IPSTAKE"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7844_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)7844_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)9706_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)9706_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9441_storage"
              }
            ]
          },
          "t_struct(Set)9441_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
