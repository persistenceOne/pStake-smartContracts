{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x97d4c5453a6D6FE0E9b2d6acc670f4B57fd59CBc",
    "txHash": "0x6dc3977ccedd0152961602284bb53415ec89b78bacac21a3d8f185173becc063"
  },
  "proxies": [
    {
      "address": "0xA8Bd11F7b5f913CeAb7bf8664d687435eb7011ac",
      "txHash": "0x090e26c9f4d16c60b23ca8cad22ccb1f239d387c66b1c1ad05d2b922e825d2e5",
      "kind": "transparent"
    },
    {
      "address": "0xA0e5c263cDC9EE2BFd06910D436dB5B51831135E",
      "txHash": "0x59ff1c4ce0c6acecc608a4c008a1f600f69f89cf906d6f7fd685f4c906932262",
      "kind": "transparent"
    },
    {
      "address": "0x3c33F829FDeC785b41D2221a33FCe80881939918",
      "txHash": "0x6f671680bb9322cde2807a6c2fa2e5b6bbac54da9943f0a4807fd191b00d33b9",
      "kind": "transparent"
    },
    {
      "address": "0x45Bebb0BA61fECD51E5f39B9c5B09cf3D5b4Ee4F",
      "txHash": "0xc234e60313bfccb85ee32482a4ab47430f4f8042be667db96bdfa0a81fb7ac51",
      "kind": "transparent"
    },
    {
      "address": "0x6B53905D525d52eA7e016cA492BbAAD38aaCe8E9",
      "txHash": "0xfedb616c766e0eded11492062ea5735eb5ee948a354685720ce6a2c7a0428b5f",
      "kind": "transparent"
    },
    {
      "address": "0x37231B707F2b30cAdd08Bd8Bd419DD775eeC3c70",
      "txHash": "0x64e1ce9cfb483f18293d3ff0255ab6cb46a6c6fdedcaf853ea939e948b094ca5",
      "kind": "transparent"
    },
    {
      "address": "0x3b0eBcB121d86D1b46c0a4E325Ba4e19Ff7A3D28",
      "txHash": "0xbfe7fa45cfdbd2e32d612e54225552cc8d76677c0964664caf777505c5aebd03",
      "kind": "transparent"
    },
    {
      "address": "0x655F04F0A7d9e76529337f3a40e8733143A0e55a",
      "txHash": "0x8c136940e729e50603ffc2d868c2ad931decd11a6c364d0f703683259798d791",
      "kind": "transparent"
    },
    {
      "address": "0xAbAE57948Db88172c5152F8bF6416493dA30395a",
      "txHash": "0x0a5abacd363bd15662b928e1a5b597a83be0123ba8211f2eced1e99368f6b543",
      "kind": "transparent"
    }
  ],
  "impls": {
    "989b27ed68e8ddd776af0d52beae1129f84ec94a38ef96d4125f2156d5e472db": {
      "address": "0xA750F05BfC4b2a8a631d8D596Ba5CE39DABE6f75",
      "txHash": "0x6528001c498c2f3eba746980aeb1192bbed789bcfac1a1c2d77960242d9a22b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "UTokens",
            "label": "_stokenContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokens.sol:16"
          },
          {
            "contract": "UTokens",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokens.sol:17"
          },
          {
            "contract": "UTokens",
            "label": "_wrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/UTokens.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b1cd8b5e4195f7446ab2ce512a8f457dcf178f9e0e0a5998a1c593a1e44d44d9": {
      "address": "0xAF0812cb713B62e8db1eDdD3C2dFD928c34bB27A",
      "txHash": "0x58be647be0440ef5752abce91c66917861254c67ae00bce5ee66a9912e5d2446",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokens",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)1901_storage",
            "src": "../project:/contracts/STokens.sol:25"
          },
          {
            "contract": "STokens",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokens.sol:26"
          },
          {
            "contract": "STokens",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokens.sol:28"
          },
          {
            "contract": "STokens",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokens.sol:30"
          },
          {
            "contract": "STokens",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/STokens.sol:33"
          },
          {
            "contract": "STokens",
            "label": "_uTokens",
            "type": "t_contract(IUTokens)15794",
            "src": "../project:/contracts/STokens.sol:35"
          },
          {
            "contract": "STokens",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokens.sol:38"
          },
          {
            "contract": "STokens",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokens.sol:39"
          },
          {
            "contract": "STokens",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/STokens.sol:40"
          },
          {
            "contract": "STokens",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokens.sol:41"
          }
        ],
        "types": {
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokens)15794": {
            "label": "contract IUTokens"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "34b7b017728cb9ea7bd63bd37a2263ad05c7475da9b8cbc349ba5bbf9cebe421": {
      "address": "0x6281916BF1e8E2577009C09f394CfF01004b20C2",
      "txHash": "0x16a4185f9c2dc72f97c1aaa991b254218b484c9c071d0af2b43e5dbf23455aad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapper",
            "label": "_uTokens",
            "type": "t_contract(IUTokens)15794",
            "src": "../project:/contracts/TokenWrapper.sol:20"
          },
          {
            "contract": "TokenWrapper",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:23"
          },
          {
            "contract": "TokenWrapper",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:24"
          },
          {
            "contract": "TokenWrapper",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:25"
          },
          {
            "contract": "TokenWrapper",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:26"
          },
          {
            "contract": "TokenWrapper",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:27"
          },
          {
            "contract": "TokenWrapper",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapper.sol:34"
          },
          {
            "contract": "TokenWrapper",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapper.sol:35"
          },
          {
            "contract": "TokenWrapper",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapper.sol:36"
          }
        ],
        "types": {
          "t_contract(IUTokens)15794": {
            "label": "contract IUTokens"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a376e3085f4cedcfff2a42c89b25f01c44f85c588be4e3f55761d9c4bacc5b7d": {
      "address": "0x67af1b77Df23773AE1d03c6A800219C3d65FE969",
      "txHash": "0xfb026f7a819a325146183052dd29a439b0d60dd9fe08cad2889194e681c370fe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStaking",
            "label": "_uTokens",
            "type": "t_contract(IUTokens)15794",
            "src": "../project:/contracts/LiquidStaking.sol:18"
          },
          {
            "contract": "LiquidStaking",
            "label": "_sTokens",
            "type": "t_contract(ISTokens)14807",
            "src": "../project:/contracts/LiquidStaking.sol:19"
          },
          {
            "contract": "LiquidStaking",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:22"
          },
          {
            "contract": "LiquidStaking",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:23"
          },
          {
            "contract": "LiquidStaking",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:24"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:25"
          },
          {
            "contract": "LiquidStaking",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:26"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:32"
          },
          {
            "contract": "LiquidStaking",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:33"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:34"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStaking.sol:35"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStaking.sol:38"
          },
          {
            "contract": "LiquidStaking",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStaking.sol:41"
          },
          {
            "contract": "LiquidStaking",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStaking.sol:44"
          }
        ],
        "types": {
          "t_contract(IUTokens)15794": {
            "label": "contract IUTokens"
          },
          "t_contract(ISTokens)14807": {
            "label": "contract ISTokens"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3e39b0197a6f1a6857891160f8036ede29c39d6fea7e4f482f53a520989f237e": {
      "address": "0x216091fD9881ccD57545b2B09bb1E42c43D29Ca1",
      "txHash": "0x5e3dfe82b52c23f028431765d8043804b182ae4cfef380f6b256ee09d06a5d43",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "UTokensV2",
            "label": "_stokenContract",
            "type": "t_address",
            "src": "../project:/contracts/UtokensV2.sol:20"
          },
          {
            "contract": "UTokensV2",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/UtokensV2.sol:21"
          },
          {
            "contract": "UTokensV2",
            "label": "_wrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/UtokensV2.sol:22"
          },
          {
            "contract": "UTokensV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/UtokensV2.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "89bfe316907f09a5b59b26d4ab781b381f5aefb5cd1a647110aaf2e88ea19c8a": {
      "address": "0x8392c23EB012DE8154A91D46b50dB43AdAD99c6B",
      "txHash": "0x8f2064b74148f3e27e185e500270c4202e15580d2bcdbe82d146f591bffbaa81",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:22"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_holderWhitelists",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:29"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_whitelistedSTokenAddresses",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:31"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_whitelistedAddressHolder",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:34"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_holderLPToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:36"
          },
          {
            "contract": "WhitelistedPTokenEmission",
            "label": "_holderSTokens",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedPTokenEmission.sol:38"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f4fd66f89a393b3e7389d28822079a61bafacdc2aaa8c686d39ab84c3cf44574": {
      "address": "0x05162FB2DB33F157440F46995Cb9DA4c06f05AEF",
      "txHash": "0xdfc643a35f563b4fb9271a798aaea3a8a541acdd8452f52dffc055b4f6ac55e0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokensV2",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)1901_storage",
            "src": "../project:/contracts/STokensV2.sol:29"
          },
          {
            "contract": "STokensV2",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV2.sol:31"
          },
          {
            "contract": "STokensV2",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/STokensV2.sol:33"
          },
          {
            "contract": "STokensV2",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV2.sol:35"
          },
          {
            "contract": "STokensV2",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV2.sol:38"
          },
          {
            "contract": "STokensV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)15866",
            "src": "../project:/contracts/STokensV2.sol:40"
          },
          {
            "contract": "STokensV2",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV2.sol:43"
          },
          {
            "contract": "STokensV2",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/STokensV2.sol:44"
          },
          {
            "contract": "STokensV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV2.sol:45"
          },
          {
            "contract": "STokensV2",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/STokensV2.sol:46"
          },
          {
            "contract": "STokensV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/STokensV2.sol:49"
          },
          {
            "contract": "STokensV2",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/STokensV2.sol:51"
          }
        ],
        "types": {
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokensV2)15866": {
            "label": "contract IUTokensV2"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "72fced9553367ee49f89da271ae8f98f709a1a5e9fc05cd40560de2c5da72588": {
      "address": "0x21F4F9F09B7b735A7E304A9e40CbC22E8f67f7D3",
      "txHash": "0xa737ea84aba97ed5c5f9a8a88a298f2258d991940890370e2c7da9336ec0144c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)30797",
            "src": "../project:/contracts/TokenWrapperV2.sol:22"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:25"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:26"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:27"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:28"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:29"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV2.sol:36"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV2.sol:37"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:38"
          },
          {
            "contract": "TokenWrapperV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV2.sol:41"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)30797": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3f94ed8ae4ac5972c46f155c9bb249c58bcde18a93c087f521fe153d43a8a138": {
      "address": "0x5DE9bD43dA7069E8eCC72979BcF272D4f6Ce1E74",
      "txHash": "0x9b48548ef257e46fbc0fe85f4dca328c7c788e087c725575af962f6229b039c3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)30797",
            "src": "../project:/contracts/LiquidStakingV2.sol:21"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV2)29831",
            "src": "../project:/contracts/LiquidStakingV2.sol:22"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:25"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:26"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:27"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:28"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:29"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:35"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:36"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:37"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:38"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV2.sol:41"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV2.sol:44"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStakingV2.sol:47"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:50"
          },
          {
            "contract": "LiquidStakingV2",
            "label": "_batchingLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV2.sol:52"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)30797": {
            "label": "contract IUTokensV2"
          },
          "t_contract(ISTokensV2)29831": {
            "label": "contract ISTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "28bca57e0ef44b9d96f57fc3328728e828d36c63821596127533b95b2e93ee6b": {
      "address": "0xDF9eED96e42a31EC2d39dFaC3fbcD8cd2c6933fC",
      "txHash": "0xb9b7205a88a6fcf0764e4f89a2d25200c65ae14d2baa4c8ebac1d5427c741dfb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_stakeLPContract",
            "type": "t_address",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:25"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:27"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:29"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_holderContractList",
            "type": "t_struct(AddressSet)1901_storage",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:36"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardTokenList",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:38"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardTokenListIndex",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:40"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardTokenEmission",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:43"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_cumulativeRewardAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:46"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardEmissionTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:50"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardSink",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:54"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_lastLPTimeShareTimestampArray",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:60"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_cumulativeNewSupplyLPTimeShare",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:62"
          },
          {
            "contract": "WhitelistedRewardEmission",
            "label": "_rewardPoolUserTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/WhitelistedRewardEmission.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "421c717a0a887dc5c324424331f0d5934bcd025ec182448ba06d440fd4f6a9a7": {
      "address": "0xFF26662363A12d2e1032937097113c2b3a7445a4",
      "txHash": "0x1a75b74a987e804a6539a7233e3539ac6b8888b85687897f74f9c403cc7c49cc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "StakeLP",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLP.sol:31"
          },
          {
            "contract": "StakeLP",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLP.sol:33"
          },
          {
            "contract": "StakeLP",
            "label": "_lpBalance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLP.sol:40"
          },
          {
            "contract": "StakeLP",
            "label": "_lpSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLP.sol:42"
          },
          {
            "contract": "StakeLP",
            "label": "_lastLPTimeShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLP.sol:44"
          },
          {
            "contract": "StakeLP",
            "label": "_lastLiquidityTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLP.sol:46"
          },
          {
            "contract": "StakeLP",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLP.sol:57"
          },
          {
            "contract": "StakeLP",
            "label": "_whitelistedRewardEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLP.sol:59"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a070d83b3f9ecc6829cc9c9828cf8668ff3cf697c4a4b266f160bb5403f8cc38": {
      "address": "0xa01C5970E1c302cD27E651556a3e08Cc1106CAC8",
      "txHash": "0x08888949db58f9391ed2f5f6c2f2e756bdaadf275011165fd10b89ce650a74cc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "HolderSushiswap_STKATOM_ETH",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/holder/HolderSushiswap_STKATOM_ETH.sol:28"
          },
          {
            "contract": "HolderSushiswap_STKATOM_ETH",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/holder/HolderSushiswap_STKATOM_ETH.sol:31"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "731399d0640f679324ed659d56750a62bf2733a0137a106ca1d6b451bf721d85": {
      "address": "0x3A3892E71aa6351d2D0C10C1Dd75Ac7529a04B67",
      "txHash": "0xbc549b2ce018697315f08e7d7c585f593f0df379985fa35026c8b3eccf34c66b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "StakeLPV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV2.sol:35"
          },
          {
            "contract": "StakeLPV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV2.sol:37"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lpBalance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV2.sol:44"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lpSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV2.sol:46"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lastLPTimeShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV2.sol:48"
          },
          {
            "contract": "StakeLPV2",
            "label": "_lastLiquidityTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV2.sol:50"
          },
          {
            "contract": "StakeLPV2",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV2.sol:57"
          },
          {
            "contract": "StakeLPV2",
            "label": "_whitelistedRewardEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV2.sol:59"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b7d5bf148509c7238abd4e5e91112b0e66b70e24fa1d20e58c96e2c8c961b3ca": {
      "address": "0x68c7F8C591B6F242EF47bb322520F6b2fB47441D",
      "txHash": "0x3f43055e5af4d000d1f0eaa1ffa0cc8c1e7bbeff534226ce82435e610dc77e4a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_stakeLPContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV2.sol:25"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV2.sol:27"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV2.sol:29"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_holderContractList",
            "type": "t_struct(AddressSet)1901_storage",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV2.sol:36"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardTokenList",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV2.sol:38"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardTokenListIndex",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV2.sol:40"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardTokenEmission",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV2.sol:43"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_cumulativeRewardAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV2.sol:46"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardEmissionTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV2.sol:50"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardSink",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV2.sol:54"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_lastLPTimeShareTimestampArray",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV2.sol:60"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_cumulativeNewSupplyLPTimeShare",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV2.sol:62"
          },
          {
            "contract": "WhitelistedRewardEmissionV2",
            "label": "_rewardPoolUserTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV2.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "10bd2036926c76b89864fa53dbcf9558dc672dbbfc48284cfee1a77ef2566cd3": {
      "address": "0xD4737cA43C1Ddf13aA56Aa8a75Dd0650E80F170B",
      "txHash": "0x537bab99ae04c7c829bfbe0abf8fd3720c86b881fbc2e737f38fc4c09272c1b3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_stakeLPContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV3.sol:25"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV3.sol:27"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV3.sol:29"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_holderContractList",
            "type": "t_struct(AddressSet)1901_storage",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV3.sol:36"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardTokenList",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV3.sol:38"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardTokenListIndex",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV3.sol:40"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardTokenEmission",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV3.sol:43"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_cumulativeRewardAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV3.sol:46"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardEmissionTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV3.sol:50"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardSink",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV3.sol:54"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_lastLPTimeShareTimestampArray",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV3.sol:60"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_cumulativeNewSupplyLPTimeShare",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV3.sol:62"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardPoolUserTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "src": "..\\project:\\contracts\\WhitelistedRewardEmissionV3.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9ccfd4e5caa548b83210b84c8d468d9df07d82c92885cf833f269473925d91b3": {
      "address": "0xCB1D983b5b188397c3B86f168B8D39d633eC0557",
      "txHash": "0x18d46524b5658b07755be77add0ff2e5c4f0710e03334c949f534d1a4dcd5110",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)36462",
            "src": "../project:/contracts/TokenWrapperV3.sol:26"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:29"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:30"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:31"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:32"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:33"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV3.sol:40"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV3.sol:41"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:42"
          },
          {
            "contract": "TokenWrapperV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV3.sol:45"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)36462": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "abc8f1c6059bbcfb42be4067bb82d6fcdc3e9a541c1102c0376c57ef151413b1": {
      "address": "0xcb6958AD8b2c7c604c934b3ba6865C6f4CCa2409",
      "txHash": "0x8293c5420f8c9706f05b0f934925d52b20761900676f4cb7a5a29a0715a70449",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)30797",
            "src": "../project:/contracts/LiquidStakingV3.sol:22"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV2)29831",
            "src": "../project:/contracts/LiquidStakingV3.sol:23"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:26"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:27"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:28"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:29"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:30"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:36"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:37"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:38"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:39"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV3.sol:42"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/LiquidStakingV3.sol:45"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidStakingV3.sol:48"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:51"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_batchingLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidStakingV3.sol:54"
          },
          {
            "contract": "LiquidStakingV3",
            "label": "_tokenWrapperContract",
            "type": "t_address",
            "src": "../project:/contracts/LiquidStakingV3.sol:57"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)30797": {
            "label": "contract IUTokensV2"
          },
          "t_contract(ISTokensV2)29831": {
            "label": "contract ISTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c048a59c22ca498b948ed2a64424b7d227e6957f6396a5c6d620916ac1fac643": {
      "address": "0xBEc850C8D02EF859007ecE4672509a76714F923e",
      "txHash": "0xc779430543d06cb9788f972f9a4f4a32db8ea819a9315cb4ba80aaf06d5e244a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "StakeLPV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV3.sol:37"
          },
          {
            "contract": "StakeLPV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV3.sol:39"
          },
          {
            "contract": "StakeLPV3",
            "label": "_lpBalance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV3.sol:46"
          },
          {
            "contract": "StakeLPV3",
            "label": "_lpSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV3.sol:48"
          },
          {
            "contract": "StakeLPV3",
            "label": "_lastLPTimeShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV3.sol:50"
          },
          {
            "contract": "StakeLPV3",
            "label": "_lastLiquidityTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV3.sol:52"
          },
          {
            "contract": "StakeLPV3",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV3.sol:59"
          },
          {
            "contract": "StakeLPV3",
            "label": "_whitelistedRewardEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV3.sol:61"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a86247a711b319370166e1e653c71a83070583803844a6eae4087c7484b963fd": {
      "address": "0x9c703323e3c0f4326bdBA8d65Ba37AF3f7295295",
      "txHash": "0x6953c7e0b3087a0ed0cc5c3cea8112acb8086f4d9102638a2e6b144ba223c58d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)36462",
            "src": "../project:/contracts/TokenWrapperV4.sol:26"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:29"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:30"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:31"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:32"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:33"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV4.sol:40"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "../project:/contracts/TokenWrapperV4.sol:41"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:42"
          },
          {
            "contract": "TokenWrapperV4",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/TokenWrapperV4.sol:45"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)36462": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "09a26f0c333a85d4c1630a3f0fa5a0fcdea999d8317d20e5c682457992b94742": {
      "address": "0xC6C74E81595e52f7e104b8D6529851589005AF3D",
      "txHash": "0xf0e98809ed97e1d797ec3d2b618ce7d6565cca33dd27922355040011a4366649",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_stakeLPContract",
            "type": "t_address",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:29"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:31"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:33"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_holderContractList",
            "type": "t_struct(AddressSet)2114_storage",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:40"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardTokenList",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:42"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardTokenListIndex",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:44"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardTokenEmission",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:47"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_cumulativeRewardAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:50"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardEmissionTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:54"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardSink",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:58"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_lastLPTimeShareTimestampArray",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:64"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_cumulativeNewSupplyLPTimeShare",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:66"
          },
          {
            "contract": "WhitelistedRewardEmissionV3",
            "label": "_rewardPoolUserTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/WhitelistedRewardEmissionV3.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "698fa7dd88d6ba6d7c3805bb18b349908b0045cdcc9b870d3c8ceb10ca5aeab4": {
      "address": "0x72849cBB7FbB5A6BC0ef315bA4B81d0212472Bfe",
      "txHash": "0x0d84c09bcf2b872f248323a30780c3cd9f4a071dd09f937aa38b3073e44c5995",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "HolderSushiswap_STKATOM_ETHV2",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/holder/HolderSushiswap_STKATOM_ETHV2.sol:31"
          },
          {
            "contract": "HolderSushiswap_STKATOM_ETHV2",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/holder/HolderSushiswap_STKATOM_ETHV2.sol:34"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ff109a92f54089fe3ffcc272cd85b483f9955417e8f27ee3d60a3982893c99b3": {
      "address": "0x7dD41C5ba715C50289101621344165F483Ff7Ec0",
      "txHash": "0x014da43ddd9850714f47a7038a5211bd601b126f6aa0c6d9e94722eb26499d18",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "StakeLPV4",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV4.sol:37"
          },
          {
            "contract": "StakeLPV4",
            "label": "_version",
            "type": "t_uint256",
            "src": "../project:/contracts/StakeLPV4.sol:39"
          },
          {
            "contract": "StakeLPV4",
            "label": "_lpBalance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV4.sol:46"
          },
          {
            "contract": "StakeLPV4",
            "label": "_lpSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV4.sol:48"
          },
          {
            "contract": "StakeLPV4",
            "label": "_lastLPTimeShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StakeLPV4.sol:50"
          },
          {
            "contract": "StakeLPV4",
            "label": "_lastLiquidityTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/StakeLPV4.sol:52"
          },
          {
            "contract": "StakeLPV4",
            "label": "_whitelistedPTokenEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV4.sol:59"
          },
          {
            "contract": "StakeLPV4",
            "label": "_whitelistedRewardEmissionContract",
            "type": "t_address",
            "src": "../project:/contracts/StakeLPV4.sol:61"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2114_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2114_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1849_storage"
              }
            ]
          },
          "t_struct(Set)1849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
