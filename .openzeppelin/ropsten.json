{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe0642F4804720fD8C58b9c436E7d26a42b4bCb1c",
    "txHash": "0xe3a4c5eaecc4d7ea5d665b10fb03a29ff776a5b17701352c7fbfd42ae2c16d32"
  },
  "proxies": [
    {
      "address": "0x7889707ad4f788f787561c481Dc07dB353A9aC5e",
      "txHash": "0xd54c4418430e9299122109b99a6bc7e1d771997ec44bffc353350a4abcfbe1aa",
      "kind": "transparent"
    },
    {
      "address": "0x1a597710F4E4895C8fF9ade24Fcd817D35B282D7",
      "txHash": "0x5f523a150caf35c97363a25300ff4f9b159fdc560b8049317392b05c421fe062",
      "kind": "transparent"
    },
    {
      "address": "0x8bf256403f5C7d66Dc4e29cc893FcccDE8eC9d97",
      "txHash": "0x05862d05508b3290d59fc3707d9635b7902798bdb2b5894180caba050956bd23",
      "kind": "transparent"
    },
    {
      "address": "0x0708738210B5f93208E66747de1B0992BD0d9148",
      "txHash": "0xe0aed981ad4fff5f3e3fa783ef86d30c259589cfbc81bb577f71ee89fe0fd9bf",
      "kind": "transparent"
    }
  ],
  "impls": {
    "13af42f054fbcd4521e1624e64d969d41f94a4c1e774849b2b1f1f36bd8a20fb": {
      "address": "0xCeCD43dA3aa286264777D829aAe6D3dCb9505dec",
      "txHash": "0x51c4ee738d9ee8555044b512eddfb346cf703167180c224d32f9ce117b54f100",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "UTokensXPRT",
            "label": "_stokenContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\UTokensXPRT.sol:20"
          },
          {
            "contract": "UTokensXPRT",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\UTokensXPRT.sol:21"
          },
          {
            "contract": "UTokensXPRT",
            "label": "_wrapperContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\UTokensXPRT.sol:22"
          },
          {
            "contract": "UTokensXPRT",
            "label": "_version",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\UTokensXPRT.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5b64b1411137f4815be3a63386d588bb69d4e54884eff5d8962ed293c6660444": {
      "address": "0x5872d4c5b0f8Af9617Ac1124bD1c40Cd8B9A1FaF",
      "txHash": "0x2a5180bed43e928a69fc1e1d3a11e9c099b489daec80181fe14ca7679f19003e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "STokensXPRT",
            "label": "_whitelistedAddresses",
            "type": "t_struct(AddressSet)1901_storage",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:29"
          },
          {
            "contract": "STokensXPRT",
            "label": "_holderContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:31"
          },
          {
            "contract": "STokensXPRT",
            "label": "_lpContractAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:33"
          },
          {
            "contract": "STokensXPRT",
            "label": "_lastHolderRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:37"
          },
          {
            "contract": "STokensXPRT",
            "label": "_liquidStakingContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:40"
          },
          {
            "contract": "STokensXPRT",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)6192",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:42"
          },
          {
            "contract": "STokensXPRT",
            "label": "_rewardRate",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:45"
          },
          {
            "contract": "STokensXPRT",
            "label": "_lastMovingRewardTimestamp",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:46"
          },
          {
            "contract": "STokensXPRT",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:47"
          },
          {
            "contract": "STokensXPRT",
            "label": "_lastUserRewardTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:48"
          },
          {
            "contract": "STokensXPRT",
            "label": "_version",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\STokensXPRT.sol:51"
          }
        ],
        "types": {
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IUTokensV2)6192": {
            "label": "contract IUTokensV2"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "571ddbc4cdcab223af47f393d8ef17325cd9b012a10be4e0cca73b6eecabb777": {
      "address": "0xb3e5AaA3Af2684f98ddE2057523b8f2065d94522",
      "txHash": "0x0d9459d402ee8f2498d62d940d3d3a74e0a174646c19830d149e0847b324de19",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)6192",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:22"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_minDeposit",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:25"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_minWithdraw",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:26"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_depositFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:27"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_withdrawFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:28"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:29"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "hrpBytes",
            "type": "t_bytes_storage",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:36"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "controlDigitBytes",
            "type": "t_bytes_storage",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:37"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "dataBytesSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:38"
          },
          {
            "contract": "TokenWrapperXPRT",
            "label": "_version",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\TokenWrapperXPRT.sol:41"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)6192": {
            "label": "contract IUTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b328d2b537f949d3f7a88706faf706b4d9c38d12e090bbd360eca4923f1861e2": {
      "address": "0x6Ea46aFd4ed6Fb725096Ef939D4D62e609Fc54a8",
      "txHash": "0x62bcf494eca20401a4d878e447a2cd3a4be5f7c464b6ad2f923869f978d50b93",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_uTokens",
            "type": "t_contract(IUTokensV2)6192",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:21"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_sTokens",
            "type": "t_contract(ISTokensV2)5972",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:22"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_minStake",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:25"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_minUnstake",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:26"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_stakeFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:27"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakeFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:28"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_valueDivisor",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:29"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakingLockTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:35"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_epochInterval",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:36"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakeEpoch",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:37"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakeEpochPrevious",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:38"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakingExpiration",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:41"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_unstakingAmount",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:44"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_withdrawCounters",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:47"
          },
          {
            "contract": "LiquidStakingXPRT",
            "label": "_version",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\LiquidStakingXPRT.sol:50"
          }
        ],
        "types": {
          "t_contract(IUTokensV2)6192": {
            "label": "contract IUTokensV2"
          },
          "t_contract(ISTokensV2)5972": {
            "label": "contract ISTokensV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)1901_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1636_storage"
              }
            ]
          },
          "t_struct(Set)1636_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
