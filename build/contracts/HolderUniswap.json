{
  "contractName": "HolderUniswap",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "holderAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalRewardBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CalculateHolderRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "SetUTokensContract",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sTokenContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "valueDivisor",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getSTokenSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sTokenSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "uTokenContract",
          "type": "address"
        }
      ],
      "name": "setUTokensContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holderAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRewardBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CalculateHolderRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"SetUTokensContract\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sTokenSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sTokenContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"valueDivisor\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"uTokenContract\",\"type\":\"address\"}],\"name\":\"setUTokensContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getSTokenSupply(address,address,uint256)\":{\"details\":\"get SToken reserve supply of the whitelisted contract \"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,uint256)\":{\"details\":\"Constructor for initializing the Holder Uniswap contract.\",\"params\":{\"_sTokenContractAddress\":\"- address of the SToken contract.\",\"valueDivisor\":\"- valueDivisor set to 10^9.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setUTokensContract(address)\":{\"details\":\"redeem rewards from holder contract\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/HolderUniswap.sol\":\"HolderUniswap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/HolderUniswap.sol\":{\"keccak256\":\"0x90b7c0bb9bc43b3d14be93c6016840923f5b8c7a99bc98420be9b873832bae9e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ae0f3e6117694996c9bc76c92b907df5c2fc167af60dbb594b9dc12c346defef\",\"dweb:/ipfs/QmYDsWDsE6j4HDtig43vLtRuanV3Rj3xGoYfpYmBo6R9Wt\"]},\"/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/interfaces/IHolder.sol\":{\"keccak256\":\"0x7e23489ab4fccdd1969208ddfca5f11f7ff10bd817c6537b421b9fdf1e928d0e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b0977ddadcd7c50d858b94451d6fa63d56730bf5fa8bf588d32a1e181fc39274\",\"dweb:/ipfs/QmWmxp6FtfF8h1zupyWNZrw2Qo1sdeg4hbDPVYkmDS1b96\"]},\"/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/interfaces/ISTokens.sol\":{\"keccak256\":\"0x00df7ce94753bf8d96f8366a874ec12651582bc967be7d97d6ca9e60a1334b3f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8325bbbafb5049c9a600a8c445bffda8307b4ae4f83c0382b0ed4f573de49647\",\"dweb:/ipfs/QmU4SH3eAYaGupUAWNLgJ2MvY8VZ5AUgrw8wCSbkeiZZqx\"]},\"/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/interfaces/IUTokens.sol\":{\"keccak256\":\"0x4b787b3d38da8145b9e6624f780e1bae6824a86faabf07f4333f185b1167e5d3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://29403746802706d940231b152590b17f180fc1d44ade14a25c23e076a9cba498\",\"dweb:/ipfs/QmXPfPuQ7CMXY5uH6H7hC5QnJd7e5cCD3nbtsGzVj4JKJn\"]},\"/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/interfaces/Uniswap/IUniswapV2ERC20.sol\":{\"keccak256\":\"0xa32348df730b3636b1c67aac6995cc22a13c405f9200611b562e44f38ac70181\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3ed8aa28b67eb6478063b4570c032eb82a334e8592791079fc31cf4a4f225cd4\",\"dweb:/ipfs/Qmaq9gkF9JBktfz7PCydfCX31cuxvJNvN5xHzRkzCx3y6s\"]},\"/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/interfaces/Uniswap/IUniswapV2Pair.sol\":{\"keccak256\":\"0x293a8cd1ebfad47adaa1c65c94db05e79aed969434d81c1ae04c93624824123e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://25fd42ee6316bd5f889149ad3984e3612ecff382e802b99ec8e22863edc77b80\",\"dweb:/ipfs/QmeLjJxuo9tya3gYLse5wmhbVBkXg91YUqHiqqopm9G599\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xa3c77c9ea6b47301c7ab5bf3addc1d809d13a27a179c4629a1b55308e8633d14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77a789173aa9454336023580d52fedfb2d5ef0a1ccb3040ba20f5aa56e300aef\",\"dweb:/ipfs/Qme3CQYH1AywEH1w3mDV3UT6NhMQmjspNnUA6V8yBg77Ac\"]},\"@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0dd1e9b19801e3e7d900fbf4182d81e1afd23ad7be39504e33df6bbcba91d724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e30d594df25d0651c2cd6f85d856e5fc9f3dbae68d017e1da33eb3c7e2f1ecc\",\"dweb:/ipfs/QmPgkV99jZr3Zs9ex8dJ5j22oX4wDuDtMCnXNy67bTwgAB\"]},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbc89479d30592e82442edc38053b380f611037a5e6ceafc7bf57a7aa1f0305\",\"dweb:/ipfs/QmcdYtt56WmjeYvsFjK69FnahnAriw88VzY3XRZwXkQKKN\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xa1931c47a617014f858580db625aa0dcf343796f39acd4b5b51effc092a1f0a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cbeb499bad52667b96dd7df8e9b1f583e8c07afaba0018a75e5b7ff6e777173\",\"dweb:/ipfs/QmPLJnuhEcWnpmhMHKsiuVHVxMwb5k6idYyjajbrtZLz5B\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b81dcc816857a9d981386f6d8de49198420ee41cdc0ecade366ab412174d03\",\"dweb:/ipfs/QmV2vznMT6m9qo3pFMAWi3Nz3UDhwesgwFxeXe6Tod3v8A\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://062688aac76e27ab50157a9d645700cf92e3c0d51d3d860be1d2e1a0c04a87d0\",\"dweb:/ipfs/QmfXxppWAiSTeH8YNn2EtMPDgzrLeJ5rjRq8knEbje88mX\"]},\"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x20714cf126a1a984613579156d3cbc726db8025d8400e1db1d2bb714edaba335\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d6e8cc57f51f6c73eccd5b2dbaf3d8486a35148fe0e8bea4b002fbf2a78f381\",\"dweb:/ipfs/QmawvgjwaqMxyfbFnjxfap1FZ1sPwVgGHaEC41whKdP7N4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610b37806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806391d148541161007157806391d148541461019c578063a217fddf146101dc578063ca15c873146101e4578063cd6dc68714610201578063cfd0ec311461022d578063d547741f14610263576100a9565b806321bdf9e5146100ae578063248a9ca3146100d65780632f2ff15d1461010557806336568abe146101315780639010d07c1461015d575b600080fd5b6100d4600480360360208110156100c457600080fd5b50356001600160a01b031661028f565b005b6100f3600480360360208110156100ec57600080fd5b5035610322565b60408051918252519081900360200190f35b6100d46004803603604081101561011b57600080fd5b50803590602001356001600160a01b0316610337565b6100d46004803603604081101561014757600080fd5b50803590602001356001600160a01b031661039e565b6101806004803603604081101561017357600080fd5b50803590602001356103ff565b604080516001600160a01b039092168252519081900360200190f35b6101c8600480360360408110156101b257600080fd5b50803590602001356001600160a01b0316610420565b604080519115158252519081900360200190f35b6100f3610438565b6100f3600480360360208110156101fa57600080fd5b503561043d565b6100d46004803603604081101561021757600080fd5b506001600160a01b038135169060200135610454565b6100f36004803603606081101561024357600080fd5b506001600160a01b03813581169160208101359091169060400135610520565b6100d46004803603604081101561027957600080fd5b50803590602001356001600160a01b03166105a5565b6102a1600061029c6105fe565b610420565b6102d8576040805162461bcd60e51b815260206004820152600360248201526248553160e81b604482015290519081900360640190fd5b606780546001600160a01b0319166001600160a01b0383169081179091556040517ff745c285f36f88bea6af14d4d0f33dd9350cef7895216c1615b1caaee7857e0c90600090a250565b60009081526033602052604090206002015490565b6000828152603360205260409020600201546103559061029c6105fe565b6103905760405162461bcd60e51b815260040180806020018281038252602f815260200180610a46602f913960400191505060405180910390fd5b61039a8282610602565b5050565b6103a66105fe565b6001600160a01b0316816001600160a01b0316146103f55760405162461bcd60e51b815260040180806020018281038252602f815260200180610ad3602f913960400191505060405180910390fd5b61039a828261066b565b600082815260336020526040812061041790836106d4565b90505b92915050565b600082815260336020526040812061041790836106e0565b600081565b600081815260336020526040812061041a906106f5565b600054610100900460ff168061046d575061046d610700565b8061047b575060005460ff16155b6104b65760405162461bcd60e51b815260040180806020018281038252602e815260200180610aa5602e913960400191505060405180910390fd5b600054610100900460ff161580156104e1576000805460ff1961ff0019909116610100171660011790555b6104e9610711565b606580546001600160a01b0319166001600160a01b0385161790556066829055801561051b576000805461ff00191690555b505050565b606554604080516370a0823160e01b81526001600160a01b038681166004830152915160009392909216916370a0823191602480820192602092909190829003018186803b15801561057157600080fd5b505afa158015610585573d6000803e3d6000fd5b505050506040513d602081101561059b57600080fd5b5051949350505050565b6000828152603360205260409020600201546105c39061029c6105fe565b6103f55760405162461bcd60e51b8152600401808060200182810382526030815260200180610a756030913960400191505060405180910390fd5b3390565b600082815260336020526040902061061a90826107c3565b1561039a576106276105fe565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260336020526040902061068390826107d8565b1561039a576106906105fe565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600061041783836107ed565b6000610417836001600160a01b038416610851565b600061041a82610869565b600061070b3061086d565b15905090565b600054610100900460ff168061072a575061072a610700565b80610738575060005460ff16155b6107735760405162461bcd60e51b815260040180806020018281038252602e815260200180610aa5602e913960400191505060405180910390fd5b600054610100900460ff1615801561079e576000805460ff1961ff0019909116610100171660011790555b6107a6610873565b6107ae610873565b80156107c0576000805461ff00191690555b50565b6000610417836001600160a01b038416610913565b6000610417836001600160a01b03841661095d565b8154600090821061082f5760405162461bcd60e51b8152600401808060200182810382526022815260200180610a246022913960400191505060405180910390fd5b82600001828154811061083e57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b3b151590565b600054610100900460ff168061088c575061088c610700565b8061089a575060005460ff16155b6108d55760405162461bcd60e51b815260040180806020018281038252602e815260200180610aa5602e913960400191505060405180910390fd5b600054610100900460ff161580156107ae576000805460ff1961ff00199091166101001716600117905580156107c0576000805461ff001916905550565b600061091f8383610851565b6109555750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561041a565b50600061041a565b60008181526001830160205260408120548015610a19578354600019808301919081019060009087908390811061099057fe5b90600052602060002001549050808760000184815481106109ad57fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806109dd57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061041a565b600091505061041a56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212207aecc6ca4c0fd6b9bb0810a2e1afbe2a5f8ac4063336d734520de3c7af45b11b64736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c806391d148541161007157806391d148541461019c578063a217fddf146101dc578063ca15c873146101e4578063cd6dc68714610201578063cfd0ec311461022d578063d547741f14610263576100a9565b806321bdf9e5146100ae578063248a9ca3146100d65780632f2ff15d1461010557806336568abe146101315780639010d07c1461015d575b600080fd5b6100d4600480360360208110156100c457600080fd5b50356001600160a01b031661028f565b005b6100f3600480360360208110156100ec57600080fd5b5035610322565b60408051918252519081900360200190f35b6100d46004803603604081101561011b57600080fd5b50803590602001356001600160a01b0316610337565b6100d46004803603604081101561014757600080fd5b50803590602001356001600160a01b031661039e565b6101806004803603604081101561017357600080fd5b50803590602001356103ff565b604080516001600160a01b039092168252519081900360200190f35b6101c8600480360360408110156101b257600080fd5b50803590602001356001600160a01b0316610420565b604080519115158252519081900360200190f35b6100f3610438565b6100f3600480360360208110156101fa57600080fd5b503561043d565b6100d46004803603604081101561021757600080fd5b506001600160a01b038135169060200135610454565b6100f36004803603606081101561024357600080fd5b506001600160a01b03813581169160208101359091169060400135610520565b6100d46004803603604081101561027957600080fd5b50803590602001356001600160a01b03166105a5565b6102a1600061029c6105fe565b610420565b6102d8576040805162461bcd60e51b815260206004820152600360248201526248553160e81b604482015290519081900360640190fd5b606780546001600160a01b0319166001600160a01b0383169081179091556040517ff745c285f36f88bea6af14d4d0f33dd9350cef7895216c1615b1caaee7857e0c90600090a250565b60009081526033602052604090206002015490565b6000828152603360205260409020600201546103559061029c6105fe565b6103905760405162461bcd60e51b815260040180806020018281038252602f815260200180610a46602f913960400191505060405180910390fd5b61039a8282610602565b5050565b6103a66105fe565b6001600160a01b0316816001600160a01b0316146103f55760405162461bcd60e51b815260040180806020018281038252602f815260200180610ad3602f913960400191505060405180910390fd5b61039a828261066b565b600082815260336020526040812061041790836106d4565b90505b92915050565b600082815260336020526040812061041790836106e0565b600081565b600081815260336020526040812061041a906106f5565b600054610100900460ff168061046d575061046d610700565b8061047b575060005460ff16155b6104b65760405162461bcd60e51b815260040180806020018281038252602e815260200180610aa5602e913960400191505060405180910390fd5b600054610100900460ff161580156104e1576000805460ff1961ff0019909116610100171660011790555b6104e9610711565b606580546001600160a01b0319166001600160a01b0385161790556066829055801561051b576000805461ff00191690555b505050565b606554604080516370a0823160e01b81526001600160a01b038681166004830152915160009392909216916370a0823191602480820192602092909190829003018186803b15801561057157600080fd5b505afa158015610585573d6000803e3d6000fd5b505050506040513d602081101561059b57600080fd5b5051949350505050565b6000828152603360205260409020600201546105c39061029c6105fe565b6103f55760405162461bcd60e51b8152600401808060200182810382526030815260200180610a756030913960400191505060405180910390fd5b3390565b600082815260336020526040902061061a90826107c3565b1561039a576106276105fe565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260336020526040902061068390826107d8565b1561039a576106906105fe565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600061041783836107ed565b6000610417836001600160a01b038416610851565b600061041a82610869565b600061070b3061086d565b15905090565b600054610100900460ff168061072a575061072a610700565b80610738575060005460ff16155b6107735760405162461bcd60e51b815260040180806020018281038252602e815260200180610aa5602e913960400191505060405180910390fd5b600054610100900460ff1615801561079e576000805460ff1961ff0019909116610100171660011790555b6107a6610873565b6107ae610873565b80156107c0576000805461ff00191690555b50565b6000610417836001600160a01b038416610913565b6000610417836001600160a01b03841661095d565b8154600090821061082f5760405162461bcd60e51b8152600401808060200182810382526022815260200180610a246022913960400191505060405180910390fd5b82600001828154811061083e57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b3b151590565b600054610100900460ff168061088c575061088c610700565b8061089a575060005460ff16155b6108d55760405162461bcd60e51b815260040180806020018281038252602e815260200180610aa5602e913960400191505060405180910390fd5b600054610100900460ff161580156107ae576000805460ff1961ff00199091166101001716600117905580156107c0576000805461ff001916905550565b600061091f8383610851565b6109555750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561041a565b50600061041a565b60008181526001830160205260408120548015610a19578354600019808301919081019060009087908390811061099057fe5b90600052602060002001549050808760000184815481106109ad57fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806109dd57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061041a565b600091505061041a56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212207aecc6ca4c0fd6b9bb0810a2e1afbe2a5f8ac4063336d734520de3c7af45b11b64736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "582:13116:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "582:13116:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9972:244;;;;;;;;;;;;;;;;-1:-1:-1;9972:244:0;-1:-1:-1;;;;;9972:244:0;;:::i;:::-;;4652:112:17;;;;;;;;;;;;;;;;-1:-1:-1;4652:112:17;;:::i;:::-;;;;;;;;;;;;;;;;5014:223;;;;;;;;;;;;;;;;-1:-1:-1;5014:223:17;;;;;;-1:-1:-1;;;;;5014:223:17;;:::i;6188:205::-;;;;;;;;;;;;;;;;-1:-1:-1;6188:205:17;;;;;;-1:-1:-1;;;;;6188:205:17;;:::i;4335:136::-;;;;;;;;;;;;;;;;-1:-1:-1;4335:136:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;4335:136:17;;;;;;;;;;;;;;3320:137;;;;;;;;;;;;;;;;-1:-1:-1;3320:137:17;;;;;;-1:-1:-1;;;;;3320:137:17;;:::i;:::-;;;;;;;;;;;;;;;;;;2097:49;;;:::i;3625:125::-;;;;;;;;;;;;;;;;-1:-1:-1;3625:125:17;;:::i;1810:246:0:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1810:246:0;;;;;;;;:::i;2613:207::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2613:207:0;;;;;;;;;;;;;;;;;:::i;5471:226:17:-;;;;;;;;;;;;;;;;-1:-1:-1;5471:226:17;;;;;;-1:-1:-1;;;;;5471:226:17;;:::i;9972:244:0:-;10066:41;2142:4:17;10094:12:0;:10;:12::i;:::-;10066:7;:41::i;:::-;10058:57;;;;;-1:-1:-1;;;10058:57:0;;;;;;;;;;;;-1:-1:-1;;;10058:57:0;;;;;;;;;;;;;;;10125:8;:35;;-1:-1:-1;;;;;;10125:35:0;-1:-1:-1;;;;;10125:35:0;;;;;;;;10175:34;;;;-1:-1:-1;;10175:34:0;9972:244;:::o;4652:112:17:-;4709:7;4735:12;;;:6;:12;;;;;:22;;;;4652:112::o;5014:223::-;5105:12;;;;:6;:12;;;;;:22;;;5097:45;;5129:12;:10;:12::i;5097:45::-;5089:105;;;;-1:-1:-1;;;5089:105:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5205:25;5216:4;5222:7;5205:10;:25::i;:::-;5014:223;;:::o;6188:205::-;6285:12;:10;:12::i;:::-;-1:-1:-1;;;;;6274:23:17;:7;-1:-1:-1;;;;;6274:23:17;;6266:83;;;;-1:-1:-1;;;6266:83:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6360:26;6372:4;6378:7;6360:11;:26::i;4335:136::-;4408:7;4434:12;;;:6;:12;;;;;:30;;4458:5;4434:23;:30::i;:::-;4427:37;;4335:136;;;;;:::o;3320:137::-;3389:4;3412:12;;;:6;:12;;;;;:38;;3442:7;3412:29;:38::i;2097:49::-;2142:4;2097:49;:::o;3625:125::-;3688:7;3714:12;;;:6;:12;;;;;:29;;:27;:29::i;1810:246:0:-;1512:13:19;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:19;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:19;;;;;1738:19;1720:4;1738:19;;;1670:98;1921:22:0::1;:20;:22::i;:::-;1953:14;:58:::0;;-1:-1:-1;;;;;;1953:58:0::1;-1:-1:-1::0;;;;;1953:58:0;::::1;;::::0;;2021:13:::1;:28:::0;;;1790:66:19;;;;1840:5;1824:21;;-1:-1:-1;;1824:21:19;;;1790:66;1810:246:0;;;:::o;2613:207::-;2756:14;;:28;;;-1:-1:-1;;;2756:28:0;;-1:-1:-1;;;;;2756:28:0;;;;;;;;;2710:20;;2756:14;;;;;:24;;:28;;;;;;;;;;;;;;;:14;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2756:28:0;;2613:207;-1:-1:-1;;;;2613:207:0:o;5471:226:17:-;5563:12;;;;:6;:12;;;;;:22;;;5555:45;;5587:12;:10;:12::i;5555:45::-;5547:106;;;;-1:-1:-1;;;5547:106:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;828:104:23;915:10;828:104;:::o;7395:184:17:-;7468:12;;;;:6;:12;;;;;:33;;7493:7;7468:24;:33::i;:::-;7464:109;;;7549:12;:10;:12::i;:::-;-1:-1:-1;;;;;7522:40:17;7540:7;-1:-1:-1;;;;;7522:40:17;7534:4;7522:40;;;;;;;;;;7395:184;;:::o;7585:188::-;7659:12;;;;:6;:12;;;;;:36;;7687:7;7659:27;:36::i;:::-;7655:112;;;7743:12;:10;:12::i;:::-;-1:-1:-1;;;;;7716:40:17;7734:7;-1:-1:-1;;;;;7716:40:17;7728:4;7716:40;;;;;;;;;;7585:188;;:::o;7688:156:24:-;7762:7;7812:22;7816:3;7828:5;7812:3;:22::i;6995:165::-;7075:4;7098:55;7108:3;-1:-1:-1;;;;;7128:23:24;;7098:9;:55::i;7241:115::-;7304:7;7330:19;7338:3;7330:7;:19::i;1952:123:19:-;2000:4;2024:44;2062:4;2024:29;:44::i;:::-;2023:45;2016:52;;1952:123;:::o;1599:138:17:-;1512:13:19;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:19;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:19;;;;;1738:19;1720:4;1738:19;;;1670:98;1662:26:17::1;:24;:26::i;:::-;1698:32;:30;:32::i;:::-;1794:14:19::0;1790:66;;;1840:5;1824:21;;-1:-1:-1;;1824:21:19;;;1790:66;1599:138:17;:::o;6440:150:24:-;6510:4;6533:50;6538:3;-1:-1:-1;;;;;6558:23:24;;6533:4;:50::i;6758:156::-;6831:4;6854:53;6862:3;-1:-1:-1;;;;;6882:23:24;;6854:7;:53::i;4463:201::-;4557:18;;4530:7;;4557:26;-1:-1:-1;4549:73:24;;;;-1:-1:-1;;;4549:73:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4639:3;:11;;4651:5;4639:18;;;;;;;;;;;;;;;;4632:25;;4463:201;;;;:::o;3816:127::-;3889:4;3912:19;;;:12;;;;;:19;;;;;;:24;;;3816:127::o;4024:107::-;4106:18;;4024:107::o;737:413:22:-;1097:20;1135:8;;;737:413::o;759:64:23:-;1512:13:19;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:19;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:19;;;;;1738:19;1720:4;1738:19;;;1794:14;1790:66;;;1840:5;1824:21;;-1:-1:-1;;1824:21:19;;;759:64:23;:::o;1651:404:24:-;1714:4;1735:21;1745:3;1750:5;1735:9;:21::i;:::-;1730:319;;-1:-1:-1;1772:23:24;;;;;;;;:11;:23;;;;;;;;;;;;;1952:18;;1930:19;;;:12;;;:19;;;;;;:40;;;;1984:11;;1730:319;-1:-1:-1;2033:5:24;2026:12;;2223:1512;2289:4;2426:19;;;:12;;;:19;;;;;;2460:15;;2456:1273;;2889:18;;-1:-1:-1;;2841:14:24;;;;2889:22;;;;2817:21;;2889:3;;:22;;3171;;;;;;;;;;;;;;3151:42;;3314:9;3285:3;:11;;3297:13;3285:26;;;;;;;;;;;;;;;;;;;:38;;;;3389:23;;;3431:1;3389:12;;;:23;;;;;;3415:17;;;3389:43;;3538:17;;3389:3;;3538:17;;;;;;;;;;;;;;;;;;;;;;3630:3;:12;;:19;3643:5;3630:19;;;;;;;;;;;3623:26;;;3671:4;3664:11;;;;;;;;2456:1273;3713:5;3706:12;;;;",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >= 0.7.0;\n\nimport \"./interfaces/IHolder.sol\";\nimport \"./interfaces/ISTokens.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"./interfaces/Uniswap/IUniswapV2ERC20.sol\";\nimport \"./interfaces/Uniswap/IUniswapV2Pair.sol\";\nimport \"@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\";\nimport \"./interfaces/IUTokens.sol\";\n\ncontract HolderUniswap is IHolder, Initializable, AccessControlUpgradeable{\n\n    using SafeMathUpgradeable for uint256;\n    IERC20Upgradeable sTokenContract;\n\n    // constants defining access control ROLES\n    // bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    // mapping(address => uint256) private _holderContractRewardBalance;\n    // mapping(address => uint256) private _holderContractTotalRewardsTimestamp;\n\n    // variables pertaining to moving reward rate logic\n    uint256 private _valueDivisor;\n\n    IUTokens private _uTokens;\n\n    // mapping(address => uint256) private _rewardsTillTimestamp;\n\n    // mapping(address => address[3]) private _holderContractAddresses;\n    // mapping(address => bytes4[3]) private _holderContractFuncSigs;\n\n    // mapping(address => uint256) private _holderContractTotalLPTimeShare;\n    // mapping(address => mapping(address => uint256)) private _holderContractLPBalanceTimestamps;\n    // mapping(address => uint256) private _holderContractLPSupplyTimestamp;\n\n    /**\n   * @dev Constructor for initializing the Holder Uniswap contract.\n   * @param _sTokenContractAddress - address of the SToken contract.\n   * @param valueDivisor - valueDivisor set to 10^9.\n   */\n    function initialize(address _sTokenContractAddress, uint256 valueDivisor) public virtual initializer {\n        __AccessControl_init();\n        sTokenContract = IERC20Upgradeable(_sTokenContractAddress);\n        _valueDivisor = valueDivisor;\n    }\n\n    /**\n     * @dev get holder contract attributes\n     *\n     */\n    /* function getHolderAttributes(address whitelistedAddress, address userAddress) public view returns (uint256 lpBalance, uint256 lpSupply, uint256 sTokenSupply){\n        lpBalance = IUniswapV2ERC20(whitelistedAddress).balanceOf(userAddress);\n        lpSupply = IUniswapV2ERC20(whitelistedAddress).totalSupply();\n        sTokenSupply = sTokenContract.balanceOf(whitelistedAddress);\n    } */\n\n    /**\n     * @dev get SToken reserve supply of the whitelisted contract \n     *\n     */\n    function getSTokenSupply(address to, address from, uint256 amount) public override view returns (uint256 sTokenSupply){\n        sTokenSupply = sTokenContract.balanceOf(to);\n        return sTokenSupply;\n    }\n\n    /**\n    * @dev Calculate pending rewards from the provided 'principal' & 'lastRewardTimestamp'. The rate is the moving reward rate.\n    * @param principal: principal amount\n    * @param lastRewardTimestamp: timestamp of last reward calculation performed\n    * @param rewardRate: reward rate in an array\n    * @param _rewardBlockTimestamp: reward block timestamp in an array\n    */\n    /* function _calculatePendingRewards(uint256 principal, uint256 lastRewardTimestamp, uint256[] memory rewardRate, uint256[] memory _rewardBlockTimestamp) internal view returns (uint256 pendingRewards){\n        uint256 _index;\n        uint256 _rewardBlocks;\n        uint256 _simpleInterestOfInterval;\n        for(_index = _rewardBlockTimestamp.length.sub(1); _index >= 0;){\n            // logic applies for all indexes of array except last index\n            if(_index < _rewardBlockTimestamp.length.sub(1)) {\n                if(_rewardBlockTimestamp[_index] > lastRewardTimestamp) {\n                    _rewardBlocks = (_rewardBlockTimestamp[_index.add(1)]).sub(_rewardBlockTimestamp[_index]);\n                    _simpleInterestOfInterval = (((principal.mul(rewardRate[_index])).mul(_rewardBlocks))).div(100 * _valueDivisor);\n                    pendingRewards = pendingRewards.add(_simpleInterestOfInterval);\n                }\n                else {\n                    _rewardBlocks = (_rewardBlockTimestamp[_index.add(1)]).sub(lastRewardTimestamp);\n                    _simpleInterestOfInterval = (((principal.mul(rewardRate[_index])).mul(_rewardBlocks))).div(100 * _valueDivisor);\n                    pendingRewards = pendingRewards.add(_simpleInterestOfInterval);\n                    break;\n                }\n            }\n            // logic applies only for the last index of array\n            else {\n                if(_rewardBlockTimestamp[_index] > lastRewardTimestamp) {\n                    _rewardBlocks = (block.timestamp).sub(_rewardBlockTimestamp[_index]);\n                    _simpleInterestOfInterval = (((principal.mul(rewardRate[_index])).mul(_rewardBlocks))).div(100 * _valueDivisor);\n                    pendingRewards = pendingRewards.add(_simpleInterestOfInterval);\n                }\n                else {\n                    _rewardBlocks = (block.timestamp).sub(lastRewardTimestamp);\n                    _simpleInterestOfInterval = (((principal.mul(rewardRate[_index])).mul(_rewardBlocks))).div(100 * _valueDivisor);\n                    pendingRewards = pendingRewards.add(_simpleInterestOfInterval);\n                    break;\n                }\n            }\n\n            if(_index == 0) break;\n            else {\n                _index = _index.sub(1);\n            }\n        }\n        return pendingRewards;\n    } */\n\n    /**\n    * @dev redeem rewards from holder contract\n    * @param whitelistedAddress: contract address of the liquidity pool/product\n    * @param rewardRate: reward rate in an array\n    * @param rewardBlockTimestamp: reward block timestamp in an array\n    */\n    /* function calculateHolderRewards(address whitelistedAddress, address userAddress, uint256[] calldata rewardRate, uint256[] calldata rewardBlockTimestamp) public override returns (bool){\n\n        // CALCULATE TOTAL REWARD POOL OF HOLDER CONTRACT USING STOKEN RESERVE TOTAL SUPPLY::\n        uint256 _sTokenReserveSupply;\n        uint256 _lpTokenBalance;\n        uint256 _lpTokenSupply;\n\n        // get the lpBalance, lpSupply and sTokenReserveSupply to calculate reward shares\n        (_lpTokenBalance, _lpTokenSupply, _sTokenReserveSupply) =  getHolderAttributes(whitelistedAddress, userAddress);\n\n\n        // get the last reward timestamp of sToken reserve\n        uint256 _sTokenReserveTimestamp = _holderContractTotalRewardsTimestamp[whitelistedAddress];\n        uint256 _additionalRewardBalance;\n\n        // calculate the new rewards accrued and get the value of updated total rewards (without saving to state)\n        if(_sTokenReserveSupply != 0)\n            _additionalRewardBalance = _calculatePendingRewards(_sTokenReserveSupply, _sTokenReserveTimestamp, rewardRate, rewardBlockTimestamp);\n\n        bool rewardBalance = calculateRewardsBalance(whitelistedAddress, _additionalRewardBalance);\n\n        // add the additional rewards generated to the existing total pool\n        uint256 _totalRewardBalance = _holderContractRewardBalance[whitelistedAddress].add(_additionalRewardBalance);\n\n        // update the reward timestamp of whitelisted contract\n        _holderContractTotalRewardsTimestamp[whitelistedAddress] = block.timestamp;\n\n        // update the reward balance of whitelisted contract\n        // _holderContractRewardBalance[whitelistedAddress] = _totalRewardBalance;\n\n        // OR\n\n        // Directly send the rewards to the holder address (this address itself)\n        if(_additionalRewardBalance>0) {\n            // Mint new uTokens and send to the callers account\n            _uTokens.mint(address(this), _additionalRewardBalance);\n        }\n\n        // find the simple schematic of transfer of value between SToken contract and holder contract, for whitelisted address\n        // issue with separated holder logic:\n        // 1. need to send rewardRate and rewardTimestamps dynamic array to holder contract func also \n        // 2. holder contract need to execute mint function\n\n        emit CalculateHolderRewards(address(this), _additionalRewardBalance, block.timestamp);\n        return rewardBalance;\n    } */\n\n    /**\n    * @dev redeem rewards from holder contract\n    */\n    /* function calculateRewardsBalance(address whitelistedAddress, uint256 _additionalRewardBalance) internal returns (bool){\n        // add the additional rewards generated to the existing total pool\n        uint256 _totalRewardBalance = _holderContractRewardBalance[whitelistedAddress].add(_additionalRewardBalance);\n\n        // update the reward timestamp of whitelisted contract\n        _holderContractTotalRewardsTimestamp[whitelistedAddress] = block.timestamp;\n\n        // update the reward balance of whitelisted contract\n        // _holderContractRewardBalance[whitelistedAddress] = _totalRewardBalance;\n\n        // OR\n\n        // Directly send the rewards to the holder address (this address itself)\n        if(_additionalRewardBalance>0) {\n            // Mint new uTokens and send to the callers account\n            _uTokens.mint(address(this), _additionalRewardBalance);\n        }\n\n        // find the simple schematic of transfer of value between SToken contract and holder contract, for whitelisted address\n        // issue with separated holder logic:\n        // 1. need to send rewardRate and rewardTimestamps dynamic array to holder contract func also\n        // 2. holder contract need to execute mint function\n        \n\n        emit CalculateHolderRewards(address(this), _totalRewardBalance,  _additionalRewardBalance, block.timestamp);\n        return true;\n\n    } */\n\n        /*\n        * @dev Set 'contract address', called from admin\n        * @param uTokenContract: utoken contract address\n        *\n        * Emits a {SetUTokensContract} event with '_contract' set to the utoken contract address.\n        *\n        */\n    function setUTokensContract(address uTokenContract) public virtual override {\n        require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()), \"HU1\");\n        _uTokens = IUTokens(uTokenContract);\n        emit SetUTokensContract(uTokenContract);\n    }\n\n    /* function getLPTimeShares(address whitelistedAddress, address userAddress, uint256 lpTokenBalance, uint256 lpTokenSupply) public view returns (uint256 lpBalanceTimeShare, uint256 lpTotalSupplyTimeShare){\n        uint256 _lpNewSupplyTimeShare;\n        uint256 _lastLPBalanceShareTimeInterval = block.timestamp.sub(_holderContractLPBalanceTimestamps[whitelistedAddress][userAddress]);\n        // calculate the time share of balance of user\n        // (dont use _calculatePendingRewards since reward rate is irrelevant here)\n        if(lpTokenBalance != 0 &&  _lastLPBalanceShareTimeInterval != 0) {\n            lpBalanceTimeShare = lpTokenBalance.mul(_lastLPBalanceShareTimeInterval);\n        }\n\n        // CALCULATE LPTIMESHARE OF LP TOTAL SUPPLY OF CONTRACT::\n        // get the LP total Supply's last timestamp for LPTimeShare calculation\n        // uint256 _lastLPSupplyShareTimestamp = _holderContractLPSupplyTimestamp[whitelistedAddress];\n        uint256 _lastLPSupplyShareTimeInterval = block.timestamp.sub(_holderContractLPSupplyTimestamp[whitelistedAddress]);\n        // calculate the new incoming time share of total supply of contract\n        // (dont use _calculatePendingRewards since reward rate is irrelevant here)\n        if(lpTokenSupply != 0 &&  _lastLPSupplyShareTimeInterval != 0) {\n            _lpNewSupplyTimeShare = lpTokenSupply.mul(_lastLPSupplyShareTimeInterval);\n        }\n\n        // calculate the total time share of total supply of contract\n        lpTotalSupplyTimeShare = _holderContractTotalLPTimeShare[whitelistedAddress].add(_lpNewSupplyTimeShare);\n        assert(lpTotalSupplyTimeShare != 0);\n\n    } */\n\n    /* function getHolderAttributes(address whitelistedAddress, address userAddress) public view returns (uint256 lpBalance, uint256 lpSupply, uint256 sTokenSupply){\n        // copy all holder logic attributes to local variables\n        address _lpTokenERC20ContractAddress = _holderContractAddresses[whitelistedAddress][1];\n        address _sTokenReserveContractAddress = _holderContractAddresses[whitelistedAddress][2];\n\n        bytes4 _lpTokenBalanceFuncSig = _holderContractFuncSigs[whitelistedAddress][0];\n        bytes4 _lpTokenSupplyFuncSig = _holderContractFuncSigs[whitelistedAddress][1];\n        bytes4 _sTokenSupplyFuncSig = _holderContractFuncSigs[whitelistedAddress][2];\n\n        // get the SToken Reserve Supply\n        (bool success, bytes memory data) =\n        _sTokenReserveContractAddress.staticcall(abi.encodeWithSelector(_sTokenSupplyFuncSig, whitelistedAddress));\n        require(success && data.length >= 32, \"ST7\");\n        sTokenSupply =  abi.decode(data, (uint256));\n\n        // get the LP Token balance of user\n        if(userAddress != address(0)) {\n            (bool success2, bytes memory data2) =\n            _lpTokenERC20ContractAddress.staticcall(abi.encodeWithSelector(_lpTokenBalanceFuncSig, userAddress));\n            require(success2 && data2.length >= 32, \"ST8\");\n            lpBalance =  abi.decode(data2, (uint256));\n        }\n        else\n            lpBalance = 0;\n\n        // get the LP Token total supply of ERC20-LP-Contract\n        if(userAddress != address(0)) {\n\n            (bool success3, bytes memory data3) =\n            _lpTokenERC20ContractAddress.staticcall(abi.encodeWithSelector(_lpTokenSupplyFuncSig));\n            require(success3 && data3.length >= 32, \"ST9\");\n            lpSupply =  abi.decode(data3, (uint256));\n        }\n        else\n            lpSupply = 0;\n\n    } */\n\n}",
  "sourcePath": "/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/HolderUniswap.sol",
  "ast": {
    "absolutePath": "/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/HolderUniswap.sol",
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        6928
      ],
      "AddressUpgradeable": [
        8201
      ],
      "ContextUpgradeable": [
        8246
      ],
      "EnumerableSetUpgradeable": [
        8738
      ],
      "HolderUniswap": [
        100
      ],
      "IERC20Upgradeable": [
        7957
      ],
      "IHolder": [
        3240
      ],
      "ISTokens": [
        3477
      ],
      "IUTokens": [
        3608
      ],
      "IUniswapV2ERC20": [
        3726
      ],
      "IUniswapV2Pair": [
        3968
      ],
      "Initializable": [
        7349
      ],
      "SafeMathUpgradeable": [
        7283
      ]
    },
    "id": 101,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:25:0"
      },
      {
        "absolutePath": "/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/interfaces/IHolder.sol",
        "file": "./interfaces/IHolder.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 101,
        "sourceUnit": 3241,
        "src": "66:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/interfaces/ISTokens.sol",
        "file": "./interfaces/ISTokens.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 101,
        "sourceUnit": 3478,
        "src": "101:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 101,
        "sourceUnit": 7958,
        "src": "137:79:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 101,
        "sourceUnit": 6929,
        "src": "217:81:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/interfaces/Uniswap/IUniswapV2ERC20.sol",
        "file": "./interfaces/Uniswap/IUniswapV2ERC20.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 101,
        "sourceUnit": 3727,
        "src": "299:50:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/interfaces/Uniswap/IUniswapV2Pair.sol",
        "file": "./interfaces/Uniswap/IUniswapV2Pair.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 101,
        "sourceUnit": 3969,
        "src": "350:49:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 101,
        "sourceUnit": 7284,
        "src": "400:74:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
        "id": 9,
        "nodeType": "ImportDirective",
        "scope": 101,
        "sourceUnit": 7350,
        "src": "475:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/interfaces/IUTokens.sol",
        "file": "./interfaces/IUTokens.sol",
        "id": 10,
        "nodeType": "ImportDirective",
        "scope": 101,
        "sourceUnit": 3609,
        "src": "545:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11,
              "name": "IHolder",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3240,
              "src": "608:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IHolder_$3240",
                "typeString": "contract IHolder"
              }
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "608:7:0"
          },
          {
            "baseName": {
              "id": 13,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7349,
              "src": "617:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$7349",
                "typeString": "contract Initializable"
              }
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "617:13:0"
          },
          {
            "baseName": {
              "id": 15,
              "name": "AccessControlUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6928,
              "src": "632:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControlUpgradeable_$6928",
                "typeString": "contract AccessControlUpgradeable"
              }
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "632:24:0"
          }
        ],
        "contractDependencies": [
          3240,
          6928,
          7349,
          8246
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 100,
        "linearizedBaseContracts": [
          100,
          6928,
          8246,
          7349,
          3240
        ],
        "name": "HolderUniswap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19,
            "libraryName": {
              "id": 17,
              "name": "SafeMathUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7283,
              "src": "669:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathUpgradeable_$7283",
                "typeString": "library SafeMathUpgradeable"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "663:38:0",
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "693:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "sTokenContract",
            "nodeType": "VariableDeclaration",
            "scope": 100,
            "src": "706:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Upgradeable_$7957",
              "typeString": "contract IERC20Upgradeable"
            },
            "typeName": {
              "id": 20,
              "name": "IERC20Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7957,
              "src": "706:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$7957",
                "typeString": "contract IERC20Upgradeable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "_valueDivisor",
            "nodeType": "VariableDeclaration",
            "scope": 100,
            "src": "1075:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1075:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "_uTokens",
            "nodeType": "VariableDeclaration",
            "scope": 100,
            "src": "1111:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUTokens_$3608",
              "typeString": "contract IUTokens"
            },
            "typeName": {
              "id": 24,
              "name": "IUTokens",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3608,
              "src": "1111:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUTokens_$3608",
                "typeString": "contract IUTokens"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "1911:145:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 35,
                      "name": "__AccessControl_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6643,
                      "src": "1921:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1921:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "1921:22:0"
                },
                {
                  "expression": {
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38,
                      "name": "sTokenContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1953:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$7957",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 40,
                          "name": "_sTokenContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "1988:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 39,
                        "name": "IERC20Upgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7957,
                        "src": "1970:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$7957_$",
                          "typeString": "type(contract IERC20Upgradeable)"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1970:41:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$7957",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "src": "1953:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$7957",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "1953:58:0"
                },
                {
                  "expression": {
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44,
                      "name": "_valueDivisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2021:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 45,
                      "name": "valueDivisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2037:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2021:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "2021:28:0"
                }
              ]
            },
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "1606:199:0",
              "text": " @dev Constructor for initializing the Holder Uniswap contract.\n @param _sTokenContractAddress - address of the SToken contract.\n @param valueDivisor - valueDivisor set to 10^9."
            },
            "functionSelector": "cd6dc687",
            "id": 49,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33,
                "modifierName": {
                  "id": 32,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7332,
                  "src": "1899:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1899:11:0"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "_sTokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "1830:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "valueDivisor",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "1862:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1862:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1829:54:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1911:0:0"
            },
            "scope": 100,
            "src": "1810:246:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3223
            ],
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "2731:89:0",
              "statements": [
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62,
                      "name": "sTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "2741:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 65,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "2781:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 63,
                          "name": "sTokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "2756:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$7957",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7896,
                        "src": "2756:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2756:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2741:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "2741:43:0"
                },
                {
                  "expression": {
                    "id": 69,
                    "name": "sTokenSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60,
                    "src": "2801:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 61,
                  "id": 70,
                  "nodeType": "Return",
                  "src": "2794:19:0"
                }
              ]
            },
            "documentation": {
              "id": 50,
              "nodeType": "StructuredDocumentation",
              "src": "2523:85:0",
              "text": " @dev get SToken reserve supply of the whitelisted contract "
            },
            "functionSelector": "cfd0ec31",
            "id": 72,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSTokenSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 58,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2687:8:0"
            },
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "2638:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2638:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "2650:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2650:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "2664:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2664:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2637:42:0"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "sTokenSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "2710:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2709:22:0"
            },
            "scope": 100,
            "src": "2613:207:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3211
            ],
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "10048:168:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6667,
                            "src": "10074:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 82,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8230,
                              "src": "10094:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10094:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 80,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6713,
                          "src": "10066:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10066:41:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "485531",
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10109:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8a2d00750a0fb59da5db9e28d53493bfe7ea44350f075a385ef9ccfb20187a1",
                          "typeString": "literal_string \"HU1\""
                        },
                        "value": "HU1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8a2d00750a0fb59da5db9e28d53493bfe7ea44350f075a385ef9ccfb20187a1",
                          "typeString": "literal_string \"HU1\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10058:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10058:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "10058:57:0"
                },
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88,
                      "name": "_uTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "10125:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUTokens_$3608",
                        "typeString": "contract IUTokens"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 90,
                          "name": "uTokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "10145:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 89,
                        "name": "IUTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3608,
                        "src": "10136:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUTokens_$3608_$",
                          "typeString": "type(contract IUTokens)"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10136:24:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUTokens_$3608",
                        "typeString": "contract IUTokens"
                      }
                    },
                    "src": "10125:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUTokens_$3608",
                      "typeString": "contract IUTokens"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "10125:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 95,
                        "name": "uTokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "10194:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 94,
                      "name": "SetUTokensContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3239,
                      "src": "10175:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10175:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "EmitStatement",
                  "src": "10170:39:0"
                }
              ]
            },
            "documentation": {
              "id": 73,
              "nodeType": "StructuredDocumentation",
              "src": "8268:57:0",
              "text": " @dev redeem rewards from holder contract"
            },
            "functionSelector": "21bdf9e5",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUTokensContract",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 77,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10039:8:0"
            },
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "uTokenContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "10000:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10000:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9999:24:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10048:0:0"
            },
            "scope": 100,
            "src": "9972:244:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 101,
        "src": "582:13116:0"
      }
    ],
    "src": "39:13659:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/HolderUniswap.sol",
      "exportedSymbols": {
        "AccessControlUpgradeable": [
          6928
        ],
        "AddressUpgradeable": [
          8201
        ],
        "ContextUpgradeable": [
          8246
        ],
        "EnumerableSetUpgradeable": [
          8738
        ],
        "HolderUniswap": [
          100
        ],
        "IERC20Upgradeable": [
          7957
        ],
        "IHolder": [
          3240
        ],
        "ISTokens": [
          3477
        ],
        "IUTokens": [
          3608
        ],
        "IUniswapV2ERC20": [
          3726
        ],
        "IUniswapV2Pair": [
          3968
        ],
        "Initializable": [
          7349
        ],
        "SafeMathUpgradeable": [
          7283
        ]
      },
      "license": "UNLICENSED"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.7",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "39:25:0"
      },
      {
        "attributes": {
          "SourceUnit": 3241,
          "absolutePath": "/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/interfaces/IHolder.sol",
          "file": "./interfaces/IHolder.sol",
          "scope": 101,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "66:34:0"
      },
      {
        "attributes": {
          "SourceUnit": 3478,
          "absolutePath": "/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/interfaces/ISTokens.sol",
          "file": "./interfaces/ISTokens.sol",
          "scope": 101,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "101:35:0"
      },
      {
        "attributes": {
          "SourceUnit": 7958,
          "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
          "scope": 101,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 4,
        "name": "ImportDirective",
        "src": "137:79:0"
      },
      {
        "attributes": {
          "SourceUnit": 6929,
          "absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
          "scope": 101,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 5,
        "name": "ImportDirective",
        "src": "217:81:0"
      },
      {
        "attributes": {
          "SourceUnit": 3727,
          "absolutePath": "/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/interfaces/Uniswap/IUniswapV2ERC20.sol",
          "file": "./interfaces/Uniswap/IUniswapV2ERC20.sol",
          "scope": 101,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6,
        "name": "ImportDirective",
        "src": "299:50:0"
      },
      {
        "attributes": {
          "SourceUnit": 3969,
          "absolutePath": "/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/interfaces/Uniswap/IUniswapV2Pair.sol",
          "file": "./interfaces/Uniswap/IUniswapV2Pair.sol",
          "scope": 101,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7,
        "name": "ImportDirective",
        "src": "350:49:0"
      },
      {
        "attributes": {
          "SourceUnit": 7284,
          "absolutePath": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
          "scope": 101,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 8,
        "name": "ImportDirective",
        "src": "400:74:0"
      },
      {
        "attributes": {
          "SourceUnit": 7350,
          "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
          "file": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
          "scope": 101,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 9,
        "name": "ImportDirective",
        "src": "475:69:0"
      },
      {
        "attributes": {
          "SourceUnit": 3609,
          "absolutePath": "/home/aditimahesh/Documents/Work/Persistence/go/src/github.com/persistenceOne/pStakeSmartContracts/contracts/interfaces/IUTokens.sol",
          "file": "./interfaces/IUTokens.sol",
          "scope": 101,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10,
        "name": "ImportDirective",
        "src": "545:35:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            3240,
            6928,
            7349,
            8246
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            100,
            6928,
            8246,
            7349,
            3240
          ],
          "name": "HolderUniswap",
          "scope": 101
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IHolder",
                  "referencedDeclaration": 3240,
                  "type": "contract IHolder"
                },
                "id": 11,
                "name": "UserDefinedTypeName",
                "src": "608:7:0"
              }
            ],
            "id": 12,
            "name": "InheritanceSpecifier",
            "src": "608:7:0"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Initializable",
                  "referencedDeclaration": 7349,
                  "type": "contract Initializable"
                },
                "id": 13,
                "name": "UserDefinedTypeName",
                "src": "617:13:0"
              }
            ],
            "id": 14,
            "name": "InheritanceSpecifier",
            "src": "617:13:0"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "AccessControlUpgradeable",
                  "referencedDeclaration": 6928,
                  "type": "contract AccessControlUpgradeable"
                },
                "id": 15,
                "name": "UserDefinedTypeName",
                "src": "632:24:0"
              }
            ],
            "id": 16,
            "name": "InheritanceSpecifier",
            "src": "632:24:0"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeMathUpgradeable",
                  "referencedDeclaration": 7283,
                  "type": "library SafeMathUpgradeable"
                },
                "id": 17,
                "name": "UserDefinedTypeName",
                "src": "669:19:0"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 18,
                "name": "ElementaryTypeName",
                "src": "693:7:0"
              }
            ],
            "id": 19,
            "name": "UsingForDirective",
            "src": "663:38:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "sTokenContract",
              "scope": 100,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20Upgradeable",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20Upgradeable",
                  "referencedDeclaration": 7957,
                  "type": "contract IERC20Upgradeable"
                },
                "id": 20,
                "name": "UserDefinedTypeName",
                "src": "706:17:0"
              }
            ],
            "id": 21,
            "name": "VariableDeclaration",
            "src": "706:32:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_valueDivisor",
              "scope": 100,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 22,
                "name": "ElementaryTypeName",
                "src": "1075:7:0"
              }
            ],
            "id": 23,
            "name": "VariableDeclaration",
            "src": "1075:29:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_uTokens",
              "scope": 100,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IUTokens",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "IUTokens",
                  "referencedDeclaration": 3608,
                  "type": "contract IUTokens"
                },
                "id": 24,
                "name": "UserDefinedTypeName",
                "src": "1111:8:0"
              }
            ],
            "id": 25,
            "name": "VariableDeclaration",
            "src": "1111:25:0"
          },
          {
            "attributes": {
              "functionSelector": "cd6dc687",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initialize",
              "scope": 100,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Constructor for initializing the Holder Uniswap contract.\n @param _sTokenContractAddress - address of the SToken contract.\n @param valueDivisor - valueDivisor set to 10^9."
                },
                "id": 26,
                "name": "StructuredDocumentation",
                "src": "1606:199:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_sTokenContractAddress",
                      "scope": 49,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 27,
                        "name": "ElementaryTypeName",
                        "src": "1830:7:0"
                      }
                    ],
                    "id": 28,
                    "name": "VariableDeclaration",
                    "src": "1830:30:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "valueDivisor",
                      "scope": 49,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 29,
                        "name": "ElementaryTypeName",
                        "src": "1862:7:0"
                      }
                    ],
                    "id": 30,
                    "name": "VariableDeclaration",
                    "src": "1862:20:0"
                  }
                ],
                "id": 31,
                "name": "ParameterList",
                "src": "1829:54:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 34,
                "name": "ParameterList",
                "src": "1911:0:0"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7332,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 32,
                    "name": "Identifier",
                    "src": "1899:11:0"
                  }
                ],
                "id": 33,
                "name": "ModifierInvocation",
                "src": "1899:11:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6643,
                              "type": "function ()",
                              "value": "__AccessControl_init"
                            },
                            "id": 35,
                            "name": "Identifier",
                            "src": "1921:20:0"
                          }
                        ],
                        "id": 36,
                        "name": "FunctionCall",
                        "src": "1921:22:0"
                      }
                    ],
                    "id": 37,
                    "name": "ExpressionStatement",
                    "src": "1921:22:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20Upgradeable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 21,
                              "type": "contract IERC20Upgradeable",
                              "value": "sTokenContract"
                            },
                            "id": 38,
                            "name": "Identifier",
                            "src": "1953:14:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20Upgradeable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7957,
                                  "type": "type(contract IERC20Upgradeable)",
                                  "value": "IERC20Upgradeable"
                                },
                                "id": 39,
                                "name": "Identifier",
                                "src": "1970:17:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 28,
                                  "type": "address",
                                  "value": "_sTokenContractAddress"
                                },
                                "id": 40,
                                "name": "Identifier",
                                "src": "1988:22:0"
                              }
                            ],
                            "id": 41,
                            "name": "FunctionCall",
                            "src": "1970:41:0"
                          }
                        ],
                        "id": 42,
                        "name": "Assignment",
                        "src": "1953:58:0"
                      }
                    ],
                    "id": 43,
                    "name": "ExpressionStatement",
                    "src": "1953:58:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 23,
                              "type": "uint256",
                              "value": "_valueDivisor"
                            },
                            "id": 44,
                            "name": "Identifier",
                            "src": "2021:13:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 30,
                              "type": "uint256",
                              "value": "valueDivisor"
                            },
                            "id": 45,
                            "name": "Identifier",
                            "src": "2037:12:0"
                          }
                        ],
                        "id": 46,
                        "name": "Assignment",
                        "src": "2021:28:0"
                      }
                    ],
                    "id": 47,
                    "name": "ExpressionStatement",
                    "src": "2021:28:0"
                  }
                ],
                "id": 48,
                "name": "Block",
                "src": "1911:145:0"
              }
            ],
            "id": 49,
            "name": "FunctionDefinition",
            "src": "1810:246:0"
          },
          {
            "attributes": {
              "baseFunctions": [
                3223
              ],
              "functionSelector": "cfd0ec31",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getSTokenSupply",
              "scope": 100,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev get SToken reserve supply of the whitelisted contract "
                },
                "id": 50,
                "name": "StructuredDocumentation",
                "src": "2523:85:0"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 58,
                "name": "OverrideSpecifier",
                "src": "2687:8:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 72,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 51,
                        "name": "ElementaryTypeName",
                        "src": "2638:7:0"
                      }
                    ],
                    "id": 52,
                    "name": "VariableDeclaration",
                    "src": "2638:10:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "from",
                      "scope": 72,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 53,
                        "name": "ElementaryTypeName",
                        "src": "2650:7:0"
                      }
                    ],
                    "id": 54,
                    "name": "VariableDeclaration",
                    "src": "2650:12:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 72,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 55,
                        "name": "ElementaryTypeName",
                        "src": "2664:7:0"
                      }
                    ],
                    "id": 56,
                    "name": "VariableDeclaration",
                    "src": "2664:14:0"
                  }
                ],
                "id": 57,
                "name": "ParameterList",
                "src": "2637:42:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "sTokenSupply",
                      "scope": 72,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 59,
                        "name": "ElementaryTypeName",
                        "src": "2710:7:0"
                      }
                    ],
                    "id": 60,
                    "name": "VariableDeclaration",
                    "src": "2710:20:0"
                  }
                ],
                "id": 61,
                "name": "ParameterList",
                "src": "2709:22:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 60,
                              "type": "uint256",
                              "value": "sTokenSupply"
                            },
                            "id": 62,
                            "name": "Identifier",
                            "src": "2741:12:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "balanceOf",
                                  "referencedDeclaration": 7896,
                                  "type": "function (address) view external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 21,
                                      "type": "contract IERC20Upgradeable",
                                      "value": "sTokenContract"
                                    },
                                    "id": 63,
                                    "name": "Identifier",
                                    "src": "2756:14:0"
                                  }
                                ],
                                "id": 64,
                                "name": "MemberAccess",
                                "src": "2756:24:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 52,
                                  "type": "address",
                                  "value": "to"
                                },
                                "id": 65,
                                "name": "Identifier",
                                "src": "2781:2:0"
                              }
                            ],
                            "id": 66,
                            "name": "FunctionCall",
                            "src": "2756:28:0"
                          }
                        ],
                        "id": 67,
                        "name": "Assignment",
                        "src": "2741:43:0"
                      }
                    ],
                    "id": 68,
                    "name": "ExpressionStatement",
                    "src": "2741:43:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 61
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 60,
                          "type": "uint256",
                          "value": "sTokenSupply"
                        },
                        "id": 69,
                        "name": "Identifier",
                        "src": "2801:12:0"
                      }
                    ],
                    "id": 70,
                    "name": "Return",
                    "src": "2794:19:0"
                  }
                ],
                "id": 71,
                "name": "Block",
                "src": "2731:89:0"
              }
            ],
            "id": 72,
            "name": "FunctionDefinition",
            "src": "2613:207:0"
          },
          {
            "attributes": {
              "baseFunctions": [
                3211
              ],
              "functionSelector": "21bdf9e5",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "setUTokensContract",
              "scope": 100,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev redeem rewards from holder contract"
                },
                "id": 73,
                "name": "StructuredDocumentation",
                "src": "8268:57:0"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 77,
                "name": "OverrideSpecifier",
                "src": "10039:8:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "uTokenContract",
                      "scope": 99,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 74,
                        "name": "ElementaryTypeName",
                        "src": "10000:7:0"
                      }
                    ],
                    "id": 75,
                    "name": "VariableDeclaration",
                    "src": "10000:22:0"
                  }
                ],
                "id": 76,
                "name": "ParameterList",
                "src": "9999:24:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 78,
                "name": "ParameterList",
                "src": "10048:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e8a2d00750a0fb59da5db9e28d53493bfe7ea44350f075a385ef9ccfb20187a1",
                                  "typeString": "literal_string \"HU1\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 79,
                            "name": "Identifier",
                            "src": "10058:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6713,
                                  "type": "function (bytes32,address) view returns (bool)",
                                  "value": "hasRole"
                                },
                                "id": 80,
                                "name": "Identifier",
                                "src": "10066:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6667,
                                  "type": "bytes32",
                                  "value": "DEFAULT_ADMIN_ROLE"
                                },
                                "id": 81,
                                "name": "Identifier",
                                "src": "10074:18:0"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8230,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 82,
                                    "name": "Identifier",
                                    "src": "10094:10:0"
                                  }
                                ],
                                "id": 83,
                                "name": "FunctionCall",
                                "src": "10094:12:0"
                              }
                            ],
                            "id": 84,
                            "name": "FunctionCall",
                            "src": "10066:41:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "485531",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"HU1\"",
                              "value": "HU1"
                            },
                            "id": 85,
                            "name": "Literal",
                            "src": "10109:5:0"
                          }
                        ],
                        "id": 86,
                        "name": "FunctionCall",
                        "src": "10058:57:0"
                      }
                    ],
                    "id": 87,
                    "name": "ExpressionStatement",
                    "src": "10058:57:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IUTokens"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25,
                              "type": "contract IUTokens",
                              "value": "_uTokens"
                            },
                            "id": 88,
                            "name": "Identifier",
                            "src": "10125:8:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IUTokens",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3608,
                                  "type": "type(contract IUTokens)",
                                  "value": "IUTokens"
                                },
                                "id": 89,
                                "name": "Identifier",
                                "src": "10136:8:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 75,
                                  "type": "address",
                                  "value": "uTokenContract"
                                },
                                "id": 90,
                                "name": "Identifier",
                                "src": "10145:14:0"
                              }
                            ],
                            "id": 91,
                            "name": "FunctionCall",
                            "src": "10136:24:0"
                          }
                        ],
                        "id": 92,
                        "name": "Assignment",
                        "src": "10125:35:0"
                      }
                    ],
                    "id": 93,
                    "name": "ExpressionStatement",
                    "src": "10125:35:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3239,
                              "type": "function (address)",
                              "value": "SetUTokensContract"
                            },
                            "id": 94,
                            "name": "Identifier",
                            "src": "10175:18:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 75,
                              "type": "address",
                              "value": "uTokenContract"
                            },
                            "id": 95,
                            "name": "Identifier",
                            "src": "10194:14:0"
                          }
                        ],
                        "id": 96,
                        "name": "FunctionCall",
                        "src": "10175:34:0"
                      }
                    ],
                    "id": 97,
                    "name": "EmitStatement",
                    "src": "10170:39:0"
                  }
                ],
                "id": 98,
                "name": "Block",
                "src": "10048:168:0"
              }
            ],
            "id": 99,
            "name": "FunctionDefinition",
            "src": "9972:244:0"
          }
        ],
        "id": 100,
        "name": "ContractDefinition",
        "src": "582:13116:0"
      }
    ],
    "id": 101,
    "name": "SourceUnit",
    "src": "39:13659:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-05T12:02:06.505Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "getSTokenSupply(address,address,uint256)": {
        "details": "get SToken reserve supply of the whitelisted contract "
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "initialize(address,uint256)": {
        "details": "Constructor for initializing the Holder Uniswap contract.",
        "params": {
          "_sTokenContractAddress": "- address of the SToken contract.",
          "valueDivisor": "- valueDivisor set to 10^9."
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setUTokensContract(address)": {
        "details": "redeem rewards from holder contract"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}