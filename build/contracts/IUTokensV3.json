{
  "contractName": "IUTokensV3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "SetLiquidStakingContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "SetSTokensContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "SetWrapperContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "liquidStakingContract",
          "type": "address"
        }
      ],
      "name": "setLiquidStakingContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "stokenContract",
          "type": "address"
        }
      ],
      "name": "setSTokenContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wrapperTokensContract",
          "type": "address"
        }
      ],
      "name": "setWrapperContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"SetLiquidStakingContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"SetSTokensContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"SetWrapperContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidStakingContract\",\"type\":\"address\"}],\"name\":\"setLiquidStakingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stokenContract\",\"type\":\"address\"}],\"name\":\"setSTokenContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wrapperTokensContract\",\"type\":\"address\"}],\"name\":\"setWrapperContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the IUTokens.\",\"events\":{\"SetLiquidStakingContract(address)\":{\"details\":\"Emitted when contract addresses are set\"},\"SetSTokensContract(address)\":{\"details\":\"Emitted when contract addresses are set\"},\"SetWrapperContract(address)\":{\"details\":\"Emitted when contract addresses are set\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"burn(address,uint256)\":{\"details\":\"Burns `amount` tokens to the caller's address `from`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"mint(address,uint256)\":{\"details\":\"Mints `amount` tokens to the caller's address `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"pause()\":{\"details\":\"Triggers stopped state. Requirements: - The contract must not be paused.\"},\"setLiquidStakingContract(address)\":{\"details\":\"Set LiquidStaking smart contract.\"},\"setSTokenContract(address)\":{\"details\":\"Set STokens smart contract.\"},\"setWrapperContract(address)\":{\"details\":\"Set PegTokens smart contract.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"unpause()\":{\"details\":\"Returns to normal state. Requirements: - The contract must be paused.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IUTokensV3.sol\":\"IUTokensV3\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xa1931c47a617014f858580db625aa0dcf343796f39acd4b5b51effc092a1f0a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cbeb499bad52667b96dd7df8e9b1f583e8c07afaba0018a75e5b7ff6e777173\",\"dweb:/ipfs/QmPLJnuhEcWnpmhMHKsiuVHVxMwb5k6idYyjajbrtZLz5B\"]},\"project:/contracts/interfaces/IUTokensV3.sol\":{\"keccak256\":\"0x3caae7449abdf4f1689adf6ffd341c8e9ab67b0ad1f43e3f92ab55defd554fcc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c5e7a99d8fecb33217dc843fa0f01653d1f6fef6f9e6fa9428ae2ae7faebe0c4\",\"dweb:/ipfs/QmSPFLamSEYdpGv4Mjje8sDu98m3ZSxTssCJrA2W1wcrLb\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\n Copyright [2019] - [2021], PERSISTENCE TECHNOLOGIES PTE. LTD. and the pStake-smartContracts contributors\n SPDX-License-Identifier: Apache-2.0\n*/\n\npragma solidity >=0.7.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface of the IUTokens.\n */\ninterface IUTokensV3 is IERC20Upgradeable {\n\t/**\n\t * @dev Mints `amount` tokens to the caller's address `to`.\n\t *\n\t * Returns a boolean value indicating whether the operation succeeded.\n\t *\n\t * Emits a {Transfer} event.\n\t */\n\tfunction mint(address to, uint256 tokens) external;\n\n\t/**\n\t * @dev Burns `amount` tokens to the caller's address `from`.\n\t *\n\t * Returns a boolean value indicating whether the operation succeeded.\n\t *\n\t * Emits a {Transfer} event.\n\t */\n\tfunction burn(address from, uint256 tokens) external;\n\n\t/**\n\t * @dev Set LiquidStaking smart contract.\n\t */\n\tfunction setLiquidStakingContract(address liquidStakingContract) external;\n\n\t/**\n\t * @dev Set STokens smart contract.\n\t */\n\tfunction setSTokenContract(address stokenContract) external;\n\n\t/**\n\t * @dev Set PegTokens smart contract.\n\t */\n\tfunction setWrapperContract(address wrapperTokensContract) external;\n\n\t/**\n\t * @dev Emitted when contract addresses are set\n\t */\n\tevent SetSTokensContract(address indexed _contract);\n\n\t/**\n\t * @dev Emitted when contract addresses are set\n\t */\n\tevent SetWrapperContract(address indexed _contract);\n\n\t/**\n\t * @dev Emitted when contract addresses are set\n\t */\n\tevent SetLiquidStakingContract(address indexed _contract);\n\n\t/**\n\t * @dev Triggers stopped state.\n\t *\n\t * Requirements:\n\t *\n\t * - The contract must not be paused.\n\t */\n\tfunction pause() external;\n\n\t/**\n\t * @dev Returns to normal state.\n\t *\n\t * Requirements:\n\t *\n\t * - The contract must be paused.\n\t */\n\tfunction unpause() external;\n}\n",
  "sourcePath": "/Users/aditimaheshwari/Documents/Work/Persistence/Codebase/persistenceOne/pStake-smartContracts/contracts/interfaces/IUTokensV3.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IUTokensV3.sol",
    "exportedSymbols": {
      "IERC20Upgradeable": [
        1336
      ],
      "IUTokensV3": [
        40538
      ]
    },
    "id": 40539,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 40476,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "150:24:71"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "id": 40477,
        "nodeType": "ImportDirective",
        "scope": 40539,
        "sourceUnit": 1337,
        "src": "176:79:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40479,
              "name": "IERC20Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1336,
              "src": "324:17:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$1336",
                "typeString": "contract IERC20Upgradeable"
              }
            },
            "id": 40480,
            "nodeType": "InheritanceSpecifier",
            "src": "324:17:71"
          }
        ],
        "contractDependencies": [
          1336
        ],
        "contractKind": "interface",
        "documentation": {
          "id": 40478,
          "nodeType": "StructuredDocumentation",
          "src": "257:42:71",
          "text": " @dev Interface of the IUTokens."
        },
        "fullyImplemented": false,
        "id": 40538,
        "linearizedBaseContracts": [
          40538,
          1336
        ],
        "name": "IUTokensV3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 40481,
              "nodeType": "StructuredDocumentation",
              "src": "345:179:71",
              "text": " @dev Mints `amount` tokens to the caller's address `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
            },
            "functionSelector": "40c10f19",
            "id": 40488,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40483,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 40488,
                  "src": "540:10:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40485,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 40488,
                  "src": "552:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "539:28:71"
            },
            "returnParameters": {
              "id": 40487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:0:71"
            },
            "scope": 40538,
            "src": "526:51:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 40489,
              "nodeType": "StructuredDocumentation",
              "src": "580:181:71",
              "text": " @dev Burns `amount` tokens to the caller's address `from`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
            },
            "functionSelector": "9dc29fac",
            "id": 40496,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40491,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 40496,
                  "src": "777:12:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40493,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 40496,
                  "src": "791:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "776:30:71"
            },
            "returnParameters": {
              "id": 40495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "815:0:71"
            },
            "scope": 40538,
            "src": "763:53:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 40497,
              "nodeType": "StructuredDocumentation",
              "src": "819:51:71",
              "text": " @dev Set LiquidStaking smart contract."
            },
            "functionSelector": "58f8943e",
            "id": 40502,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setLiquidStakingContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40499,
                  "mutability": "mutable",
                  "name": "liquidStakingContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 40502,
                  "src": "906:29:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:31:71"
            },
            "returnParameters": {
              "id": 40501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "945:0:71"
            },
            "scope": 40538,
            "src": "872:74:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 40503,
              "nodeType": "StructuredDocumentation",
              "src": "949:45:71",
              "text": " @dev Set STokens smart contract."
            },
            "functionSelector": "e8cb7844",
            "id": 40508,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSTokenContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40505,
                  "mutability": "mutable",
                  "name": "stokenContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 40508,
                  "src": "1023:22:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1022:24:71"
            },
            "returnParameters": {
              "id": 40507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1055:0:71"
            },
            "scope": 40538,
            "src": "996:60:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 40509,
              "nodeType": "StructuredDocumentation",
              "src": "1059:47:71",
              "text": " @dev Set PegTokens smart contract."
            },
            "functionSelector": "4e558127",
            "id": 40514,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setWrapperContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40511,
                  "mutability": "mutable",
                  "name": "wrapperTokensContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 40514,
                  "src": "1136:29:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1135:31:71"
            },
            "returnParameters": {
              "id": 40513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1175:0:71"
            },
            "scope": 40538,
            "src": "1108:68:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 40515,
              "nodeType": "StructuredDocumentation",
              "src": "1179:57:71",
              "text": " @dev Emitted when contract addresses are set"
            },
            "id": 40519,
            "name": "SetSTokensContract",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 40518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40517,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 40519,
                  "src": "1263:25:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1262:27:71"
            },
            "src": "1238:52:71"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 40520,
              "nodeType": "StructuredDocumentation",
              "src": "1293:57:71",
              "text": " @dev Emitted when contract addresses are set"
            },
            "id": 40524,
            "name": "SetWrapperContract",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 40523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40522,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 40524,
                  "src": "1377:25:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1376:27:71"
            },
            "src": "1352:52:71"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 40525,
              "nodeType": "StructuredDocumentation",
              "src": "1407:57:71",
              "text": " @dev Emitted when contract addresses are set"
            },
            "id": 40529,
            "name": "SetLiquidStakingContract",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 40528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40527,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 40529,
                  "src": "1497:25:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1496:27:71"
            },
            "src": "1466:58:71"
          },
          {
            "documentation": {
              "id": 40530,
              "nodeType": "StructuredDocumentation",
              "src": "1527:106:71",
              "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
            },
            "functionSelector": "8456cb59",
            "id": 40533,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1649:2:71"
            },
            "returnParameters": {
              "id": 40532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1660:0:71"
            },
            "scope": 40538,
            "src": "1635:26:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 40534,
              "nodeType": "StructuredDocumentation",
              "src": "1664:103:71",
              "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
            },
            "functionSelector": "3f4ba83a",
            "id": 40537,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1785:2:71"
            },
            "returnParameters": {
              "id": 40536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1796:0:71"
            },
            "scope": 40538,
            "src": "1769:28:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 40539,
        "src": "300:1499:71"
      }
    ],
    "src": "150:1650:71"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/interfaces/IUTokensV3.sol",
      "exportedSymbols": {
        "IERC20Upgradeable": [
          1336
        ],
        "IUTokensV3": [
          40538
        ]
      },
      "license": "Apache-2.0"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.7",
            ".0"
          ]
        },
        "id": 40476,
        "name": "PragmaDirective",
        "src": "150:24:71"
      },
      {
        "attributes": {
          "SourceUnit": 1337,
          "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
          "scope": 40539,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 40477,
        "name": "ImportDirective",
        "src": "176:79:71"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            1336
          ],
          "contractKind": "interface",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            40538,
            1336
          ],
          "name": "IUTokensV3",
          "scope": 40539
        },
        "children": [
          {
            "attributes": {
              "text": " @dev Interface of the IUTokens."
            },
            "id": 40478,
            "name": "StructuredDocumentation",
            "src": "257:42:71"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IERC20Upgradeable",
                  "referencedDeclaration": 1336,
                  "type": "contract IERC20Upgradeable"
                },
                "id": 40479,
                "name": "UserDefinedTypeName",
                "src": "324:17:71"
              }
            ],
            "id": 40480,
            "name": "InheritanceSpecifier",
            "src": "324:17:71"
          },
          {
            "attributes": {
              "functionSelector": "40c10f19",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 40538,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Mints `amount` tokens to the caller's address `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                },
                "id": 40481,
                "name": "StructuredDocumentation",
                "src": "345:179:71"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 40488,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 40482,
                        "name": "ElementaryTypeName",
                        "src": "540:7:71"
                      }
                    ],
                    "id": 40483,
                    "name": "VariableDeclaration",
                    "src": "540:10:71"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokens",
                      "scope": 40488,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 40484,
                        "name": "ElementaryTypeName",
                        "src": "552:7:71"
                      }
                    ],
                    "id": 40485,
                    "name": "VariableDeclaration",
                    "src": "552:14:71"
                  }
                ],
                "id": 40486,
                "name": "ParameterList",
                "src": "539:28:71"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40487,
                "name": "ParameterList",
                "src": "576:0:71"
              }
            ],
            "id": 40488,
            "name": "FunctionDefinition",
            "src": "526:51:71"
          },
          {
            "attributes": {
              "functionSelector": "9dc29fac",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "burn",
              "scope": 40538,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Burns `amount` tokens to the caller's address `from`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                },
                "id": 40489,
                "name": "StructuredDocumentation",
                "src": "580:181:71"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "from",
                      "scope": 40496,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 40490,
                        "name": "ElementaryTypeName",
                        "src": "777:7:71"
                      }
                    ],
                    "id": 40491,
                    "name": "VariableDeclaration",
                    "src": "777:12:71"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokens",
                      "scope": 40496,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 40492,
                        "name": "ElementaryTypeName",
                        "src": "791:7:71"
                      }
                    ],
                    "id": 40493,
                    "name": "VariableDeclaration",
                    "src": "791:14:71"
                  }
                ],
                "id": 40494,
                "name": "ParameterList",
                "src": "776:30:71"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40495,
                "name": "ParameterList",
                "src": "815:0:71"
              }
            ],
            "id": 40496,
            "name": "FunctionDefinition",
            "src": "763:53:71"
          },
          {
            "attributes": {
              "functionSelector": "58f8943e",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "setLiquidStakingContract",
              "scope": 40538,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Set LiquidStaking smart contract."
                },
                "id": 40497,
                "name": "StructuredDocumentation",
                "src": "819:51:71"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "liquidStakingContract",
                      "scope": 40502,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 40498,
                        "name": "ElementaryTypeName",
                        "src": "906:7:71"
                      }
                    ],
                    "id": 40499,
                    "name": "VariableDeclaration",
                    "src": "906:29:71"
                  }
                ],
                "id": 40500,
                "name": "ParameterList",
                "src": "905:31:71"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40501,
                "name": "ParameterList",
                "src": "945:0:71"
              }
            ],
            "id": 40502,
            "name": "FunctionDefinition",
            "src": "872:74:71"
          },
          {
            "attributes": {
              "functionSelector": "e8cb7844",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "setSTokenContract",
              "scope": 40538,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Set STokens smart contract."
                },
                "id": 40503,
                "name": "StructuredDocumentation",
                "src": "949:45:71"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "stokenContract",
                      "scope": 40508,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 40504,
                        "name": "ElementaryTypeName",
                        "src": "1023:7:71"
                      }
                    ],
                    "id": 40505,
                    "name": "VariableDeclaration",
                    "src": "1023:22:71"
                  }
                ],
                "id": 40506,
                "name": "ParameterList",
                "src": "1022:24:71"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40507,
                "name": "ParameterList",
                "src": "1055:0:71"
              }
            ],
            "id": 40508,
            "name": "FunctionDefinition",
            "src": "996:60:71"
          },
          {
            "attributes": {
              "functionSelector": "4e558127",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "setWrapperContract",
              "scope": 40538,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Set PegTokens smart contract."
                },
                "id": 40509,
                "name": "StructuredDocumentation",
                "src": "1059:47:71"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "wrapperTokensContract",
                      "scope": 40514,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 40510,
                        "name": "ElementaryTypeName",
                        "src": "1136:7:71"
                      }
                    ],
                    "id": 40511,
                    "name": "VariableDeclaration",
                    "src": "1136:29:71"
                  }
                ],
                "id": 40512,
                "name": "ParameterList",
                "src": "1135:31:71"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40513,
                "name": "ParameterList",
                "src": "1175:0:71"
              }
            ],
            "id": 40514,
            "name": "FunctionDefinition",
            "src": "1108:68:71"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "SetSTokensContract"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Emitted when contract addresses are set"
                },
                "id": 40515,
                "name": "StructuredDocumentation",
                "src": "1179:57:71"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "_contract",
                      "scope": 40519,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 40516,
                        "name": "ElementaryTypeName",
                        "src": "1263:7:71"
                      }
                    ],
                    "id": 40517,
                    "name": "VariableDeclaration",
                    "src": "1263:25:71"
                  }
                ],
                "id": 40518,
                "name": "ParameterList",
                "src": "1262:27:71"
              }
            ],
            "id": 40519,
            "name": "EventDefinition",
            "src": "1238:52:71"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "SetWrapperContract"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Emitted when contract addresses are set"
                },
                "id": 40520,
                "name": "StructuredDocumentation",
                "src": "1293:57:71"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "_contract",
                      "scope": 40524,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 40521,
                        "name": "ElementaryTypeName",
                        "src": "1377:7:71"
                      }
                    ],
                    "id": 40522,
                    "name": "VariableDeclaration",
                    "src": "1377:25:71"
                  }
                ],
                "id": 40523,
                "name": "ParameterList",
                "src": "1376:27:71"
              }
            ],
            "id": 40524,
            "name": "EventDefinition",
            "src": "1352:52:71"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "SetLiquidStakingContract"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Emitted when contract addresses are set"
                },
                "id": 40525,
                "name": "StructuredDocumentation",
                "src": "1407:57:71"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "_contract",
                      "scope": 40529,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 40526,
                        "name": "ElementaryTypeName",
                        "src": "1497:7:71"
                      }
                    ],
                    "id": 40527,
                    "name": "VariableDeclaration",
                    "src": "1497:25:71"
                  }
                ],
                "id": 40528,
                "name": "ParameterList",
                "src": "1496:27:71"
              }
            ],
            "id": 40529,
            "name": "EventDefinition",
            "src": "1466:58:71"
          },
          {
            "attributes": {
              "functionSelector": "8456cb59",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "pause",
              "scope": 40538,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                },
                "id": 40530,
                "name": "StructuredDocumentation",
                "src": "1527:106:71"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40531,
                "name": "ParameterList",
                "src": "1649:2:71"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40532,
                "name": "ParameterList",
                "src": "1660:0:71"
              }
            ],
            "id": 40533,
            "name": "FunctionDefinition",
            "src": "1635:26:71"
          },
          {
            "attributes": {
              "functionSelector": "3f4ba83a",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "unpause",
              "scope": 40538,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                },
                "id": 40534,
                "name": "StructuredDocumentation",
                "src": "1664:103:71"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40535,
                "name": "ParameterList",
                "src": "1785:2:71"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40536,
                "name": "ParameterList",
                "src": "1796:0:71"
              }
            ],
            "id": 40537,
            "name": "FunctionDefinition",
            "src": "1769:28:71"
          }
        ],
        "id": 40538,
        "name": "ContractDefinition",
        "src": "300:1499:71"
      }
    ],
    "id": 40539,
    "name": "SourceUnit",
    "src": "150:1650:71"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-09-09T10:57:49.902Z",
  "devdoc": {
    "details": "Interface of the IUTokens.",
    "events": {
      "SetLiquidStakingContract(address)": {
        "details": "Emitted when contract addresses are set"
      },
      "SetSTokensContract(address)": {
        "details": "Emitted when contract addresses are set"
      },
      "SetWrapperContract(address)": {
        "details": "Emitted when contract addresses are set"
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "burn(address,uint256)": {
        "details": "Burns `amount` tokens to the caller's address `from`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "mint(address,uint256)": {
        "details": "Mints `amount` tokens to the caller's address `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "pause()": {
        "details": "Triggers stopped state. Requirements: - The contract must not be paused."
      },
      "setLiquidStakingContract(address)": {
        "details": "Set LiquidStaking smart contract."
      },
      "setSTokenContract(address)": {
        "details": "Set STokens smart contract."
      },
      "setWrapperContract(address)": {
        "details": "Set PegTokens smart contract."
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "unpause()": {
        "details": "Returns to normal state. Requirements: - The contract must be paused."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}