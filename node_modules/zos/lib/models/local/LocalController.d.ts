import { BuildArtifacts, TxParams } from 'zos-lib';
import NetworkController from '../network/NetworkController';
import ZosPackageFile from '../files/ZosPackageFile';
import ZosNetworkFile from '../files/ZosNetworkFile';
export default class LocalController {
    packageFile: ZosPackageFile;
    constructor(packageFile?: ZosPackageFile, init?: boolean);
    init(name: string, version: string, force?: boolean, publish?: boolean): void | never;
    initZosPackageFile(name: string, version: string, force: boolean, publish: boolean): void | never;
    bumpVersion(version: string): void;
    add(contractAlias: string, contractName: string): void;
    addAll(): void;
    remove(contractAlias: string): void;
    checkCanAdd(contractName: string): void | never;
    validateAll(): boolean;
    validate(contractAlias: string, buildArtifacts?: BuildArtifacts): boolean;
    hasBytecode(contractDataPath: string): boolean;
    getContractSourcePath(contractAlias: string): {
        sourcePath: string;
        compilerVersion: string;
    } | never;
    writePackage(): void;
    linkDependencies(dependencies: string[], installDependencies?: boolean): Promise<void>;
    unlinkDependencies(dependenciesNames: string[]): void;
    onNetwork(network: string, txParams: TxParams, networkFile?: ZosNetworkFile): NetworkController;
}
